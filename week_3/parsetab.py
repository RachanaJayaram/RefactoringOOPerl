
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'package_decBRACES_LEFT BRACES_RIGHT COMMA COMMENT DEREF EQUAL HASH_OP MY NAME NEW NUMBER PACKAGE PARANTHESIS_L PARANTHESIS_R PRINT RETURN SEMI SHIFT STRING SUBbody : statement_list\n            | empty          \n            statement_list : statement\n                    | statement_list statementstatement : var_dec\n                 | function_dec\n                 | comment                               \n            package_dec : PACKAGE NAME SEMI bodyfunction_dec : SUB NAME  braces_left body braces_rightvar_dec : MY NAME EQUAL SHIFT SEMIcomment : COMMENTbraces_left : BRACES_LEFTbraces_right : BRACES_RIGHTempty :'
    
_lr_action_items = {'PACKAGE':([0,],[2,]),'$end':([1,4,5,6,7,8,9,10,11,14,15,23,24,25,],[0,-14,-8,-1,-2,-3,-5,-6,-7,-11,-4,-10,-9,-13,]),'NAME':([2,12,13,],[3,16,17,]),'SEMI':([3,21,],[4,23,]),'MY':([4,6,8,9,10,11,14,15,19,20,23,24,25,],[12,12,-3,-5,-6,-7,-11,-4,12,-12,-10,-9,-13,]),'SUB':([4,6,8,9,10,11,14,15,19,20,23,24,25,],[13,13,-3,-5,-6,-7,-11,-4,13,-12,-10,-9,-13,]),'COMMENT':([4,6,8,9,10,11,14,15,19,20,23,24,25,],[14,14,-3,-5,-6,-7,-11,-4,14,-12,-10,-9,-13,]),'BRACES_RIGHT':([6,7,8,9,10,11,14,15,19,20,22,23,24,25,],[-1,-2,-3,-5,-6,-7,-11,-4,-14,-12,25,-10,-9,-13,]),'EQUAL':([16,],[18,]),'BRACES_LEFT':([17,],[20,]),'SHIFT':([18,],[21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'package_dec':([0,],[1,]),'body':([4,19,],[5,22,]),'statement_list':([4,19,],[6,6,]),'empty':([4,19,],[7,7,]),'statement':([4,6,19,],[8,15,8,]),'var_dec':([4,6,19,],[9,9,9,]),'function_dec':([4,6,19,],[10,10,10,]),'comment':([4,6,19,],[11,11,11,]),'braces_left':([17,],[19,]),'braces_right':([22,],[24,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> package_dec","S'",1,None,None,None),
  ('body -> statement_list','body',1,'p_body','parser.py',9),
  ('body -> empty','body',1,'p_body','parser.py',10),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',15),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',16),
  ('statement -> var_dec','statement',1,'p_statement','parser.py',19),
  ('statement -> function_dec','statement',1,'p_statement','parser.py',20),
  ('statement -> comment','statement',1,'p_statement','parser.py',21),
  ('package_dec -> PACKAGE NAME SEMI body','package_dec',4,'p_package_dec','parser.py',26),
  ('function_dec -> SUB NAME braces_left body braces_right','function_dec',5,'p_function_dec','parser.py',32),
  ('var_dec -> MY NAME EQUAL SHIFT SEMI','var_dec',5,'p_var_dec','parser.py',37),
  ('comment -> COMMENT','comment',1,'p_comment','parser.py',43),
  ('braces_left -> BRACES_LEFT','braces_left',1,'p_braces_left','parser.py',48),
  ('braces_right -> BRACES_RIGHT','braces_right',1,'p_braces_right','parser.py',53),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',58),
]
