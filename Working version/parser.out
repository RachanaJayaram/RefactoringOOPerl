Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QW
    RANGE

Grammar

Rule 0     S' -> start
Rule 1     object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
Rule 2     print_st -> PRINT HANDLE
Rule 3     print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
Rule 4     constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
Rule 5     control_statements -> iterative
Rule 6     control_statements -> conditional
Rule 7     obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
Rule 8     constructor_body -> statement constructor_hash bless_st return_constructor
Rule 9     constructor_hash -> my ASSIGNOP BRACES_LEFT hash_statement_list BRACES_RIGHT SEMI
Rule 10    iterative -> for_st
Rule 11    iterative -> while_st
Rule 12    iterative -> do_while_st
Rule 13    iterative -> until_st
Rule 14    iterative -> foreach_st
Rule 15    start -> not_package
Rule 16    start -> package
Rule 17    hash_statement_list -> hash_statement
Rule 18    hash_statement_list -> hash_statement_list COMMA hash_statement
Rule 19    array_statement -> PARANTHESIS_L arg_list PARANTHESIS_R
Rule 20    array_statement -> PARANTHESIS_L NUMBER DOTDOT NUMBER PARANTHESIS_R
Rule 21    not_package -> body
Rule 22    hash_statement -> NAME HASH_OP SHIFT
Rule 23    hash_statement -> NAME HASH_OP term
Rule 24    for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 25    for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 26    body -> statement_list
Rule 27    body -> empty
Rule 28    statement_list -> statement
Rule 29    statement_list -> statement_list statement
Rule 30    bless_st -> BLESS PARANTHESIS_L NAME COMMA NAME PARANTHESIS_R SEMI
Rule 31    sub_script -> NAME [ term ]
Rule 32    return_constructor -> RETURN NAME SEMI
Rule 33    termbinop -> term POWOP term
Rule 34    termbinop -> term MULOP term
Rule 35    termbinop -> term ADDOP term
Rule 36    termbinop -> term SHIFTOP term
Rule 37    termbinop -> term RELOP term
Rule 38    termbinop -> term EQOP term
Rule 39    termbinop -> term BITANDOP term
Rule 40    termbinop -> term BITOROP term
Rule 41    termbinop -> term DOTDOT term
Rule 42    termbinop -> term ANDAND term
Rule 43    termbinop -> term OROR term
Rule 44    termbinop -> term DORDOR term
Rule 45    termbinop -> term MATCHOP term
Rule 46    termbinop -> term WAND term
Rule 47    termbinop -> term WOR term
Rule 48    termbinop -> term WXOR term
Rule 49    HANDLE -> arg_list
Rule 50    HANDLE -> NAME arg_list
Rule 51    foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 52    while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 53    while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 54    statement -> var_dec
Rule 55    statement -> function_dec
Rule 56    statement -> constructor
Rule 57    statement -> object_creation
Rule 58    statement -> obj_func_call
Rule 59    statement -> control_statements
Rule 60    statement -> print_st SEMI
Rule 61    statement -> print_st
Rule 62    statement -> use_st
Rule 63    statement -> arg_list SEMI
Rule 64    statement -> comment
Rule 65    arg_list -> arg
Rule 66    arg_list -> arg_list COMMA arg
Rule 67    arg -> term
Rule 68    arg -> empty
Rule 69    do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
Rule 70    package -> package_dec body
Rule 71    until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 72    var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
Rule 73    package_dec -> PACKAGE NAME SEMI
Rule 74    conditional -> if_st
Rule 75    conditional -> else_st
Rule 76    conditional -> elsif_st
Rule 77    conditional -> unless_st
Rule 78    use_st -> USE NAME SEMI
Rule 79    my -> MY
Rule 80    my -> <empty>
Rule 81    function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT
Rule 82    block -> braces_left body braces_right
Rule 83    if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 84    if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 85    braces_left -> BRACES_LEFT
Rule 86    else_st -> ELSE BRACES_LEFT body BRACES_RIGHT
Rule 87    braces_right -> BRACES_RIGHT
Rule 88    var_dec -> my NAME ASSIGNOP SHIFT SEMI
Rule 89    var_dec -> my NAME ASSIGNOP term SEMI
Rule 90    var_dec -> NAME ASSIGNOP SHIFT SEMI
Rule 91    var_dec -> NAME ASSIGNOP term SEMI
Rule 92    var_dec -> NAME ASSIGNOP array_statement SEMI
Rule 93    var_dec -> sub_script ASSIGNOP term SEMI
Rule 94    elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 95    elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 96    unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 97    unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
Rule 98    termunop -> ADDOP term
Rule 99    termunop -> ! term
Rule 100   termunop -> ~ term
Rule 101   termunop -> term INCREMENT
Rule 102   termunop -> term DECREMENT
Rule 103   termunop -> term DEREF
Rule 104   termunop -> INCREMENT term
Rule 105   termunop -> DECREMENT term
Rule 106   termunop -> WNOT term
Rule 107   empty -> <empty>
Rule 108   comment -> COMMENT
Rule 109   term -> termbinop
Rule 110   term -> termunop
Rule 111   term -> PARANTHESIS_L term PARANTHESIS_R
Rule 112   term -> NAME
Rule 113   term -> NUMBER
Rule 114   term -> STRING
Rule 115   term -> var_deref
Rule 116   term -> sub_script
Rule 117   term -> term ? term : term
Rule 118   term -> Q BRACES_LEFT NAME BRACES_RIGHT
Rule 119   term -> QQ BRACES_LEFT NAME BRACES_RIGHT
Rule 120   term -> QX BRACES_LEFT NAME BRACES_RIGHT

Terminals, with rules where they appear

!                    : 99
:                    : 117
?                    : 117
ADDOP                : 35 98
ANDAND               : 42
ASSIGNOP             : 1 9 24 25 88 89 90 91 92 93
BITANDOP             : 39
BITOROP              : 40
BLESS                : 30
BRACES_LEFT          : 4 9 24 25 51 52 53 69 71 72 81 83 84 85 86 94 95 96 97 118 119 120
BRACES_RIGHT         : 4 9 24 25 51 52 53 69 71 72 81 83 84 86 87 94 95 96 97 118 119 120
COMMA                : 18 30 66
COMMENT              : 108
DECREMENT            : 25 102 105
DEREF                : 1 7 72 103
DO                   : 69
DORDOR               : 44
DOTDOT               : 20 41
ELSE                 : 86
ELSIF                : 94 95
EQOP                 : 38 84 95 97
FOR                  : 24 25
FOREACH              : 51
HASH_OP              : 22 23
IF                   : 83 84
INCREMENT            : 24 101 104
MATCHOP              : 45
MULOP                : 34
MY                   : 79
NAME                 : 1 1 7 7 22 23 24 24 24 25 25 25 30 30 31 32 50 51 51 52 69 71 72 72 73 78 81 83 84 88 89 90 91 92 94 95 96 97 112 118 119 120
NEW                  : 1 4
NUMBER               : 20 20 24 24 25 25 52 53 69 71 83 84 94 95 96 97 113
OROR                 : 43
PACKAGE              : 73
PARANTHESIS_L        : 1 3 7 19 20 24 25 30 51 52 53 69 71 83 84 94 95 96 97 111
PARANTHESIS_R        : 1 3 7 19 20 24 25 30 51 52 53 69 71 83 84 94 95 96 97 111
POWOP                : 33
PRINT                : 2 3
Q                    : 118
QQ                   : 119
QW                   : 
QX                   : 120
RANGE                : 
RELOP                : 24 25 37 52 69 71 83 94 96
RETURN               : 32
SEMI                 : 1 7 9 24 24 25 25 30 32 60 63 73 78 88 89 90 91 92 93
SHIFT                : 22 88 90
SHIFTOP              : 36
STRING               : 114
SUB                  : 4 81
UNLESS               : 96 97
UNTIL                : 71
USE                  : 78
WAND                 : 46
WHILE                : 52 53 69
WNOT                 : 106
WOR                  : 47
WXOR                 : 48
[                    : 31
]                    : 31
error                : 
~                    : 100

Nonterminals, with rules where they appear

HANDLE               : 2 3
arg                  : 65 66
arg_list             : 1 7 19 49 50 63 66
array_statement      : 92
bless_st             : 8
block                : 
body                 : 21 24 25 51 52 53 69 70 71 81 82 83 84 86 94 95 96 97
braces_left          : 82
braces_right         : 82
comment              : 64
conditional          : 6
constructor          : 56
constructor_body     : 4
constructor_hash     : 8
control_statements   : 59
do_while_st          : 12
else_st              : 75
elsif_st             : 76
empty                : 27 68
for_st               : 10
foreach_st           : 14
function_dec         : 55
hash_statement       : 17 18
hash_statement_list  : 9 18
if_st                : 74
iterative            : 5
my                   : 9 88 89
not_package          : 15
obj_func_call        : 58
object_creation      : 57
package              : 16
package_dec          : 70
print_st             : 60 61
return_constructor   : 8
start                : 0
statement            : 8 28 29
statement_list       : 26 29
sub_script           : 93 116
term                 : 23 31 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 67 89 91 93 98 99 100 101 102 103 104 105 106 111 117 117 117
termbinop            : 109
termunop             : 110
unless_st            : 77
until_st             : 13
use_st               : 62
var_dec              : 54
var_deref            : 115
while_st             : 11

Parsing method: LALR

state 0

    (0) S' -> . start
    (15) start -> . not_package
    (16) start -> . package
    (21) not_package -> . body
    (70) package -> . package_dec body
    (26) body -> . statement_list
    (27) body -> . empty
    (73) package_dec -> . PACKAGE NAME SEMI
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    PACKAGE         shift and go to state 8
    $end            reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    start                          shift and go to state 1
    not_package                    shift and go to state 2
    package                        shift and go to state 3
    body                           shift and go to state 4
    package_dec                    shift and go to state 5
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 1

    (0) S' -> start .



state 2

    (15) start -> not_package .

    $end            reduce using rule 15 (start -> not_package .)


state 3

    (16) start -> package .

    $end            reduce using rule 16 (start -> package .)


state 4

    (21) not_package -> body .

    $end            reduce using rule 21 (not_package -> body .)


state 5

    (70) package -> package_dec . body
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    $end            reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 65
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 6

    (26) body -> statement_list .
    (29) statement_list -> statement_list . statement
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (107) empty -> .
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    $end            reduce using rule 26 (body -> statement_list .)
    BRACES_RIGHT    reduce using rule 26 (body -> statement_list .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    statement                      shift and go to state 66
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    empty                          shift and go to state 67
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 7

    (27) body -> empty .
    (68) arg -> empty .

    $end            reduce using rule 27 (body -> empty .)
    BRACES_RIGHT    reduce using rule 27 (body -> empty .)
    SEMI            reduce using rule 68 (arg -> empty .)
    COMMA           reduce using rule 68 (arg -> empty .)


state 8

    (73) package_dec -> PACKAGE . NAME SEMI

    NAME            shift and go to state 68


state 9

    (90) var_dec -> NAME . ASSIGNOP SHIFT SEMI
    (91) var_dec -> NAME . ASSIGNOP term SEMI
    (92) var_dec -> NAME . ASSIGNOP array_statement SEMI
    (1) object_creation -> NAME . ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> NAME . DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (31) sub_script -> NAME . [ term ]
    (112) term -> NAME .
    (72) var_deref -> NAME . DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for DEREF resolved as shift
    ASSIGNOP        shift and go to state 69
    DEREF           shift and go to state 70
    [               shift and go to state 71
    ?               reduce using rule 112 (term -> NAME .)
    POWOP           reduce using rule 112 (term -> NAME .)
    MULOP           reduce using rule 112 (term -> NAME .)
    ADDOP           reduce using rule 112 (term -> NAME .)
    SHIFTOP         reduce using rule 112 (term -> NAME .)
    RELOP           reduce using rule 112 (term -> NAME .)
    EQOP            reduce using rule 112 (term -> NAME .)
    BITANDOP        reduce using rule 112 (term -> NAME .)
    BITOROP         reduce using rule 112 (term -> NAME .)
    DOTDOT          reduce using rule 112 (term -> NAME .)
    ANDAND          reduce using rule 112 (term -> NAME .)
    OROR            reduce using rule 112 (term -> NAME .)
    DORDOR          reduce using rule 112 (term -> NAME .)
    MATCHOP         reduce using rule 112 (term -> NAME .)
    WAND            reduce using rule 112 (term -> NAME .)
    WOR             reduce using rule 112 (term -> NAME .)
    WXOR            reduce using rule 112 (term -> NAME .)
    INCREMENT       reduce using rule 112 (term -> NAME .)
    DECREMENT       reduce using rule 112 (term -> NAME .)
    SEMI            reduce using rule 112 (term -> NAME .)
    COMMA           reduce using rule 112 (term -> NAME .)

  ! DEREF           [ reduce using rule 112 (term -> NAME .) ]


state 10

    (28) statement_list -> statement .

    NAME            reduce using rule 28 (statement_list -> statement .)
    SUB             reduce using rule 28 (statement_list -> statement .)
    PRINT           reduce using rule 28 (statement_list -> statement .)
    USE             reduce using rule 28 (statement_list -> statement .)
    COMMENT         reduce using rule 28 (statement_list -> statement .)
    MY              reduce using rule 28 (statement_list -> statement .)
    FOR             reduce using rule 28 (statement_list -> statement .)
    WHILE           reduce using rule 28 (statement_list -> statement .)
    DO              reduce using rule 28 (statement_list -> statement .)
    UNTIL           reduce using rule 28 (statement_list -> statement .)
    FOREACH         reduce using rule 28 (statement_list -> statement .)
    IF              reduce using rule 28 (statement_list -> statement .)
    ELSE            reduce using rule 28 (statement_list -> statement .)
    ELSIF           reduce using rule 28 (statement_list -> statement .)
    UNLESS          reduce using rule 28 (statement_list -> statement .)
    PARANTHESIS_L   reduce using rule 28 (statement_list -> statement .)
    NUMBER          reduce using rule 28 (statement_list -> statement .)
    STRING          reduce using rule 28 (statement_list -> statement .)
    Q               reduce using rule 28 (statement_list -> statement .)
    QQ              reduce using rule 28 (statement_list -> statement .)
    QX              reduce using rule 28 (statement_list -> statement .)
    ADDOP           reduce using rule 28 (statement_list -> statement .)
    !               reduce using rule 28 (statement_list -> statement .)
    ~               reduce using rule 28 (statement_list -> statement .)
    INCREMENT       reduce using rule 28 (statement_list -> statement .)
    DECREMENT       reduce using rule 28 (statement_list -> statement .)
    WNOT            reduce using rule 28 (statement_list -> statement .)
    SEMI            reduce using rule 28 (statement_list -> statement .)
    COMMA           reduce using rule 28 (statement_list -> statement .)
    $end            reduce using rule 28 (statement_list -> statement .)
    BRACES_RIGHT    reduce using rule 28 (statement_list -> statement .)


state 11

    (54) statement -> var_dec .

    NAME            reduce using rule 54 (statement -> var_dec .)
    SUB             reduce using rule 54 (statement -> var_dec .)
    PRINT           reduce using rule 54 (statement -> var_dec .)
    USE             reduce using rule 54 (statement -> var_dec .)
    COMMENT         reduce using rule 54 (statement -> var_dec .)
    MY              reduce using rule 54 (statement -> var_dec .)
    FOR             reduce using rule 54 (statement -> var_dec .)
    WHILE           reduce using rule 54 (statement -> var_dec .)
    DO              reduce using rule 54 (statement -> var_dec .)
    UNTIL           reduce using rule 54 (statement -> var_dec .)
    FOREACH         reduce using rule 54 (statement -> var_dec .)
    IF              reduce using rule 54 (statement -> var_dec .)
    ELSE            reduce using rule 54 (statement -> var_dec .)
    ELSIF           reduce using rule 54 (statement -> var_dec .)
    UNLESS          reduce using rule 54 (statement -> var_dec .)
    PARANTHESIS_L   reduce using rule 54 (statement -> var_dec .)
    NUMBER          reduce using rule 54 (statement -> var_dec .)
    STRING          reduce using rule 54 (statement -> var_dec .)
    Q               reduce using rule 54 (statement -> var_dec .)
    QQ              reduce using rule 54 (statement -> var_dec .)
    QX              reduce using rule 54 (statement -> var_dec .)
    ADDOP           reduce using rule 54 (statement -> var_dec .)
    !               reduce using rule 54 (statement -> var_dec .)
    ~               reduce using rule 54 (statement -> var_dec .)
    INCREMENT       reduce using rule 54 (statement -> var_dec .)
    DECREMENT       reduce using rule 54 (statement -> var_dec .)
    WNOT            reduce using rule 54 (statement -> var_dec .)
    SEMI            reduce using rule 54 (statement -> var_dec .)
    COMMA           reduce using rule 54 (statement -> var_dec .)
    $end            reduce using rule 54 (statement -> var_dec .)
    BRACES_RIGHT    reduce using rule 54 (statement -> var_dec .)
    ASSIGNOP        reduce using rule 54 (statement -> var_dec .)


state 12

    (55) statement -> function_dec .

    NAME            reduce using rule 55 (statement -> function_dec .)
    SUB             reduce using rule 55 (statement -> function_dec .)
    PRINT           reduce using rule 55 (statement -> function_dec .)
    USE             reduce using rule 55 (statement -> function_dec .)
    COMMENT         reduce using rule 55 (statement -> function_dec .)
    MY              reduce using rule 55 (statement -> function_dec .)
    FOR             reduce using rule 55 (statement -> function_dec .)
    WHILE           reduce using rule 55 (statement -> function_dec .)
    DO              reduce using rule 55 (statement -> function_dec .)
    UNTIL           reduce using rule 55 (statement -> function_dec .)
    FOREACH         reduce using rule 55 (statement -> function_dec .)
    IF              reduce using rule 55 (statement -> function_dec .)
    ELSE            reduce using rule 55 (statement -> function_dec .)
    ELSIF           reduce using rule 55 (statement -> function_dec .)
    UNLESS          reduce using rule 55 (statement -> function_dec .)
    PARANTHESIS_L   reduce using rule 55 (statement -> function_dec .)
    NUMBER          reduce using rule 55 (statement -> function_dec .)
    STRING          reduce using rule 55 (statement -> function_dec .)
    Q               reduce using rule 55 (statement -> function_dec .)
    QQ              reduce using rule 55 (statement -> function_dec .)
    QX              reduce using rule 55 (statement -> function_dec .)
    ADDOP           reduce using rule 55 (statement -> function_dec .)
    !               reduce using rule 55 (statement -> function_dec .)
    ~               reduce using rule 55 (statement -> function_dec .)
    INCREMENT       reduce using rule 55 (statement -> function_dec .)
    DECREMENT       reduce using rule 55 (statement -> function_dec .)
    WNOT            reduce using rule 55 (statement -> function_dec .)
    SEMI            reduce using rule 55 (statement -> function_dec .)
    COMMA           reduce using rule 55 (statement -> function_dec .)
    $end            reduce using rule 55 (statement -> function_dec .)
    BRACES_RIGHT    reduce using rule 55 (statement -> function_dec .)
    ASSIGNOP        reduce using rule 55 (statement -> function_dec .)


state 13

    (56) statement -> constructor .

    NAME            reduce using rule 56 (statement -> constructor .)
    SUB             reduce using rule 56 (statement -> constructor .)
    PRINT           reduce using rule 56 (statement -> constructor .)
    USE             reduce using rule 56 (statement -> constructor .)
    COMMENT         reduce using rule 56 (statement -> constructor .)
    MY              reduce using rule 56 (statement -> constructor .)
    FOR             reduce using rule 56 (statement -> constructor .)
    WHILE           reduce using rule 56 (statement -> constructor .)
    DO              reduce using rule 56 (statement -> constructor .)
    UNTIL           reduce using rule 56 (statement -> constructor .)
    FOREACH         reduce using rule 56 (statement -> constructor .)
    IF              reduce using rule 56 (statement -> constructor .)
    ELSE            reduce using rule 56 (statement -> constructor .)
    ELSIF           reduce using rule 56 (statement -> constructor .)
    UNLESS          reduce using rule 56 (statement -> constructor .)
    PARANTHESIS_L   reduce using rule 56 (statement -> constructor .)
    NUMBER          reduce using rule 56 (statement -> constructor .)
    STRING          reduce using rule 56 (statement -> constructor .)
    Q               reduce using rule 56 (statement -> constructor .)
    QQ              reduce using rule 56 (statement -> constructor .)
    QX              reduce using rule 56 (statement -> constructor .)
    ADDOP           reduce using rule 56 (statement -> constructor .)
    !               reduce using rule 56 (statement -> constructor .)
    ~               reduce using rule 56 (statement -> constructor .)
    INCREMENT       reduce using rule 56 (statement -> constructor .)
    DECREMENT       reduce using rule 56 (statement -> constructor .)
    WNOT            reduce using rule 56 (statement -> constructor .)
    SEMI            reduce using rule 56 (statement -> constructor .)
    COMMA           reduce using rule 56 (statement -> constructor .)
    $end            reduce using rule 56 (statement -> constructor .)
    BRACES_RIGHT    reduce using rule 56 (statement -> constructor .)
    ASSIGNOP        reduce using rule 56 (statement -> constructor .)


state 14

    (57) statement -> object_creation .

    NAME            reduce using rule 57 (statement -> object_creation .)
    SUB             reduce using rule 57 (statement -> object_creation .)
    PRINT           reduce using rule 57 (statement -> object_creation .)
    USE             reduce using rule 57 (statement -> object_creation .)
    COMMENT         reduce using rule 57 (statement -> object_creation .)
    MY              reduce using rule 57 (statement -> object_creation .)
    FOR             reduce using rule 57 (statement -> object_creation .)
    WHILE           reduce using rule 57 (statement -> object_creation .)
    DO              reduce using rule 57 (statement -> object_creation .)
    UNTIL           reduce using rule 57 (statement -> object_creation .)
    FOREACH         reduce using rule 57 (statement -> object_creation .)
    IF              reduce using rule 57 (statement -> object_creation .)
    ELSE            reduce using rule 57 (statement -> object_creation .)
    ELSIF           reduce using rule 57 (statement -> object_creation .)
    UNLESS          reduce using rule 57 (statement -> object_creation .)
    PARANTHESIS_L   reduce using rule 57 (statement -> object_creation .)
    NUMBER          reduce using rule 57 (statement -> object_creation .)
    STRING          reduce using rule 57 (statement -> object_creation .)
    Q               reduce using rule 57 (statement -> object_creation .)
    QQ              reduce using rule 57 (statement -> object_creation .)
    QX              reduce using rule 57 (statement -> object_creation .)
    ADDOP           reduce using rule 57 (statement -> object_creation .)
    !               reduce using rule 57 (statement -> object_creation .)
    ~               reduce using rule 57 (statement -> object_creation .)
    INCREMENT       reduce using rule 57 (statement -> object_creation .)
    DECREMENT       reduce using rule 57 (statement -> object_creation .)
    WNOT            reduce using rule 57 (statement -> object_creation .)
    SEMI            reduce using rule 57 (statement -> object_creation .)
    COMMA           reduce using rule 57 (statement -> object_creation .)
    $end            reduce using rule 57 (statement -> object_creation .)
    BRACES_RIGHT    reduce using rule 57 (statement -> object_creation .)
    ASSIGNOP        reduce using rule 57 (statement -> object_creation .)


state 15

    (58) statement -> obj_func_call .

    NAME            reduce using rule 58 (statement -> obj_func_call .)
    SUB             reduce using rule 58 (statement -> obj_func_call .)
    PRINT           reduce using rule 58 (statement -> obj_func_call .)
    USE             reduce using rule 58 (statement -> obj_func_call .)
    COMMENT         reduce using rule 58 (statement -> obj_func_call .)
    MY              reduce using rule 58 (statement -> obj_func_call .)
    FOR             reduce using rule 58 (statement -> obj_func_call .)
    WHILE           reduce using rule 58 (statement -> obj_func_call .)
    DO              reduce using rule 58 (statement -> obj_func_call .)
    UNTIL           reduce using rule 58 (statement -> obj_func_call .)
    FOREACH         reduce using rule 58 (statement -> obj_func_call .)
    IF              reduce using rule 58 (statement -> obj_func_call .)
    ELSE            reduce using rule 58 (statement -> obj_func_call .)
    ELSIF           reduce using rule 58 (statement -> obj_func_call .)
    UNLESS          reduce using rule 58 (statement -> obj_func_call .)
    PARANTHESIS_L   reduce using rule 58 (statement -> obj_func_call .)
    NUMBER          reduce using rule 58 (statement -> obj_func_call .)
    STRING          reduce using rule 58 (statement -> obj_func_call .)
    Q               reduce using rule 58 (statement -> obj_func_call .)
    QQ              reduce using rule 58 (statement -> obj_func_call .)
    QX              reduce using rule 58 (statement -> obj_func_call .)
    ADDOP           reduce using rule 58 (statement -> obj_func_call .)
    !               reduce using rule 58 (statement -> obj_func_call .)
    ~               reduce using rule 58 (statement -> obj_func_call .)
    INCREMENT       reduce using rule 58 (statement -> obj_func_call .)
    DECREMENT       reduce using rule 58 (statement -> obj_func_call .)
    WNOT            reduce using rule 58 (statement -> obj_func_call .)
    SEMI            reduce using rule 58 (statement -> obj_func_call .)
    COMMA           reduce using rule 58 (statement -> obj_func_call .)
    $end            reduce using rule 58 (statement -> obj_func_call .)
    BRACES_RIGHT    reduce using rule 58 (statement -> obj_func_call .)
    ASSIGNOP        reduce using rule 58 (statement -> obj_func_call .)


state 16

    (59) statement -> control_statements .

    NAME            reduce using rule 59 (statement -> control_statements .)
    SUB             reduce using rule 59 (statement -> control_statements .)
    PRINT           reduce using rule 59 (statement -> control_statements .)
    USE             reduce using rule 59 (statement -> control_statements .)
    COMMENT         reduce using rule 59 (statement -> control_statements .)
    MY              reduce using rule 59 (statement -> control_statements .)
    FOR             reduce using rule 59 (statement -> control_statements .)
    WHILE           reduce using rule 59 (statement -> control_statements .)
    DO              reduce using rule 59 (statement -> control_statements .)
    UNTIL           reduce using rule 59 (statement -> control_statements .)
    FOREACH         reduce using rule 59 (statement -> control_statements .)
    IF              reduce using rule 59 (statement -> control_statements .)
    ELSE            reduce using rule 59 (statement -> control_statements .)
    ELSIF           reduce using rule 59 (statement -> control_statements .)
    UNLESS          reduce using rule 59 (statement -> control_statements .)
    PARANTHESIS_L   reduce using rule 59 (statement -> control_statements .)
    NUMBER          reduce using rule 59 (statement -> control_statements .)
    STRING          reduce using rule 59 (statement -> control_statements .)
    Q               reduce using rule 59 (statement -> control_statements .)
    QQ              reduce using rule 59 (statement -> control_statements .)
    QX              reduce using rule 59 (statement -> control_statements .)
    ADDOP           reduce using rule 59 (statement -> control_statements .)
    !               reduce using rule 59 (statement -> control_statements .)
    ~               reduce using rule 59 (statement -> control_statements .)
    INCREMENT       reduce using rule 59 (statement -> control_statements .)
    DECREMENT       reduce using rule 59 (statement -> control_statements .)
    WNOT            reduce using rule 59 (statement -> control_statements .)
    SEMI            reduce using rule 59 (statement -> control_statements .)
    COMMA           reduce using rule 59 (statement -> control_statements .)
    $end            reduce using rule 59 (statement -> control_statements .)
    BRACES_RIGHT    reduce using rule 59 (statement -> control_statements .)
    ASSIGNOP        reduce using rule 59 (statement -> control_statements .)


state 17

    (60) statement -> print_st . SEMI
    (61) statement -> print_st .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 72
    NAME            reduce using rule 61 (statement -> print_st .)
    SUB             reduce using rule 61 (statement -> print_st .)
    PRINT           reduce using rule 61 (statement -> print_st .)
    USE             reduce using rule 61 (statement -> print_st .)
    COMMENT         reduce using rule 61 (statement -> print_st .)
    MY              reduce using rule 61 (statement -> print_st .)
    FOR             reduce using rule 61 (statement -> print_st .)
    WHILE           reduce using rule 61 (statement -> print_st .)
    DO              reduce using rule 61 (statement -> print_st .)
    UNTIL           reduce using rule 61 (statement -> print_st .)
    FOREACH         reduce using rule 61 (statement -> print_st .)
    IF              reduce using rule 61 (statement -> print_st .)
    ELSE            reduce using rule 61 (statement -> print_st .)
    ELSIF           reduce using rule 61 (statement -> print_st .)
    UNLESS          reduce using rule 61 (statement -> print_st .)
    PARANTHESIS_L   reduce using rule 61 (statement -> print_st .)
    NUMBER          reduce using rule 61 (statement -> print_st .)
    STRING          reduce using rule 61 (statement -> print_st .)
    Q               reduce using rule 61 (statement -> print_st .)
    QQ              reduce using rule 61 (statement -> print_st .)
    QX              reduce using rule 61 (statement -> print_st .)
    ADDOP           reduce using rule 61 (statement -> print_st .)
    !               reduce using rule 61 (statement -> print_st .)
    ~               reduce using rule 61 (statement -> print_st .)
    INCREMENT       reduce using rule 61 (statement -> print_st .)
    DECREMENT       reduce using rule 61 (statement -> print_st .)
    WNOT            reduce using rule 61 (statement -> print_st .)
    COMMA           reduce using rule 61 (statement -> print_st .)
    $end            reduce using rule 61 (statement -> print_st .)
    BRACES_RIGHT    reduce using rule 61 (statement -> print_st .)
    ASSIGNOP        reduce using rule 61 (statement -> print_st .)

  ! SEMI            [ reduce using rule 61 (statement -> print_st .) ]


state 18

    (62) statement -> use_st .

    NAME            reduce using rule 62 (statement -> use_st .)
    SUB             reduce using rule 62 (statement -> use_st .)
    PRINT           reduce using rule 62 (statement -> use_st .)
    USE             reduce using rule 62 (statement -> use_st .)
    COMMENT         reduce using rule 62 (statement -> use_st .)
    MY              reduce using rule 62 (statement -> use_st .)
    FOR             reduce using rule 62 (statement -> use_st .)
    WHILE           reduce using rule 62 (statement -> use_st .)
    DO              reduce using rule 62 (statement -> use_st .)
    UNTIL           reduce using rule 62 (statement -> use_st .)
    FOREACH         reduce using rule 62 (statement -> use_st .)
    IF              reduce using rule 62 (statement -> use_st .)
    ELSE            reduce using rule 62 (statement -> use_st .)
    ELSIF           reduce using rule 62 (statement -> use_st .)
    UNLESS          reduce using rule 62 (statement -> use_st .)
    PARANTHESIS_L   reduce using rule 62 (statement -> use_st .)
    NUMBER          reduce using rule 62 (statement -> use_st .)
    STRING          reduce using rule 62 (statement -> use_st .)
    Q               reduce using rule 62 (statement -> use_st .)
    QQ              reduce using rule 62 (statement -> use_st .)
    QX              reduce using rule 62 (statement -> use_st .)
    ADDOP           reduce using rule 62 (statement -> use_st .)
    !               reduce using rule 62 (statement -> use_st .)
    ~               reduce using rule 62 (statement -> use_st .)
    INCREMENT       reduce using rule 62 (statement -> use_st .)
    DECREMENT       reduce using rule 62 (statement -> use_st .)
    WNOT            reduce using rule 62 (statement -> use_st .)
    SEMI            reduce using rule 62 (statement -> use_st .)
    COMMA           reduce using rule 62 (statement -> use_st .)
    $end            reduce using rule 62 (statement -> use_st .)
    BRACES_RIGHT    reduce using rule 62 (statement -> use_st .)
    ASSIGNOP        reduce using rule 62 (statement -> use_st .)


state 19

    (63) statement -> arg_list . SEMI
    (66) arg_list -> arg_list . COMMA arg

    SEMI            shift and go to state 73
    COMMA           shift and go to state 74


state 20

    (64) statement -> comment .

    NAME            reduce using rule 64 (statement -> comment .)
    SUB             reduce using rule 64 (statement -> comment .)
    PRINT           reduce using rule 64 (statement -> comment .)
    USE             reduce using rule 64 (statement -> comment .)
    COMMENT         reduce using rule 64 (statement -> comment .)
    MY              reduce using rule 64 (statement -> comment .)
    FOR             reduce using rule 64 (statement -> comment .)
    WHILE           reduce using rule 64 (statement -> comment .)
    DO              reduce using rule 64 (statement -> comment .)
    UNTIL           reduce using rule 64 (statement -> comment .)
    FOREACH         reduce using rule 64 (statement -> comment .)
    IF              reduce using rule 64 (statement -> comment .)
    ELSE            reduce using rule 64 (statement -> comment .)
    ELSIF           reduce using rule 64 (statement -> comment .)
    UNLESS          reduce using rule 64 (statement -> comment .)
    PARANTHESIS_L   reduce using rule 64 (statement -> comment .)
    NUMBER          reduce using rule 64 (statement -> comment .)
    STRING          reduce using rule 64 (statement -> comment .)
    Q               reduce using rule 64 (statement -> comment .)
    QQ              reduce using rule 64 (statement -> comment .)
    QX              reduce using rule 64 (statement -> comment .)
    ADDOP           reduce using rule 64 (statement -> comment .)
    !               reduce using rule 64 (statement -> comment .)
    ~               reduce using rule 64 (statement -> comment .)
    INCREMENT       reduce using rule 64 (statement -> comment .)
    DECREMENT       reduce using rule 64 (statement -> comment .)
    WNOT            reduce using rule 64 (statement -> comment .)
    SEMI            reduce using rule 64 (statement -> comment .)
    COMMA           reduce using rule 64 (statement -> comment .)
    $end            reduce using rule 64 (statement -> comment .)
    BRACES_RIGHT    reduce using rule 64 (statement -> comment .)
    ASSIGNOP        reduce using rule 64 (statement -> comment .)


state 21

    (88) var_dec -> my . NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> my . NAME ASSIGNOP term SEMI

    NAME            shift and go to state 75


state 22

    (67) arg -> term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

  ! shift/reduce conflict for ADDOP resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
    SEMI            reduce using rule 67 (arg -> term .)
    COMMA           reduce using rule 67 (arg -> term .)
    NAME            reduce using rule 67 (arg -> term .)
    SUB             reduce using rule 67 (arg -> term .)
    PRINT           reduce using rule 67 (arg -> term .)
    USE             reduce using rule 67 (arg -> term .)
    COMMENT         reduce using rule 67 (arg -> term .)
    MY              reduce using rule 67 (arg -> term .)
    FOR             reduce using rule 67 (arg -> term .)
    WHILE           reduce using rule 67 (arg -> term .)
    DO              reduce using rule 67 (arg -> term .)
    UNTIL           reduce using rule 67 (arg -> term .)
    FOREACH         reduce using rule 67 (arg -> term .)
    IF              reduce using rule 67 (arg -> term .)
    ELSE            reduce using rule 67 (arg -> term .)
    ELSIF           reduce using rule 67 (arg -> term .)
    UNLESS          reduce using rule 67 (arg -> term .)
    PARANTHESIS_L   reduce using rule 67 (arg -> term .)
    NUMBER          reduce using rule 67 (arg -> term .)
    STRING          reduce using rule 67 (arg -> term .)
    Q               reduce using rule 67 (arg -> term .)
    QQ              reduce using rule 67 (arg -> term .)
    QX              reduce using rule 67 (arg -> term .)
    !               reduce using rule 67 (arg -> term .)
    ~               reduce using rule 67 (arg -> term .)
    WNOT            reduce using rule 67 (arg -> term .)
    $end            reduce using rule 67 (arg -> term .)
    BRACES_RIGHT    reduce using rule 67 (arg -> term .)
    ASSIGNOP        reduce using rule 67 (arg -> term .)
    PARANTHESIS_R   reduce using rule 67 (arg -> term .)
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! ADDOP           [ reduce using rule 67 (arg -> term .) ]
  ! INCREMENT       [ reduce using rule 67 (arg -> term .) ]
  ! DECREMENT       [ reduce using rule 67 (arg -> term .) ]


state 23

    (93) var_dec -> sub_script . ASSIGNOP term SEMI
    (116) term -> sub_script .

    ASSIGNOP        shift and go to state 96
    ?               reduce using rule 116 (term -> sub_script .)
    POWOP           reduce using rule 116 (term -> sub_script .)
    MULOP           reduce using rule 116 (term -> sub_script .)
    ADDOP           reduce using rule 116 (term -> sub_script .)
    SHIFTOP         reduce using rule 116 (term -> sub_script .)
    RELOP           reduce using rule 116 (term -> sub_script .)
    EQOP            reduce using rule 116 (term -> sub_script .)
    BITANDOP        reduce using rule 116 (term -> sub_script .)
    BITOROP         reduce using rule 116 (term -> sub_script .)
    DOTDOT          reduce using rule 116 (term -> sub_script .)
    ANDAND          reduce using rule 116 (term -> sub_script .)
    OROR            reduce using rule 116 (term -> sub_script .)
    DORDOR          reduce using rule 116 (term -> sub_script .)
    MATCHOP         reduce using rule 116 (term -> sub_script .)
    WAND            reduce using rule 116 (term -> sub_script .)
    WOR             reduce using rule 116 (term -> sub_script .)
    WXOR            reduce using rule 116 (term -> sub_script .)
    INCREMENT       reduce using rule 116 (term -> sub_script .)
    DECREMENT       reduce using rule 116 (term -> sub_script .)
    DEREF           reduce using rule 116 (term -> sub_script .)
    SEMI            reduce using rule 116 (term -> sub_script .)
    COMMA           reduce using rule 116 (term -> sub_script .)


state 24

    (81) function_dec -> SUB . NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> SUB . NEW BRACES_LEFT constructor_body BRACES_RIGHT

    NAME            shift and go to state 97
    NEW             shift and go to state 98


state 25

    (111) term -> PARANTHESIS_L . term PARANTHESIS_R
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 99
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 26

    (5) control_statements -> iterative .

    NAME            reduce using rule 5 (control_statements -> iterative .)
    SUB             reduce using rule 5 (control_statements -> iterative .)
    PRINT           reduce using rule 5 (control_statements -> iterative .)
    USE             reduce using rule 5 (control_statements -> iterative .)
    COMMENT         reduce using rule 5 (control_statements -> iterative .)
    MY              reduce using rule 5 (control_statements -> iterative .)
    FOR             reduce using rule 5 (control_statements -> iterative .)
    WHILE           reduce using rule 5 (control_statements -> iterative .)
    DO              reduce using rule 5 (control_statements -> iterative .)
    UNTIL           reduce using rule 5 (control_statements -> iterative .)
    FOREACH         reduce using rule 5 (control_statements -> iterative .)
    IF              reduce using rule 5 (control_statements -> iterative .)
    ELSE            reduce using rule 5 (control_statements -> iterative .)
    ELSIF           reduce using rule 5 (control_statements -> iterative .)
    UNLESS          reduce using rule 5 (control_statements -> iterative .)
    PARANTHESIS_L   reduce using rule 5 (control_statements -> iterative .)
    NUMBER          reduce using rule 5 (control_statements -> iterative .)
    STRING          reduce using rule 5 (control_statements -> iterative .)
    Q               reduce using rule 5 (control_statements -> iterative .)
    QQ              reduce using rule 5 (control_statements -> iterative .)
    QX              reduce using rule 5 (control_statements -> iterative .)
    ADDOP           reduce using rule 5 (control_statements -> iterative .)
    !               reduce using rule 5 (control_statements -> iterative .)
    ~               reduce using rule 5 (control_statements -> iterative .)
    INCREMENT       reduce using rule 5 (control_statements -> iterative .)
    DECREMENT       reduce using rule 5 (control_statements -> iterative .)
    WNOT            reduce using rule 5 (control_statements -> iterative .)
    SEMI            reduce using rule 5 (control_statements -> iterative .)
    COMMA           reduce using rule 5 (control_statements -> iterative .)
    $end            reduce using rule 5 (control_statements -> iterative .)
    BRACES_RIGHT    reduce using rule 5 (control_statements -> iterative .)
    ASSIGNOP        reduce using rule 5 (control_statements -> iterative .)


state 27

    (6) control_statements -> conditional .

    NAME            reduce using rule 6 (control_statements -> conditional .)
    SUB             reduce using rule 6 (control_statements -> conditional .)
    PRINT           reduce using rule 6 (control_statements -> conditional .)
    USE             reduce using rule 6 (control_statements -> conditional .)
    COMMENT         reduce using rule 6 (control_statements -> conditional .)
    MY              reduce using rule 6 (control_statements -> conditional .)
    FOR             reduce using rule 6 (control_statements -> conditional .)
    WHILE           reduce using rule 6 (control_statements -> conditional .)
    DO              reduce using rule 6 (control_statements -> conditional .)
    UNTIL           reduce using rule 6 (control_statements -> conditional .)
    FOREACH         reduce using rule 6 (control_statements -> conditional .)
    IF              reduce using rule 6 (control_statements -> conditional .)
    ELSE            reduce using rule 6 (control_statements -> conditional .)
    ELSIF           reduce using rule 6 (control_statements -> conditional .)
    UNLESS          reduce using rule 6 (control_statements -> conditional .)
    PARANTHESIS_L   reduce using rule 6 (control_statements -> conditional .)
    NUMBER          reduce using rule 6 (control_statements -> conditional .)
    STRING          reduce using rule 6 (control_statements -> conditional .)
    Q               reduce using rule 6 (control_statements -> conditional .)
    QQ              reduce using rule 6 (control_statements -> conditional .)
    QX              reduce using rule 6 (control_statements -> conditional .)
    ADDOP           reduce using rule 6 (control_statements -> conditional .)
    !               reduce using rule 6 (control_statements -> conditional .)
    ~               reduce using rule 6 (control_statements -> conditional .)
    INCREMENT       reduce using rule 6 (control_statements -> conditional .)
    DECREMENT       reduce using rule 6 (control_statements -> conditional .)
    WNOT            reduce using rule 6 (control_statements -> conditional .)
    SEMI            reduce using rule 6 (control_statements -> conditional .)
    COMMA           reduce using rule 6 (control_statements -> conditional .)
    $end            reduce using rule 6 (control_statements -> conditional .)
    BRACES_RIGHT    reduce using rule 6 (control_statements -> conditional .)
    ASSIGNOP        reduce using rule 6 (control_statements -> conditional .)


state 28

    (2) print_st -> PRINT . HANDLE
    (3) print_st -> PRINT . PARANTHESIS_L HANDLE PARANTHESIS_R
    (49) HANDLE -> . arg_list
    (50) HANDLE -> . NAME arg_list
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (67) arg -> . term
    (68) arg -> . empty
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (107) empty -> .
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for PARANTHESIS_L resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for Q resolved as shift
  ! shift/reduce conflict for QQ resolved as shift
  ! shift/reduce conflict for QX resolved as shift
  ! shift/reduce conflict for ADDOP resolved as shift
  ! shift/reduce conflict for ! resolved as shift
  ! shift/reduce conflict for ~ resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for WNOT resolved as shift
    PARANTHESIS_L   shift and go to state 103
    NAME            shift and go to state 105
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    COMMA           reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    SUB             reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    USE             reduce using rule 107 (empty -> .)
    COMMENT         reduce using rule 107 (empty -> .)
    MY              reduce using rule 107 (empty -> .)
    FOR             reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    DO              reduce using rule 107 (empty -> .)
    UNTIL           reduce using rule 107 (empty -> .)
    FOREACH         reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    ELSE            reduce using rule 107 (empty -> .)
    ELSIF           reduce using rule 107 (empty -> .)
    UNLESS          reduce using rule 107 (empty -> .)
    $end            reduce using rule 107 (empty -> .)
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    ASSIGNOP        reduce using rule 107 (empty -> .)
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 107 (empty -> .) ]
  ! PARANTHESIS_L   [ reduce using rule 107 (empty -> .) ]
  ! NUMBER          [ reduce using rule 107 (empty -> .) ]
  ! STRING          [ reduce using rule 107 (empty -> .) ]
  ! Q               [ reduce using rule 107 (empty -> .) ]
  ! QQ              [ reduce using rule 107 (empty -> .) ]
  ! QX              [ reduce using rule 107 (empty -> .) ]
  ! ADDOP           [ reduce using rule 107 (empty -> .) ]
  ! !               [ reduce using rule 107 (empty -> .) ]
  ! ~               [ reduce using rule 107 (empty -> .) ]
  ! INCREMENT       [ reduce using rule 107 (empty -> .) ]
  ! DECREMENT       [ reduce using rule 107 (empty -> .) ]
  ! WNOT            [ reduce using rule 107 (empty -> .) ]

    HANDLE                         shift and go to state 102
    arg_list                       shift and go to state 104
    arg                            shift and go to state 30
    term                           shift and go to state 22
    empty                          shift and go to state 67
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 29

    (78) use_st -> USE . NAME SEMI

    NAME            shift and go to state 106


state 30

    (65) arg_list -> arg .

    SEMI            reduce using rule 65 (arg_list -> arg .)
    COMMA           reduce using rule 65 (arg_list -> arg .)
    NAME            reduce using rule 65 (arg_list -> arg .)
    SUB             reduce using rule 65 (arg_list -> arg .)
    PRINT           reduce using rule 65 (arg_list -> arg .)
    USE             reduce using rule 65 (arg_list -> arg .)
    COMMENT         reduce using rule 65 (arg_list -> arg .)
    MY              reduce using rule 65 (arg_list -> arg .)
    FOR             reduce using rule 65 (arg_list -> arg .)
    WHILE           reduce using rule 65 (arg_list -> arg .)
    DO              reduce using rule 65 (arg_list -> arg .)
    UNTIL           reduce using rule 65 (arg_list -> arg .)
    FOREACH         reduce using rule 65 (arg_list -> arg .)
    IF              reduce using rule 65 (arg_list -> arg .)
    ELSE            reduce using rule 65 (arg_list -> arg .)
    ELSIF           reduce using rule 65 (arg_list -> arg .)
    UNLESS          reduce using rule 65 (arg_list -> arg .)
    PARANTHESIS_L   reduce using rule 65 (arg_list -> arg .)
    NUMBER          reduce using rule 65 (arg_list -> arg .)
    STRING          reduce using rule 65 (arg_list -> arg .)
    Q               reduce using rule 65 (arg_list -> arg .)
    QQ              reduce using rule 65 (arg_list -> arg .)
    QX              reduce using rule 65 (arg_list -> arg .)
    ADDOP           reduce using rule 65 (arg_list -> arg .)
    !               reduce using rule 65 (arg_list -> arg .)
    ~               reduce using rule 65 (arg_list -> arg .)
    INCREMENT       reduce using rule 65 (arg_list -> arg .)
    DECREMENT       reduce using rule 65 (arg_list -> arg .)
    WNOT            reduce using rule 65 (arg_list -> arg .)
    $end            reduce using rule 65 (arg_list -> arg .)
    BRACES_RIGHT    reduce using rule 65 (arg_list -> arg .)
    ASSIGNOP        reduce using rule 65 (arg_list -> arg .)
    PARANTHESIS_R   reduce using rule 65 (arg_list -> arg .)


state 31

    (108) comment -> COMMENT .

    NAME            reduce using rule 108 (comment -> COMMENT .)
    SUB             reduce using rule 108 (comment -> COMMENT .)
    PRINT           reduce using rule 108 (comment -> COMMENT .)
    USE             reduce using rule 108 (comment -> COMMENT .)
    COMMENT         reduce using rule 108 (comment -> COMMENT .)
    MY              reduce using rule 108 (comment -> COMMENT .)
    FOR             reduce using rule 108 (comment -> COMMENT .)
    WHILE           reduce using rule 108 (comment -> COMMENT .)
    DO              reduce using rule 108 (comment -> COMMENT .)
    UNTIL           reduce using rule 108 (comment -> COMMENT .)
    FOREACH         reduce using rule 108 (comment -> COMMENT .)
    IF              reduce using rule 108 (comment -> COMMENT .)
    ELSE            reduce using rule 108 (comment -> COMMENT .)
    ELSIF           reduce using rule 108 (comment -> COMMENT .)
    UNLESS          reduce using rule 108 (comment -> COMMENT .)
    PARANTHESIS_L   reduce using rule 108 (comment -> COMMENT .)
    NUMBER          reduce using rule 108 (comment -> COMMENT .)
    STRING          reduce using rule 108 (comment -> COMMENT .)
    Q               reduce using rule 108 (comment -> COMMENT .)
    QQ              reduce using rule 108 (comment -> COMMENT .)
    QX              reduce using rule 108 (comment -> COMMENT .)
    ADDOP           reduce using rule 108 (comment -> COMMENT .)
    !               reduce using rule 108 (comment -> COMMENT .)
    ~               reduce using rule 108 (comment -> COMMENT .)
    INCREMENT       reduce using rule 108 (comment -> COMMENT .)
    DECREMENT       reduce using rule 108 (comment -> COMMENT .)
    WNOT            reduce using rule 108 (comment -> COMMENT .)
    SEMI            reduce using rule 108 (comment -> COMMENT .)
    COMMA           reduce using rule 108 (comment -> COMMENT .)
    $end            reduce using rule 108 (comment -> COMMENT .)
    BRACES_RIGHT    reduce using rule 108 (comment -> COMMENT .)
    ASSIGNOP        reduce using rule 108 (comment -> COMMENT .)


state 32

    (79) my -> MY .

    NAME            reduce using rule 79 (my -> MY .)
    ASSIGNOP        reduce using rule 79 (my -> MY .)


state 33

    (10) iterative -> for_st .

    NAME            reduce using rule 10 (iterative -> for_st .)
    SUB             reduce using rule 10 (iterative -> for_st .)
    PRINT           reduce using rule 10 (iterative -> for_st .)
    USE             reduce using rule 10 (iterative -> for_st .)
    COMMENT         reduce using rule 10 (iterative -> for_st .)
    MY              reduce using rule 10 (iterative -> for_st .)
    FOR             reduce using rule 10 (iterative -> for_st .)
    WHILE           reduce using rule 10 (iterative -> for_st .)
    DO              reduce using rule 10 (iterative -> for_st .)
    UNTIL           reduce using rule 10 (iterative -> for_st .)
    FOREACH         reduce using rule 10 (iterative -> for_st .)
    IF              reduce using rule 10 (iterative -> for_st .)
    ELSE            reduce using rule 10 (iterative -> for_st .)
    ELSIF           reduce using rule 10 (iterative -> for_st .)
    UNLESS          reduce using rule 10 (iterative -> for_st .)
    PARANTHESIS_L   reduce using rule 10 (iterative -> for_st .)
    NUMBER          reduce using rule 10 (iterative -> for_st .)
    STRING          reduce using rule 10 (iterative -> for_st .)
    Q               reduce using rule 10 (iterative -> for_st .)
    QQ              reduce using rule 10 (iterative -> for_st .)
    QX              reduce using rule 10 (iterative -> for_st .)
    ADDOP           reduce using rule 10 (iterative -> for_st .)
    !               reduce using rule 10 (iterative -> for_st .)
    ~               reduce using rule 10 (iterative -> for_st .)
    INCREMENT       reduce using rule 10 (iterative -> for_st .)
    DECREMENT       reduce using rule 10 (iterative -> for_st .)
    WNOT            reduce using rule 10 (iterative -> for_st .)
    SEMI            reduce using rule 10 (iterative -> for_st .)
    COMMA           reduce using rule 10 (iterative -> for_st .)
    $end            reduce using rule 10 (iterative -> for_st .)
    BRACES_RIGHT    reduce using rule 10 (iterative -> for_st .)
    ASSIGNOP        reduce using rule 10 (iterative -> for_st .)


state 34

    (11) iterative -> while_st .

    NAME            reduce using rule 11 (iterative -> while_st .)
    SUB             reduce using rule 11 (iterative -> while_st .)
    PRINT           reduce using rule 11 (iterative -> while_st .)
    USE             reduce using rule 11 (iterative -> while_st .)
    COMMENT         reduce using rule 11 (iterative -> while_st .)
    MY              reduce using rule 11 (iterative -> while_st .)
    FOR             reduce using rule 11 (iterative -> while_st .)
    WHILE           reduce using rule 11 (iterative -> while_st .)
    DO              reduce using rule 11 (iterative -> while_st .)
    UNTIL           reduce using rule 11 (iterative -> while_st .)
    FOREACH         reduce using rule 11 (iterative -> while_st .)
    IF              reduce using rule 11 (iterative -> while_st .)
    ELSE            reduce using rule 11 (iterative -> while_st .)
    ELSIF           reduce using rule 11 (iterative -> while_st .)
    UNLESS          reduce using rule 11 (iterative -> while_st .)
    PARANTHESIS_L   reduce using rule 11 (iterative -> while_st .)
    NUMBER          reduce using rule 11 (iterative -> while_st .)
    STRING          reduce using rule 11 (iterative -> while_st .)
    Q               reduce using rule 11 (iterative -> while_st .)
    QQ              reduce using rule 11 (iterative -> while_st .)
    QX              reduce using rule 11 (iterative -> while_st .)
    ADDOP           reduce using rule 11 (iterative -> while_st .)
    !               reduce using rule 11 (iterative -> while_st .)
    ~               reduce using rule 11 (iterative -> while_st .)
    INCREMENT       reduce using rule 11 (iterative -> while_st .)
    DECREMENT       reduce using rule 11 (iterative -> while_st .)
    WNOT            reduce using rule 11 (iterative -> while_st .)
    SEMI            reduce using rule 11 (iterative -> while_st .)
    COMMA           reduce using rule 11 (iterative -> while_st .)
    $end            reduce using rule 11 (iterative -> while_st .)
    BRACES_RIGHT    reduce using rule 11 (iterative -> while_st .)
    ASSIGNOP        reduce using rule 11 (iterative -> while_st .)


state 35

    (12) iterative -> do_while_st .

    NAME            reduce using rule 12 (iterative -> do_while_st .)
    SUB             reduce using rule 12 (iterative -> do_while_st .)
    PRINT           reduce using rule 12 (iterative -> do_while_st .)
    USE             reduce using rule 12 (iterative -> do_while_st .)
    COMMENT         reduce using rule 12 (iterative -> do_while_st .)
    MY              reduce using rule 12 (iterative -> do_while_st .)
    FOR             reduce using rule 12 (iterative -> do_while_st .)
    WHILE           reduce using rule 12 (iterative -> do_while_st .)
    DO              reduce using rule 12 (iterative -> do_while_st .)
    UNTIL           reduce using rule 12 (iterative -> do_while_st .)
    FOREACH         reduce using rule 12 (iterative -> do_while_st .)
    IF              reduce using rule 12 (iterative -> do_while_st .)
    ELSE            reduce using rule 12 (iterative -> do_while_st .)
    ELSIF           reduce using rule 12 (iterative -> do_while_st .)
    UNLESS          reduce using rule 12 (iterative -> do_while_st .)
    PARANTHESIS_L   reduce using rule 12 (iterative -> do_while_st .)
    NUMBER          reduce using rule 12 (iterative -> do_while_st .)
    STRING          reduce using rule 12 (iterative -> do_while_st .)
    Q               reduce using rule 12 (iterative -> do_while_st .)
    QQ              reduce using rule 12 (iterative -> do_while_st .)
    QX              reduce using rule 12 (iterative -> do_while_st .)
    ADDOP           reduce using rule 12 (iterative -> do_while_st .)
    !               reduce using rule 12 (iterative -> do_while_st .)
    ~               reduce using rule 12 (iterative -> do_while_st .)
    INCREMENT       reduce using rule 12 (iterative -> do_while_st .)
    DECREMENT       reduce using rule 12 (iterative -> do_while_st .)
    WNOT            reduce using rule 12 (iterative -> do_while_st .)
    SEMI            reduce using rule 12 (iterative -> do_while_st .)
    COMMA           reduce using rule 12 (iterative -> do_while_st .)
    $end            reduce using rule 12 (iterative -> do_while_st .)
    BRACES_RIGHT    reduce using rule 12 (iterative -> do_while_st .)
    ASSIGNOP        reduce using rule 12 (iterative -> do_while_st .)


state 36

    (13) iterative -> until_st .

    NAME            reduce using rule 13 (iterative -> until_st .)
    SUB             reduce using rule 13 (iterative -> until_st .)
    PRINT           reduce using rule 13 (iterative -> until_st .)
    USE             reduce using rule 13 (iterative -> until_st .)
    COMMENT         reduce using rule 13 (iterative -> until_st .)
    MY              reduce using rule 13 (iterative -> until_st .)
    FOR             reduce using rule 13 (iterative -> until_st .)
    WHILE           reduce using rule 13 (iterative -> until_st .)
    DO              reduce using rule 13 (iterative -> until_st .)
    UNTIL           reduce using rule 13 (iterative -> until_st .)
    FOREACH         reduce using rule 13 (iterative -> until_st .)
    IF              reduce using rule 13 (iterative -> until_st .)
    ELSE            reduce using rule 13 (iterative -> until_st .)
    ELSIF           reduce using rule 13 (iterative -> until_st .)
    UNLESS          reduce using rule 13 (iterative -> until_st .)
    PARANTHESIS_L   reduce using rule 13 (iterative -> until_st .)
    NUMBER          reduce using rule 13 (iterative -> until_st .)
    STRING          reduce using rule 13 (iterative -> until_st .)
    Q               reduce using rule 13 (iterative -> until_st .)
    QQ              reduce using rule 13 (iterative -> until_st .)
    QX              reduce using rule 13 (iterative -> until_st .)
    ADDOP           reduce using rule 13 (iterative -> until_st .)
    !               reduce using rule 13 (iterative -> until_st .)
    ~               reduce using rule 13 (iterative -> until_st .)
    INCREMENT       reduce using rule 13 (iterative -> until_st .)
    DECREMENT       reduce using rule 13 (iterative -> until_st .)
    WNOT            reduce using rule 13 (iterative -> until_st .)
    SEMI            reduce using rule 13 (iterative -> until_st .)
    COMMA           reduce using rule 13 (iterative -> until_st .)
    $end            reduce using rule 13 (iterative -> until_st .)
    BRACES_RIGHT    reduce using rule 13 (iterative -> until_st .)
    ASSIGNOP        reduce using rule 13 (iterative -> until_st .)


state 37

    (14) iterative -> foreach_st .

    NAME            reduce using rule 14 (iterative -> foreach_st .)
    SUB             reduce using rule 14 (iterative -> foreach_st .)
    PRINT           reduce using rule 14 (iterative -> foreach_st .)
    USE             reduce using rule 14 (iterative -> foreach_st .)
    COMMENT         reduce using rule 14 (iterative -> foreach_st .)
    MY              reduce using rule 14 (iterative -> foreach_st .)
    FOR             reduce using rule 14 (iterative -> foreach_st .)
    WHILE           reduce using rule 14 (iterative -> foreach_st .)
    DO              reduce using rule 14 (iterative -> foreach_st .)
    UNTIL           reduce using rule 14 (iterative -> foreach_st .)
    FOREACH         reduce using rule 14 (iterative -> foreach_st .)
    IF              reduce using rule 14 (iterative -> foreach_st .)
    ELSE            reduce using rule 14 (iterative -> foreach_st .)
    ELSIF           reduce using rule 14 (iterative -> foreach_st .)
    UNLESS          reduce using rule 14 (iterative -> foreach_st .)
    PARANTHESIS_L   reduce using rule 14 (iterative -> foreach_st .)
    NUMBER          reduce using rule 14 (iterative -> foreach_st .)
    STRING          reduce using rule 14 (iterative -> foreach_st .)
    Q               reduce using rule 14 (iterative -> foreach_st .)
    QQ              reduce using rule 14 (iterative -> foreach_st .)
    QX              reduce using rule 14 (iterative -> foreach_st .)
    ADDOP           reduce using rule 14 (iterative -> foreach_st .)
    !               reduce using rule 14 (iterative -> foreach_st .)
    ~               reduce using rule 14 (iterative -> foreach_st .)
    INCREMENT       reduce using rule 14 (iterative -> foreach_st .)
    DECREMENT       reduce using rule 14 (iterative -> foreach_st .)
    WNOT            reduce using rule 14 (iterative -> foreach_st .)
    SEMI            reduce using rule 14 (iterative -> foreach_st .)
    COMMA           reduce using rule 14 (iterative -> foreach_st .)
    $end            reduce using rule 14 (iterative -> foreach_st .)
    BRACES_RIGHT    reduce using rule 14 (iterative -> foreach_st .)
    ASSIGNOP        reduce using rule 14 (iterative -> foreach_st .)


state 38

    (74) conditional -> if_st .

    NAME            reduce using rule 74 (conditional -> if_st .)
    SUB             reduce using rule 74 (conditional -> if_st .)
    PRINT           reduce using rule 74 (conditional -> if_st .)
    USE             reduce using rule 74 (conditional -> if_st .)
    COMMENT         reduce using rule 74 (conditional -> if_st .)
    MY              reduce using rule 74 (conditional -> if_st .)
    FOR             reduce using rule 74 (conditional -> if_st .)
    WHILE           reduce using rule 74 (conditional -> if_st .)
    DO              reduce using rule 74 (conditional -> if_st .)
    UNTIL           reduce using rule 74 (conditional -> if_st .)
    FOREACH         reduce using rule 74 (conditional -> if_st .)
    IF              reduce using rule 74 (conditional -> if_st .)
    ELSE            reduce using rule 74 (conditional -> if_st .)
    ELSIF           reduce using rule 74 (conditional -> if_st .)
    UNLESS          reduce using rule 74 (conditional -> if_st .)
    PARANTHESIS_L   reduce using rule 74 (conditional -> if_st .)
    NUMBER          reduce using rule 74 (conditional -> if_st .)
    STRING          reduce using rule 74 (conditional -> if_st .)
    Q               reduce using rule 74 (conditional -> if_st .)
    QQ              reduce using rule 74 (conditional -> if_st .)
    QX              reduce using rule 74 (conditional -> if_st .)
    ADDOP           reduce using rule 74 (conditional -> if_st .)
    !               reduce using rule 74 (conditional -> if_st .)
    ~               reduce using rule 74 (conditional -> if_st .)
    INCREMENT       reduce using rule 74 (conditional -> if_st .)
    DECREMENT       reduce using rule 74 (conditional -> if_st .)
    WNOT            reduce using rule 74 (conditional -> if_st .)
    SEMI            reduce using rule 74 (conditional -> if_st .)
    COMMA           reduce using rule 74 (conditional -> if_st .)
    $end            reduce using rule 74 (conditional -> if_st .)
    BRACES_RIGHT    reduce using rule 74 (conditional -> if_st .)
    ASSIGNOP        reduce using rule 74 (conditional -> if_st .)


state 39

    (75) conditional -> else_st .

    NAME            reduce using rule 75 (conditional -> else_st .)
    SUB             reduce using rule 75 (conditional -> else_st .)
    PRINT           reduce using rule 75 (conditional -> else_st .)
    USE             reduce using rule 75 (conditional -> else_st .)
    COMMENT         reduce using rule 75 (conditional -> else_st .)
    MY              reduce using rule 75 (conditional -> else_st .)
    FOR             reduce using rule 75 (conditional -> else_st .)
    WHILE           reduce using rule 75 (conditional -> else_st .)
    DO              reduce using rule 75 (conditional -> else_st .)
    UNTIL           reduce using rule 75 (conditional -> else_st .)
    FOREACH         reduce using rule 75 (conditional -> else_st .)
    IF              reduce using rule 75 (conditional -> else_st .)
    ELSE            reduce using rule 75 (conditional -> else_st .)
    ELSIF           reduce using rule 75 (conditional -> else_st .)
    UNLESS          reduce using rule 75 (conditional -> else_st .)
    PARANTHESIS_L   reduce using rule 75 (conditional -> else_st .)
    NUMBER          reduce using rule 75 (conditional -> else_st .)
    STRING          reduce using rule 75 (conditional -> else_st .)
    Q               reduce using rule 75 (conditional -> else_st .)
    QQ              reduce using rule 75 (conditional -> else_st .)
    QX              reduce using rule 75 (conditional -> else_st .)
    ADDOP           reduce using rule 75 (conditional -> else_st .)
    !               reduce using rule 75 (conditional -> else_st .)
    ~               reduce using rule 75 (conditional -> else_st .)
    INCREMENT       reduce using rule 75 (conditional -> else_st .)
    DECREMENT       reduce using rule 75 (conditional -> else_st .)
    WNOT            reduce using rule 75 (conditional -> else_st .)
    SEMI            reduce using rule 75 (conditional -> else_st .)
    COMMA           reduce using rule 75 (conditional -> else_st .)
    $end            reduce using rule 75 (conditional -> else_st .)
    BRACES_RIGHT    reduce using rule 75 (conditional -> else_st .)
    ASSIGNOP        reduce using rule 75 (conditional -> else_st .)


state 40

    (76) conditional -> elsif_st .

    NAME            reduce using rule 76 (conditional -> elsif_st .)
    SUB             reduce using rule 76 (conditional -> elsif_st .)
    PRINT           reduce using rule 76 (conditional -> elsif_st .)
    USE             reduce using rule 76 (conditional -> elsif_st .)
    COMMENT         reduce using rule 76 (conditional -> elsif_st .)
    MY              reduce using rule 76 (conditional -> elsif_st .)
    FOR             reduce using rule 76 (conditional -> elsif_st .)
    WHILE           reduce using rule 76 (conditional -> elsif_st .)
    DO              reduce using rule 76 (conditional -> elsif_st .)
    UNTIL           reduce using rule 76 (conditional -> elsif_st .)
    FOREACH         reduce using rule 76 (conditional -> elsif_st .)
    IF              reduce using rule 76 (conditional -> elsif_st .)
    ELSE            reduce using rule 76 (conditional -> elsif_st .)
    ELSIF           reduce using rule 76 (conditional -> elsif_st .)
    UNLESS          reduce using rule 76 (conditional -> elsif_st .)
    PARANTHESIS_L   reduce using rule 76 (conditional -> elsif_st .)
    NUMBER          reduce using rule 76 (conditional -> elsif_st .)
    STRING          reduce using rule 76 (conditional -> elsif_st .)
    Q               reduce using rule 76 (conditional -> elsif_st .)
    QQ              reduce using rule 76 (conditional -> elsif_st .)
    QX              reduce using rule 76 (conditional -> elsif_st .)
    ADDOP           reduce using rule 76 (conditional -> elsif_st .)
    !               reduce using rule 76 (conditional -> elsif_st .)
    ~               reduce using rule 76 (conditional -> elsif_st .)
    INCREMENT       reduce using rule 76 (conditional -> elsif_st .)
    DECREMENT       reduce using rule 76 (conditional -> elsif_st .)
    WNOT            reduce using rule 76 (conditional -> elsif_st .)
    SEMI            reduce using rule 76 (conditional -> elsif_st .)
    COMMA           reduce using rule 76 (conditional -> elsif_st .)
    $end            reduce using rule 76 (conditional -> elsif_st .)
    BRACES_RIGHT    reduce using rule 76 (conditional -> elsif_st .)
    ASSIGNOP        reduce using rule 76 (conditional -> elsif_st .)


state 41

    (77) conditional -> unless_st .

    NAME            reduce using rule 77 (conditional -> unless_st .)
    SUB             reduce using rule 77 (conditional -> unless_st .)
    PRINT           reduce using rule 77 (conditional -> unless_st .)
    USE             reduce using rule 77 (conditional -> unless_st .)
    COMMENT         reduce using rule 77 (conditional -> unless_st .)
    MY              reduce using rule 77 (conditional -> unless_st .)
    FOR             reduce using rule 77 (conditional -> unless_st .)
    WHILE           reduce using rule 77 (conditional -> unless_st .)
    DO              reduce using rule 77 (conditional -> unless_st .)
    UNTIL           reduce using rule 77 (conditional -> unless_st .)
    FOREACH         reduce using rule 77 (conditional -> unless_st .)
    IF              reduce using rule 77 (conditional -> unless_st .)
    ELSE            reduce using rule 77 (conditional -> unless_st .)
    ELSIF           reduce using rule 77 (conditional -> unless_st .)
    UNLESS          reduce using rule 77 (conditional -> unless_st .)
    PARANTHESIS_L   reduce using rule 77 (conditional -> unless_st .)
    NUMBER          reduce using rule 77 (conditional -> unless_st .)
    STRING          reduce using rule 77 (conditional -> unless_st .)
    Q               reduce using rule 77 (conditional -> unless_st .)
    QQ              reduce using rule 77 (conditional -> unless_st .)
    QX              reduce using rule 77 (conditional -> unless_st .)
    ADDOP           reduce using rule 77 (conditional -> unless_st .)
    !               reduce using rule 77 (conditional -> unless_st .)
    ~               reduce using rule 77 (conditional -> unless_st .)
    INCREMENT       reduce using rule 77 (conditional -> unless_st .)
    DECREMENT       reduce using rule 77 (conditional -> unless_st .)
    WNOT            reduce using rule 77 (conditional -> unless_st .)
    SEMI            reduce using rule 77 (conditional -> unless_st .)
    COMMA           reduce using rule 77 (conditional -> unless_st .)
    $end            reduce using rule 77 (conditional -> unless_st .)
    BRACES_RIGHT    reduce using rule 77 (conditional -> unless_st .)
    ASSIGNOP        reduce using rule 77 (conditional -> unless_st .)


state 42

    (24) for_st -> FOR . PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR . PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_L   shift and go to state 107


state 43

    (113) term -> NUMBER .

    ?               reduce using rule 113 (term -> NUMBER .)
    POWOP           reduce using rule 113 (term -> NUMBER .)
    MULOP           reduce using rule 113 (term -> NUMBER .)
    ADDOP           reduce using rule 113 (term -> NUMBER .)
    SHIFTOP         reduce using rule 113 (term -> NUMBER .)
    RELOP           reduce using rule 113 (term -> NUMBER .)
    EQOP            reduce using rule 113 (term -> NUMBER .)
    BITANDOP        reduce using rule 113 (term -> NUMBER .)
    BITOROP         reduce using rule 113 (term -> NUMBER .)
    DOTDOT          reduce using rule 113 (term -> NUMBER .)
    ANDAND          reduce using rule 113 (term -> NUMBER .)
    OROR            reduce using rule 113 (term -> NUMBER .)
    DORDOR          reduce using rule 113 (term -> NUMBER .)
    MATCHOP         reduce using rule 113 (term -> NUMBER .)
    WAND            reduce using rule 113 (term -> NUMBER .)
    WOR             reduce using rule 113 (term -> NUMBER .)
    WXOR            reduce using rule 113 (term -> NUMBER .)
    INCREMENT       reduce using rule 113 (term -> NUMBER .)
    DECREMENT       reduce using rule 113 (term -> NUMBER .)
    DEREF           reduce using rule 113 (term -> NUMBER .)
    SEMI            reduce using rule 113 (term -> NUMBER .)
    COMMA           reduce using rule 113 (term -> NUMBER .)
    PARANTHESIS_R   reduce using rule 113 (term -> NUMBER .)
    NAME            reduce using rule 113 (term -> NUMBER .)
    SUB             reduce using rule 113 (term -> NUMBER .)
    PRINT           reduce using rule 113 (term -> NUMBER .)
    USE             reduce using rule 113 (term -> NUMBER .)
    COMMENT         reduce using rule 113 (term -> NUMBER .)
    MY              reduce using rule 113 (term -> NUMBER .)
    FOR             reduce using rule 113 (term -> NUMBER .)
    WHILE           reduce using rule 113 (term -> NUMBER .)
    DO              reduce using rule 113 (term -> NUMBER .)
    UNTIL           reduce using rule 113 (term -> NUMBER .)
    FOREACH         reduce using rule 113 (term -> NUMBER .)
    IF              reduce using rule 113 (term -> NUMBER .)
    ELSE            reduce using rule 113 (term -> NUMBER .)
    ELSIF           reduce using rule 113 (term -> NUMBER .)
    UNLESS          reduce using rule 113 (term -> NUMBER .)
    PARANTHESIS_L   reduce using rule 113 (term -> NUMBER .)
    NUMBER          reduce using rule 113 (term -> NUMBER .)
    STRING          reduce using rule 113 (term -> NUMBER .)
    Q               reduce using rule 113 (term -> NUMBER .)
    QQ              reduce using rule 113 (term -> NUMBER .)
    QX              reduce using rule 113 (term -> NUMBER .)
    !               reduce using rule 113 (term -> NUMBER .)
    ~               reduce using rule 113 (term -> NUMBER .)
    WNOT            reduce using rule 113 (term -> NUMBER .)
    $end            reduce using rule 113 (term -> NUMBER .)
    BRACES_RIGHT    reduce using rule 113 (term -> NUMBER .)
    ASSIGNOP        reduce using rule 113 (term -> NUMBER .)
    ]               reduce using rule 113 (term -> NUMBER .)
    :               reduce using rule 113 (term -> NUMBER .)


state 44

    (104) termunop -> INCREMENT . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 108
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 45

    (105) termunop -> DECREMENT . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 109
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 46

    (52) while_st -> WHILE . PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> WHILE . PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_L   shift and go to state 110


state 47

    (69) do_while_st -> DO . BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R

    BRACES_LEFT     shift and go to state 111


state 48

    (71) until_st -> UNTIL . PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_L   shift and go to state 112


state 49

    (51) foreach_st -> FOREACH . NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 113


state 50

    (83) if_st -> IF . PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> IF . PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_L   shift and go to state 114


state 51

    (86) else_st -> ELSE . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 115


state 52

    (94) elsif_st -> ELSIF . PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> ELSIF . PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_L   shift and go to state 116


state 53

    (96) unless_st -> UNLESS . PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> UNLESS . PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_L   shift and go to state 117


state 54

    (109) term -> termbinop .

    ?               reduce using rule 109 (term -> termbinop .)
    POWOP           reduce using rule 109 (term -> termbinop .)
    MULOP           reduce using rule 109 (term -> termbinop .)
    ADDOP           reduce using rule 109 (term -> termbinop .)
    SHIFTOP         reduce using rule 109 (term -> termbinop .)
    RELOP           reduce using rule 109 (term -> termbinop .)
    EQOP            reduce using rule 109 (term -> termbinop .)
    BITANDOP        reduce using rule 109 (term -> termbinop .)
    BITOROP         reduce using rule 109 (term -> termbinop .)
    DOTDOT          reduce using rule 109 (term -> termbinop .)
    ANDAND          reduce using rule 109 (term -> termbinop .)
    OROR            reduce using rule 109 (term -> termbinop .)
    DORDOR          reduce using rule 109 (term -> termbinop .)
    MATCHOP         reduce using rule 109 (term -> termbinop .)
    WAND            reduce using rule 109 (term -> termbinop .)
    WOR             reduce using rule 109 (term -> termbinop .)
    WXOR            reduce using rule 109 (term -> termbinop .)
    INCREMENT       reduce using rule 109 (term -> termbinop .)
    DECREMENT       reduce using rule 109 (term -> termbinop .)
    DEREF           reduce using rule 109 (term -> termbinop .)
    SEMI            reduce using rule 109 (term -> termbinop .)
    COMMA           reduce using rule 109 (term -> termbinop .)
    PARANTHESIS_R   reduce using rule 109 (term -> termbinop .)
    NAME            reduce using rule 109 (term -> termbinop .)
    SUB             reduce using rule 109 (term -> termbinop .)
    PRINT           reduce using rule 109 (term -> termbinop .)
    USE             reduce using rule 109 (term -> termbinop .)
    COMMENT         reduce using rule 109 (term -> termbinop .)
    MY              reduce using rule 109 (term -> termbinop .)
    FOR             reduce using rule 109 (term -> termbinop .)
    WHILE           reduce using rule 109 (term -> termbinop .)
    DO              reduce using rule 109 (term -> termbinop .)
    UNTIL           reduce using rule 109 (term -> termbinop .)
    FOREACH         reduce using rule 109 (term -> termbinop .)
    IF              reduce using rule 109 (term -> termbinop .)
    ELSE            reduce using rule 109 (term -> termbinop .)
    ELSIF           reduce using rule 109 (term -> termbinop .)
    UNLESS          reduce using rule 109 (term -> termbinop .)
    PARANTHESIS_L   reduce using rule 109 (term -> termbinop .)
    NUMBER          reduce using rule 109 (term -> termbinop .)
    STRING          reduce using rule 109 (term -> termbinop .)
    Q               reduce using rule 109 (term -> termbinop .)
    QQ              reduce using rule 109 (term -> termbinop .)
    QX              reduce using rule 109 (term -> termbinop .)
    !               reduce using rule 109 (term -> termbinop .)
    ~               reduce using rule 109 (term -> termbinop .)
    WNOT            reduce using rule 109 (term -> termbinop .)
    $end            reduce using rule 109 (term -> termbinop .)
    BRACES_RIGHT    reduce using rule 109 (term -> termbinop .)
    ASSIGNOP        reduce using rule 109 (term -> termbinop .)
    ]               reduce using rule 109 (term -> termbinop .)
    :               reduce using rule 109 (term -> termbinop .)


state 55

    (110) term -> termunop .

    ?               reduce using rule 110 (term -> termunop .)
    POWOP           reduce using rule 110 (term -> termunop .)
    MULOP           reduce using rule 110 (term -> termunop .)
    ADDOP           reduce using rule 110 (term -> termunop .)
    SHIFTOP         reduce using rule 110 (term -> termunop .)
    RELOP           reduce using rule 110 (term -> termunop .)
    EQOP            reduce using rule 110 (term -> termunop .)
    BITANDOP        reduce using rule 110 (term -> termunop .)
    BITOROP         reduce using rule 110 (term -> termunop .)
    DOTDOT          reduce using rule 110 (term -> termunop .)
    ANDAND          reduce using rule 110 (term -> termunop .)
    OROR            reduce using rule 110 (term -> termunop .)
    DORDOR          reduce using rule 110 (term -> termunop .)
    MATCHOP         reduce using rule 110 (term -> termunop .)
    WAND            reduce using rule 110 (term -> termunop .)
    WOR             reduce using rule 110 (term -> termunop .)
    WXOR            reduce using rule 110 (term -> termunop .)
    INCREMENT       reduce using rule 110 (term -> termunop .)
    DECREMENT       reduce using rule 110 (term -> termunop .)
    DEREF           reduce using rule 110 (term -> termunop .)
    SEMI            reduce using rule 110 (term -> termunop .)
    COMMA           reduce using rule 110 (term -> termunop .)
    PARANTHESIS_R   reduce using rule 110 (term -> termunop .)
    NAME            reduce using rule 110 (term -> termunop .)
    SUB             reduce using rule 110 (term -> termunop .)
    PRINT           reduce using rule 110 (term -> termunop .)
    USE             reduce using rule 110 (term -> termunop .)
    COMMENT         reduce using rule 110 (term -> termunop .)
    MY              reduce using rule 110 (term -> termunop .)
    FOR             reduce using rule 110 (term -> termunop .)
    WHILE           reduce using rule 110 (term -> termunop .)
    DO              reduce using rule 110 (term -> termunop .)
    UNTIL           reduce using rule 110 (term -> termunop .)
    FOREACH         reduce using rule 110 (term -> termunop .)
    IF              reduce using rule 110 (term -> termunop .)
    ELSE            reduce using rule 110 (term -> termunop .)
    ELSIF           reduce using rule 110 (term -> termunop .)
    UNLESS          reduce using rule 110 (term -> termunop .)
    PARANTHESIS_L   reduce using rule 110 (term -> termunop .)
    NUMBER          reduce using rule 110 (term -> termunop .)
    STRING          reduce using rule 110 (term -> termunop .)
    Q               reduce using rule 110 (term -> termunop .)
    QQ              reduce using rule 110 (term -> termunop .)
    QX              reduce using rule 110 (term -> termunop .)
    !               reduce using rule 110 (term -> termunop .)
    ~               reduce using rule 110 (term -> termunop .)
    WNOT            reduce using rule 110 (term -> termunop .)
    $end            reduce using rule 110 (term -> termunop .)
    BRACES_RIGHT    reduce using rule 110 (term -> termunop .)
    ASSIGNOP        reduce using rule 110 (term -> termunop .)
    ]               reduce using rule 110 (term -> termunop .)
    :               reduce using rule 110 (term -> termunop .)


state 56

    (114) term -> STRING .

    ?               reduce using rule 114 (term -> STRING .)
    POWOP           reduce using rule 114 (term -> STRING .)
    MULOP           reduce using rule 114 (term -> STRING .)
    ADDOP           reduce using rule 114 (term -> STRING .)
    SHIFTOP         reduce using rule 114 (term -> STRING .)
    RELOP           reduce using rule 114 (term -> STRING .)
    EQOP            reduce using rule 114 (term -> STRING .)
    BITANDOP        reduce using rule 114 (term -> STRING .)
    BITOROP         reduce using rule 114 (term -> STRING .)
    DOTDOT          reduce using rule 114 (term -> STRING .)
    ANDAND          reduce using rule 114 (term -> STRING .)
    OROR            reduce using rule 114 (term -> STRING .)
    DORDOR          reduce using rule 114 (term -> STRING .)
    MATCHOP         reduce using rule 114 (term -> STRING .)
    WAND            reduce using rule 114 (term -> STRING .)
    WOR             reduce using rule 114 (term -> STRING .)
    WXOR            reduce using rule 114 (term -> STRING .)
    INCREMENT       reduce using rule 114 (term -> STRING .)
    DECREMENT       reduce using rule 114 (term -> STRING .)
    DEREF           reduce using rule 114 (term -> STRING .)
    SEMI            reduce using rule 114 (term -> STRING .)
    COMMA           reduce using rule 114 (term -> STRING .)
    PARANTHESIS_R   reduce using rule 114 (term -> STRING .)
    NAME            reduce using rule 114 (term -> STRING .)
    SUB             reduce using rule 114 (term -> STRING .)
    PRINT           reduce using rule 114 (term -> STRING .)
    USE             reduce using rule 114 (term -> STRING .)
    COMMENT         reduce using rule 114 (term -> STRING .)
    MY              reduce using rule 114 (term -> STRING .)
    FOR             reduce using rule 114 (term -> STRING .)
    WHILE           reduce using rule 114 (term -> STRING .)
    DO              reduce using rule 114 (term -> STRING .)
    UNTIL           reduce using rule 114 (term -> STRING .)
    FOREACH         reduce using rule 114 (term -> STRING .)
    IF              reduce using rule 114 (term -> STRING .)
    ELSE            reduce using rule 114 (term -> STRING .)
    ELSIF           reduce using rule 114 (term -> STRING .)
    UNLESS          reduce using rule 114 (term -> STRING .)
    PARANTHESIS_L   reduce using rule 114 (term -> STRING .)
    NUMBER          reduce using rule 114 (term -> STRING .)
    STRING          reduce using rule 114 (term -> STRING .)
    Q               reduce using rule 114 (term -> STRING .)
    QQ              reduce using rule 114 (term -> STRING .)
    QX              reduce using rule 114 (term -> STRING .)
    !               reduce using rule 114 (term -> STRING .)
    ~               reduce using rule 114 (term -> STRING .)
    WNOT            reduce using rule 114 (term -> STRING .)
    $end            reduce using rule 114 (term -> STRING .)
    BRACES_RIGHT    reduce using rule 114 (term -> STRING .)
    ASSIGNOP        reduce using rule 114 (term -> STRING .)
    ]               reduce using rule 114 (term -> STRING .)
    :               reduce using rule 114 (term -> STRING .)


state 57

    (115) term -> var_deref .

    ?               reduce using rule 115 (term -> var_deref .)
    POWOP           reduce using rule 115 (term -> var_deref .)
    MULOP           reduce using rule 115 (term -> var_deref .)
    ADDOP           reduce using rule 115 (term -> var_deref .)
    SHIFTOP         reduce using rule 115 (term -> var_deref .)
    RELOP           reduce using rule 115 (term -> var_deref .)
    EQOP            reduce using rule 115 (term -> var_deref .)
    BITANDOP        reduce using rule 115 (term -> var_deref .)
    BITOROP         reduce using rule 115 (term -> var_deref .)
    DOTDOT          reduce using rule 115 (term -> var_deref .)
    ANDAND          reduce using rule 115 (term -> var_deref .)
    OROR            reduce using rule 115 (term -> var_deref .)
    DORDOR          reduce using rule 115 (term -> var_deref .)
    MATCHOP         reduce using rule 115 (term -> var_deref .)
    WAND            reduce using rule 115 (term -> var_deref .)
    WOR             reduce using rule 115 (term -> var_deref .)
    WXOR            reduce using rule 115 (term -> var_deref .)
    INCREMENT       reduce using rule 115 (term -> var_deref .)
    DECREMENT       reduce using rule 115 (term -> var_deref .)
    DEREF           reduce using rule 115 (term -> var_deref .)
    SEMI            reduce using rule 115 (term -> var_deref .)
    COMMA           reduce using rule 115 (term -> var_deref .)
    PARANTHESIS_R   reduce using rule 115 (term -> var_deref .)
    NAME            reduce using rule 115 (term -> var_deref .)
    SUB             reduce using rule 115 (term -> var_deref .)
    PRINT           reduce using rule 115 (term -> var_deref .)
    USE             reduce using rule 115 (term -> var_deref .)
    COMMENT         reduce using rule 115 (term -> var_deref .)
    MY              reduce using rule 115 (term -> var_deref .)
    FOR             reduce using rule 115 (term -> var_deref .)
    WHILE           reduce using rule 115 (term -> var_deref .)
    DO              reduce using rule 115 (term -> var_deref .)
    UNTIL           reduce using rule 115 (term -> var_deref .)
    FOREACH         reduce using rule 115 (term -> var_deref .)
    IF              reduce using rule 115 (term -> var_deref .)
    ELSE            reduce using rule 115 (term -> var_deref .)
    ELSIF           reduce using rule 115 (term -> var_deref .)
    UNLESS          reduce using rule 115 (term -> var_deref .)
    PARANTHESIS_L   reduce using rule 115 (term -> var_deref .)
    NUMBER          reduce using rule 115 (term -> var_deref .)
    STRING          reduce using rule 115 (term -> var_deref .)
    Q               reduce using rule 115 (term -> var_deref .)
    QQ              reduce using rule 115 (term -> var_deref .)
    QX              reduce using rule 115 (term -> var_deref .)
    !               reduce using rule 115 (term -> var_deref .)
    ~               reduce using rule 115 (term -> var_deref .)
    WNOT            reduce using rule 115 (term -> var_deref .)
    $end            reduce using rule 115 (term -> var_deref .)
    BRACES_RIGHT    reduce using rule 115 (term -> var_deref .)
    ASSIGNOP        reduce using rule 115 (term -> var_deref .)
    ]               reduce using rule 115 (term -> var_deref .)
    :               reduce using rule 115 (term -> var_deref .)


state 58

    (118) term -> Q . BRACES_LEFT NAME BRACES_RIGHT

    BRACES_LEFT     shift and go to state 118


state 59

    (119) term -> QQ . BRACES_LEFT NAME BRACES_RIGHT

    BRACES_LEFT     shift and go to state 119


state 60

    (120) term -> QX . BRACES_LEFT NAME BRACES_RIGHT

    BRACES_LEFT     shift and go to state 120


state 61

    (98) termunop -> ADDOP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 121
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 62

    (99) termunop -> ! . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 122
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 63

    (100) termunop -> ~ . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 123
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 64

    (106) termunop -> WNOT . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 124
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 65

    (70) package -> package_dec body .

    $end            reduce using rule 70 (package -> package_dec body .)


state 66

    (29) statement_list -> statement_list statement .

    NAME            reduce using rule 29 (statement_list -> statement_list statement .)
    SUB             reduce using rule 29 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 29 (statement_list -> statement_list statement .)
    USE             reduce using rule 29 (statement_list -> statement_list statement .)
    COMMENT         reduce using rule 29 (statement_list -> statement_list statement .)
    MY              reduce using rule 29 (statement_list -> statement_list statement .)
    FOR             reduce using rule 29 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 29 (statement_list -> statement_list statement .)
    DO              reduce using rule 29 (statement_list -> statement_list statement .)
    UNTIL           reduce using rule 29 (statement_list -> statement_list statement .)
    FOREACH         reduce using rule 29 (statement_list -> statement_list statement .)
    IF              reduce using rule 29 (statement_list -> statement_list statement .)
    ELSE            reduce using rule 29 (statement_list -> statement_list statement .)
    ELSIF           reduce using rule 29 (statement_list -> statement_list statement .)
    UNLESS          reduce using rule 29 (statement_list -> statement_list statement .)
    PARANTHESIS_L   reduce using rule 29 (statement_list -> statement_list statement .)
    NUMBER          reduce using rule 29 (statement_list -> statement_list statement .)
    STRING          reduce using rule 29 (statement_list -> statement_list statement .)
    Q               reduce using rule 29 (statement_list -> statement_list statement .)
    QQ              reduce using rule 29 (statement_list -> statement_list statement .)
    QX              reduce using rule 29 (statement_list -> statement_list statement .)
    ADDOP           reduce using rule 29 (statement_list -> statement_list statement .)
    !               reduce using rule 29 (statement_list -> statement_list statement .)
    ~               reduce using rule 29 (statement_list -> statement_list statement .)
    INCREMENT       reduce using rule 29 (statement_list -> statement_list statement .)
    DECREMENT       reduce using rule 29 (statement_list -> statement_list statement .)
    WNOT            reduce using rule 29 (statement_list -> statement_list statement .)
    SEMI            reduce using rule 29 (statement_list -> statement_list statement .)
    COMMA           reduce using rule 29 (statement_list -> statement_list statement .)
    $end            reduce using rule 29 (statement_list -> statement_list statement .)
    BRACES_RIGHT    reduce using rule 29 (statement_list -> statement_list statement .)


state 67

    (68) arg -> empty .

    SEMI            reduce using rule 68 (arg -> empty .)
    COMMA           reduce using rule 68 (arg -> empty .)
    NAME            reduce using rule 68 (arg -> empty .)
    SUB             reduce using rule 68 (arg -> empty .)
    PRINT           reduce using rule 68 (arg -> empty .)
    USE             reduce using rule 68 (arg -> empty .)
    COMMENT         reduce using rule 68 (arg -> empty .)
    MY              reduce using rule 68 (arg -> empty .)
    FOR             reduce using rule 68 (arg -> empty .)
    WHILE           reduce using rule 68 (arg -> empty .)
    DO              reduce using rule 68 (arg -> empty .)
    UNTIL           reduce using rule 68 (arg -> empty .)
    FOREACH         reduce using rule 68 (arg -> empty .)
    IF              reduce using rule 68 (arg -> empty .)
    ELSE            reduce using rule 68 (arg -> empty .)
    ELSIF           reduce using rule 68 (arg -> empty .)
    UNLESS          reduce using rule 68 (arg -> empty .)
    PARANTHESIS_L   reduce using rule 68 (arg -> empty .)
    NUMBER          reduce using rule 68 (arg -> empty .)
    STRING          reduce using rule 68 (arg -> empty .)
    Q               reduce using rule 68 (arg -> empty .)
    QQ              reduce using rule 68 (arg -> empty .)
    QX              reduce using rule 68 (arg -> empty .)
    ADDOP           reduce using rule 68 (arg -> empty .)
    !               reduce using rule 68 (arg -> empty .)
    ~               reduce using rule 68 (arg -> empty .)
    INCREMENT       reduce using rule 68 (arg -> empty .)
    DECREMENT       reduce using rule 68 (arg -> empty .)
    WNOT            reduce using rule 68 (arg -> empty .)
    $end            reduce using rule 68 (arg -> empty .)
    BRACES_RIGHT    reduce using rule 68 (arg -> empty .)
    ASSIGNOP        reduce using rule 68 (arg -> empty .)
    PARANTHESIS_R   reduce using rule 68 (arg -> empty .)


state 68

    (73) package_dec -> PACKAGE NAME . SEMI

    SEMI            shift and go to state 125


state 69

    (90) var_dec -> NAME ASSIGNOP . SHIFT SEMI
    (91) var_dec -> NAME ASSIGNOP . term SEMI
    (92) var_dec -> NAME ASSIGNOP . array_statement SEMI
    (1) object_creation -> NAME ASSIGNOP . NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (19) array_statement -> . PARANTHESIS_L arg_list PARANTHESIS_R
    (20) array_statement -> . PARANTHESIS_L NUMBER DOTDOT NUMBER PARANTHESIS_R
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    SHIFT           shift and go to state 127
    NAME            shift and go to state 126
    PARANTHESIS_L   shift and go to state 130
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 128
    array_statement                shift and go to state 129
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 70

    (7) obj_func_call -> NAME DEREF . NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (72) var_deref -> NAME DEREF . BRACES_LEFT NAME BRACES_RIGHT

    NAME            shift and go to state 131
    BRACES_LEFT     shift and go to state 132


state 71

    (31) sub_script -> NAME [ . term ]
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 133
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 72

    (60) statement -> print_st SEMI .

    NAME            reduce using rule 60 (statement -> print_st SEMI .)
    SUB             reduce using rule 60 (statement -> print_st SEMI .)
    PRINT           reduce using rule 60 (statement -> print_st SEMI .)
    USE             reduce using rule 60 (statement -> print_st SEMI .)
    COMMENT         reduce using rule 60 (statement -> print_st SEMI .)
    MY              reduce using rule 60 (statement -> print_st SEMI .)
    FOR             reduce using rule 60 (statement -> print_st SEMI .)
    WHILE           reduce using rule 60 (statement -> print_st SEMI .)
    DO              reduce using rule 60 (statement -> print_st SEMI .)
    UNTIL           reduce using rule 60 (statement -> print_st SEMI .)
    FOREACH         reduce using rule 60 (statement -> print_st SEMI .)
    IF              reduce using rule 60 (statement -> print_st SEMI .)
    ELSE            reduce using rule 60 (statement -> print_st SEMI .)
    ELSIF           reduce using rule 60 (statement -> print_st SEMI .)
    UNLESS          reduce using rule 60 (statement -> print_st SEMI .)
    PARANTHESIS_L   reduce using rule 60 (statement -> print_st SEMI .)
    NUMBER          reduce using rule 60 (statement -> print_st SEMI .)
    STRING          reduce using rule 60 (statement -> print_st SEMI .)
    Q               reduce using rule 60 (statement -> print_st SEMI .)
    QQ              reduce using rule 60 (statement -> print_st SEMI .)
    QX              reduce using rule 60 (statement -> print_st SEMI .)
    ADDOP           reduce using rule 60 (statement -> print_st SEMI .)
    !               reduce using rule 60 (statement -> print_st SEMI .)
    ~               reduce using rule 60 (statement -> print_st SEMI .)
    INCREMENT       reduce using rule 60 (statement -> print_st SEMI .)
    DECREMENT       reduce using rule 60 (statement -> print_st SEMI .)
    WNOT            reduce using rule 60 (statement -> print_st SEMI .)
    SEMI            reduce using rule 60 (statement -> print_st SEMI .)
    COMMA           reduce using rule 60 (statement -> print_st SEMI .)
    $end            reduce using rule 60 (statement -> print_st SEMI .)
    BRACES_RIGHT    reduce using rule 60 (statement -> print_st SEMI .)
    ASSIGNOP        reduce using rule 60 (statement -> print_st SEMI .)


state 73

    (63) statement -> arg_list SEMI .

    NAME            reduce using rule 63 (statement -> arg_list SEMI .)
    SUB             reduce using rule 63 (statement -> arg_list SEMI .)
    PRINT           reduce using rule 63 (statement -> arg_list SEMI .)
    USE             reduce using rule 63 (statement -> arg_list SEMI .)
    COMMENT         reduce using rule 63 (statement -> arg_list SEMI .)
    MY              reduce using rule 63 (statement -> arg_list SEMI .)
    FOR             reduce using rule 63 (statement -> arg_list SEMI .)
    WHILE           reduce using rule 63 (statement -> arg_list SEMI .)
    DO              reduce using rule 63 (statement -> arg_list SEMI .)
    UNTIL           reduce using rule 63 (statement -> arg_list SEMI .)
    FOREACH         reduce using rule 63 (statement -> arg_list SEMI .)
    IF              reduce using rule 63 (statement -> arg_list SEMI .)
    ELSE            reduce using rule 63 (statement -> arg_list SEMI .)
    ELSIF           reduce using rule 63 (statement -> arg_list SEMI .)
    UNLESS          reduce using rule 63 (statement -> arg_list SEMI .)
    PARANTHESIS_L   reduce using rule 63 (statement -> arg_list SEMI .)
    NUMBER          reduce using rule 63 (statement -> arg_list SEMI .)
    STRING          reduce using rule 63 (statement -> arg_list SEMI .)
    Q               reduce using rule 63 (statement -> arg_list SEMI .)
    QQ              reduce using rule 63 (statement -> arg_list SEMI .)
    QX              reduce using rule 63 (statement -> arg_list SEMI .)
    ADDOP           reduce using rule 63 (statement -> arg_list SEMI .)
    !               reduce using rule 63 (statement -> arg_list SEMI .)
    ~               reduce using rule 63 (statement -> arg_list SEMI .)
    INCREMENT       reduce using rule 63 (statement -> arg_list SEMI .)
    DECREMENT       reduce using rule 63 (statement -> arg_list SEMI .)
    WNOT            reduce using rule 63 (statement -> arg_list SEMI .)
    SEMI            reduce using rule 63 (statement -> arg_list SEMI .)
    COMMA           reduce using rule 63 (statement -> arg_list SEMI .)
    $end            reduce using rule 63 (statement -> arg_list SEMI .)
    BRACES_RIGHT    reduce using rule 63 (statement -> arg_list SEMI .)
    ASSIGNOP        reduce using rule 63 (statement -> arg_list SEMI .)


state 74

    (66) arg_list -> arg_list COMMA . arg
    (67) arg -> . term
    (68) arg -> . empty
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (107) empty -> .
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for PARANTHESIS_L resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for Q resolved as shift
  ! shift/reduce conflict for QQ resolved as shift
  ! shift/reduce conflict for QX resolved as shift
  ! shift/reduce conflict for ADDOP resolved as shift
  ! shift/reduce conflict for ! resolved as shift
  ! shift/reduce conflict for ~ resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for WNOT resolved as shift
    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    SUB             reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    USE             reduce using rule 107 (empty -> .)
    COMMENT         reduce using rule 107 (empty -> .)
    MY              reduce using rule 107 (empty -> .)
    FOR             reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    DO              reduce using rule 107 (empty -> .)
    UNTIL           reduce using rule 107 (empty -> .)
    FOREACH         reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    ELSE            reduce using rule 107 (empty -> .)
    ELSIF           reduce using rule 107 (empty -> .)
    UNLESS          reduce using rule 107 (empty -> .)
    $end            reduce using rule 107 (empty -> .)
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    ASSIGNOP        reduce using rule 107 (empty -> .)
    PARANTHESIS_R   reduce using rule 107 (empty -> .)
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 107 (empty -> .) ]
  ! PARANTHESIS_L   [ reduce using rule 107 (empty -> .) ]
  ! NUMBER          [ reduce using rule 107 (empty -> .) ]
  ! STRING          [ reduce using rule 107 (empty -> .) ]
  ! Q               [ reduce using rule 107 (empty -> .) ]
  ! QQ              [ reduce using rule 107 (empty -> .) ]
  ! QX              [ reduce using rule 107 (empty -> .) ]
  ! ADDOP           [ reduce using rule 107 (empty -> .) ]
  ! !               [ reduce using rule 107 (empty -> .) ]
  ! ~               [ reduce using rule 107 (empty -> .) ]
  ! INCREMENT       [ reduce using rule 107 (empty -> .) ]
  ! DECREMENT       [ reduce using rule 107 (empty -> .) ]
  ! WNOT            [ reduce using rule 107 (empty -> .) ]

    arg                            shift and go to state 134
    term                           shift and go to state 22
    empty                          shift and go to state 67
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 75

    (88) var_dec -> my NAME . ASSIGNOP SHIFT SEMI
    (89) var_dec -> my NAME . ASSIGNOP term SEMI

    ASSIGNOP        shift and go to state 135


state 76

    (117) term -> term ? . term : term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 136
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 77

    (33) termbinop -> term POWOP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 137
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 78

    (34) termbinop -> term MULOP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 138
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 79

    (35) termbinop -> term ADDOP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 139
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 80

    (36) termbinop -> term SHIFTOP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 140
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 81

    (37) termbinop -> term RELOP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 141
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 82

    (38) termbinop -> term EQOP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 142
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 83

    (39) termbinop -> term BITANDOP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 143
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 84

    (40) termbinop -> term BITOROP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 144
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 85

    (41) termbinop -> term DOTDOT . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 145
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 86

    (42) termbinop -> term ANDAND . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 146
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 87

    (43) termbinop -> term OROR . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 147
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 88

    (44) termbinop -> term DORDOR . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 148
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 89

    (45) termbinop -> term MATCHOP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 149
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 90

    (46) termbinop -> term WAND . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 150
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 91

    (47) termbinop -> term WOR . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 151
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 92

    (48) termbinop -> term WXOR . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 152
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 93

    (101) termunop -> term INCREMENT .

    ?               reduce using rule 101 (termunop -> term INCREMENT .)
    POWOP           reduce using rule 101 (termunop -> term INCREMENT .)
    MULOP           reduce using rule 101 (termunop -> term INCREMENT .)
    ADDOP           reduce using rule 101 (termunop -> term INCREMENT .)
    SHIFTOP         reduce using rule 101 (termunop -> term INCREMENT .)
    RELOP           reduce using rule 101 (termunop -> term INCREMENT .)
    EQOP            reduce using rule 101 (termunop -> term INCREMENT .)
    BITANDOP        reduce using rule 101 (termunop -> term INCREMENT .)
    BITOROP         reduce using rule 101 (termunop -> term INCREMENT .)
    DOTDOT          reduce using rule 101 (termunop -> term INCREMENT .)
    ANDAND          reduce using rule 101 (termunop -> term INCREMENT .)
    OROR            reduce using rule 101 (termunop -> term INCREMENT .)
    DORDOR          reduce using rule 101 (termunop -> term INCREMENT .)
    MATCHOP         reduce using rule 101 (termunop -> term INCREMENT .)
    WAND            reduce using rule 101 (termunop -> term INCREMENT .)
    WOR             reduce using rule 101 (termunop -> term INCREMENT .)
    WXOR            reduce using rule 101 (termunop -> term INCREMENT .)
    INCREMENT       reduce using rule 101 (termunop -> term INCREMENT .)
    DECREMENT       reduce using rule 101 (termunop -> term INCREMENT .)
    DEREF           reduce using rule 101 (termunop -> term INCREMENT .)
    SEMI            reduce using rule 101 (termunop -> term INCREMENT .)
    COMMA           reduce using rule 101 (termunop -> term INCREMENT .)
    PARANTHESIS_R   reduce using rule 101 (termunop -> term INCREMENT .)
    NAME            reduce using rule 101 (termunop -> term INCREMENT .)
    SUB             reduce using rule 101 (termunop -> term INCREMENT .)
    PRINT           reduce using rule 101 (termunop -> term INCREMENT .)
    USE             reduce using rule 101 (termunop -> term INCREMENT .)
    COMMENT         reduce using rule 101 (termunop -> term INCREMENT .)
    MY              reduce using rule 101 (termunop -> term INCREMENT .)
    FOR             reduce using rule 101 (termunop -> term INCREMENT .)
    WHILE           reduce using rule 101 (termunop -> term INCREMENT .)
    DO              reduce using rule 101 (termunop -> term INCREMENT .)
    UNTIL           reduce using rule 101 (termunop -> term INCREMENT .)
    FOREACH         reduce using rule 101 (termunop -> term INCREMENT .)
    IF              reduce using rule 101 (termunop -> term INCREMENT .)
    ELSE            reduce using rule 101 (termunop -> term INCREMENT .)
    ELSIF           reduce using rule 101 (termunop -> term INCREMENT .)
    UNLESS          reduce using rule 101 (termunop -> term INCREMENT .)
    PARANTHESIS_L   reduce using rule 101 (termunop -> term INCREMENT .)
    NUMBER          reduce using rule 101 (termunop -> term INCREMENT .)
    STRING          reduce using rule 101 (termunop -> term INCREMENT .)
    Q               reduce using rule 101 (termunop -> term INCREMENT .)
    QQ              reduce using rule 101 (termunop -> term INCREMENT .)
    QX              reduce using rule 101 (termunop -> term INCREMENT .)
    !               reduce using rule 101 (termunop -> term INCREMENT .)
    ~               reduce using rule 101 (termunop -> term INCREMENT .)
    WNOT            reduce using rule 101 (termunop -> term INCREMENT .)
    $end            reduce using rule 101 (termunop -> term INCREMENT .)
    BRACES_RIGHT    reduce using rule 101 (termunop -> term INCREMENT .)
    ASSIGNOP        reduce using rule 101 (termunop -> term INCREMENT .)
    ]               reduce using rule 101 (termunop -> term INCREMENT .)
    :               reduce using rule 101 (termunop -> term INCREMENT .)


state 94

    (102) termunop -> term DECREMENT .

    ?               reduce using rule 102 (termunop -> term DECREMENT .)
    POWOP           reduce using rule 102 (termunop -> term DECREMENT .)
    MULOP           reduce using rule 102 (termunop -> term DECREMENT .)
    ADDOP           reduce using rule 102 (termunop -> term DECREMENT .)
    SHIFTOP         reduce using rule 102 (termunop -> term DECREMENT .)
    RELOP           reduce using rule 102 (termunop -> term DECREMENT .)
    EQOP            reduce using rule 102 (termunop -> term DECREMENT .)
    BITANDOP        reduce using rule 102 (termunop -> term DECREMENT .)
    BITOROP         reduce using rule 102 (termunop -> term DECREMENT .)
    DOTDOT          reduce using rule 102 (termunop -> term DECREMENT .)
    ANDAND          reduce using rule 102 (termunop -> term DECREMENT .)
    OROR            reduce using rule 102 (termunop -> term DECREMENT .)
    DORDOR          reduce using rule 102 (termunop -> term DECREMENT .)
    MATCHOP         reduce using rule 102 (termunop -> term DECREMENT .)
    WAND            reduce using rule 102 (termunop -> term DECREMENT .)
    WOR             reduce using rule 102 (termunop -> term DECREMENT .)
    WXOR            reduce using rule 102 (termunop -> term DECREMENT .)
    INCREMENT       reduce using rule 102 (termunop -> term DECREMENT .)
    DECREMENT       reduce using rule 102 (termunop -> term DECREMENT .)
    DEREF           reduce using rule 102 (termunop -> term DECREMENT .)
    SEMI            reduce using rule 102 (termunop -> term DECREMENT .)
    COMMA           reduce using rule 102 (termunop -> term DECREMENT .)
    PARANTHESIS_R   reduce using rule 102 (termunop -> term DECREMENT .)
    NAME            reduce using rule 102 (termunop -> term DECREMENT .)
    SUB             reduce using rule 102 (termunop -> term DECREMENT .)
    PRINT           reduce using rule 102 (termunop -> term DECREMENT .)
    USE             reduce using rule 102 (termunop -> term DECREMENT .)
    COMMENT         reduce using rule 102 (termunop -> term DECREMENT .)
    MY              reduce using rule 102 (termunop -> term DECREMENT .)
    FOR             reduce using rule 102 (termunop -> term DECREMENT .)
    WHILE           reduce using rule 102 (termunop -> term DECREMENT .)
    DO              reduce using rule 102 (termunop -> term DECREMENT .)
    UNTIL           reduce using rule 102 (termunop -> term DECREMENT .)
    FOREACH         reduce using rule 102 (termunop -> term DECREMENT .)
    IF              reduce using rule 102 (termunop -> term DECREMENT .)
    ELSE            reduce using rule 102 (termunop -> term DECREMENT .)
    ELSIF           reduce using rule 102 (termunop -> term DECREMENT .)
    UNLESS          reduce using rule 102 (termunop -> term DECREMENT .)
    PARANTHESIS_L   reduce using rule 102 (termunop -> term DECREMENT .)
    NUMBER          reduce using rule 102 (termunop -> term DECREMENT .)
    STRING          reduce using rule 102 (termunop -> term DECREMENT .)
    Q               reduce using rule 102 (termunop -> term DECREMENT .)
    QQ              reduce using rule 102 (termunop -> term DECREMENT .)
    QX              reduce using rule 102 (termunop -> term DECREMENT .)
    !               reduce using rule 102 (termunop -> term DECREMENT .)
    ~               reduce using rule 102 (termunop -> term DECREMENT .)
    WNOT            reduce using rule 102 (termunop -> term DECREMENT .)
    $end            reduce using rule 102 (termunop -> term DECREMENT .)
    BRACES_RIGHT    reduce using rule 102 (termunop -> term DECREMENT .)
    ASSIGNOP        reduce using rule 102 (termunop -> term DECREMENT .)
    ]               reduce using rule 102 (termunop -> term DECREMENT .)
    :               reduce using rule 102 (termunop -> term DECREMENT .)


state 95

    (103) termunop -> term DEREF .

    ?               reduce using rule 103 (termunop -> term DEREF .)
    POWOP           reduce using rule 103 (termunop -> term DEREF .)
    MULOP           reduce using rule 103 (termunop -> term DEREF .)
    ADDOP           reduce using rule 103 (termunop -> term DEREF .)
    SHIFTOP         reduce using rule 103 (termunop -> term DEREF .)
    RELOP           reduce using rule 103 (termunop -> term DEREF .)
    EQOP            reduce using rule 103 (termunop -> term DEREF .)
    BITANDOP        reduce using rule 103 (termunop -> term DEREF .)
    BITOROP         reduce using rule 103 (termunop -> term DEREF .)
    DOTDOT          reduce using rule 103 (termunop -> term DEREF .)
    ANDAND          reduce using rule 103 (termunop -> term DEREF .)
    OROR            reduce using rule 103 (termunop -> term DEREF .)
    DORDOR          reduce using rule 103 (termunop -> term DEREF .)
    MATCHOP         reduce using rule 103 (termunop -> term DEREF .)
    WAND            reduce using rule 103 (termunop -> term DEREF .)
    WOR             reduce using rule 103 (termunop -> term DEREF .)
    WXOR            reduce using rule 103 (termunop -> term DEREF .)
    INCREMENT       reduce using rule 103 (termunop -> term DEREF .)
    DECREMENT       reduce using rule 103 (termunop -> term DEREF .)
    DEREF           reduce using rule 103 (termunop -> term DEREF .)
    SEMI            reduce using rule 103 (termunop -> term DEREF .)
    COMMA           reduce using rule 103 (termunop -> term DEREF .)
    PARANTHESIS_R   reduce using rule 103 (termunop -> term DEREF .)
    NAME            reduce using rule 103 (termunop -> term DEREF .)
    SUB             reduce using rule 103 (termunop -> term DEREF .)
    PRINT           reduce using rule 103 (termunop -> term DEREF .)
    USE             reduce using rule 103 (termunop -> term DEREF .)
    COMMENT         reduce using rule 103 (termunop -> term DEREF .)
    MY              reduce using rule 103 (termunop -> term DEREF .)
    FOR             reduce using rule 103 (termunop -> term DEREF .)
    WHILE           reduce using rule 103 (termunop -> term DEREF .)
    DO              reduce using rule 103 (termunop -> term DEREF .)
    UNTIL           reduce using rule 103 (termunop -> term DEREF .)
    FOREACH         reduce using rule 103 (termunop -> term DEREF .)
    IF              reduce using rule 103 (termunop -> term DEREF .)
    ELSE            reduce using rule 103 (termunop -> term DEREF .)
    ELSIF           reduce using rule 103 (termunop -> term DEREF .)
    UNLESS          reduce using rule 103 (termunop -> term DEREF .)
    PARANTHESIS_L   reduce using rule 103 (termunop -> term DEREF .)
    NUMBER          reduce using rule 103 (termunop -> term DEREF .)
    STRING          reduce using rule 103 (termunop -> term DEREF .)
    Q               reduce using rule 103 (termunop -> term DEREF .)
    QQ              reduce using rule 103 (termunop -> term DEREF .)
    QX              reduce using rule 103 (termunop -> term DEREF .)
    !               reduce using rule 103 (termunop -> term DEREF .)
    ~               reduce using rule 103 (termunop -> term DEREF .)
    WNOT            reduce using rule 103 (termunop -> term DEREF .)
    $end            reduce using rule 103 (termunop -> term DEREF .)
    BRACES_RIGHT    reduce using rule 103 (termunop -> term DEREF .)
    ASSIGNOP        reduce using rule 103 (termunop -> term DEREF .)
    ]               reduce using rule 103 (termunop -> term DEREF .)
    :               reduce using rule 103 (termunop -> term DEREF .)


state 96

    (93) var_dec -> sub_script ASSIGNOP . term SEMI
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    sub_script                     shift and go to state 101
    term                           shift and go to state 153
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 97

    (81) function_dec -> SUB NAME . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 154


state 98

    (4) constructor -> SUB NEW . BRACES_LEFT constructor_body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 155


state 99

    (111) term -> PARANTHESIS_L term . PARANTHESIS_R
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    PARANTHESIS_R   shift and go to state 156
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95


state 100

    (112) term -> NAME .
    (72) var_deref -> NAME . DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> NAME . [ term ]

  ! shift/reduce conflict for DEREF resolved as shift
    PARANTHESIS_R   reduce using rule 112 (term -> NAME .)
    ?               reduce using rule 112 (term -> NAME .)
    POWOP           reduce using rule 112 (term -> NAME .)
    MULOP           reduce using rule 112 (term -> NAME .)
    ADDOP           reduce using rule 112 (term -> NAME .)
    SHIFTOP         reduce using rule 112 (term -> NAME .)
    RELOP           reduce using rule 112 (term -> NAME .)
    EQOP            reduce using rule 112 (term -> NAME .)
    BITANDOP        reduce using rule 112 (term -> NAME .)
    BITOROP         reduce using rule 112 (term -> NAME .)
    DOTDOT          reduce using rule 112 (term -> NAME .)
    ANDAND          reduce using rule 112 (term -> NAME .)
    OROR            reduce using rule 112 (term -> NAME .)
    DORDOR          reduce using rule 112 (term -> NAME .)
    MATCHOP         reduce using rule 112 (term -> NAME .)
    WAND            reduce using rule 112 (term -> NAME .)
    WOR             reduce using rule 112 (term -> NAME .)
    WXOR            reduce using rule 112 (term -> NAME .)
    INCREMENT       reduce using rule 112 (term -> NAME .)
    DECREMENT       reduce using rule 112 (term -> NAME .)
    SEMI            reduce using rule 112 (term -> NAME .)
    COMMA           reduce using rule 112 (term -> NAME .)
    NAME            reduce using rule 112 (term -> NAME .)
    SUB             reduce using rule 112 (term -> NAME .)
    PRINT           reduce using rule 112 (term -> NAME .)
    USE             reduce using rule 112 (term -> NAME .)
    COMMENT         reduce using rule 112 (term -> NAME .)
    MY              reduce using rule 112 (term -> NAME .)
    FOR             reduce using rule 112 (term -> NAME .)
    WHILE           reduce using rule 112 (term -> NAME .)
    DO              reduce using rule 112 (term -> NAME .)
    UNTIL           reduce using rule 112 (term -> NAME .)
    FOREACH         reduce using rule 112 (term -> NAME .)
    IF              reduce using rule 112 (term -> NAME .)
    ELSE            reduce using rule 112 (term -> NAME .)
    ELSIF           reduce using rule 112 (term -> NAME .)
    UNLESS          reduce using rule 112 (term -> NAME .)
    PARANTHESIS_L   reduce using rule 112 (term -> NAME .)
    NUMBER          reduce using rule 112 (term -> NAME .)
    STRING          reduce using rule 112 (term -> NAME .)
    Q               reduce using rule 112 (term -> NAME .)
    QQ              reduce using rule 112 (term -> NAME .)
    QX              reduce using rule 112 (term -> NAME .)
    !               reduce using rule 112 (term -> NAME .)
    ~               reduce using rule 112 (term -> NAME .)
    WNOT            reduce using rule 112 (term -> NAME .)
    $end            reduce using rule 112 (term -> NAME .)
    BRACES_RIGHT    reduce using rule 112 (term -> NAME .)
    ASSIGNOP        reduce using rule 112 (term -> NAME .)
    ]               reduce using rule 112 (term -> NAME .)
    :               reduce using rule 112 (term -> NAME .)
    DEREF           shift and go to state 157
    [               shift and go to state 71

  ! DEREF           [ reduce using rule 112 (term -> NAME .) ]


state 101

    (116) term -> sub_script .

    PARANTHESIS_R   reduce using rule 116 (term -> sub_script .)
    ?               reduce using rule 116 (term -> sub_script .)
    POWOP           reduce using rule 116 (term -> sub_script .)
    MULOP           reduce using rule 116 (term -> sub_script .)
    ADDOP           reduce using rule 116 (term -> sub_script .)
    SHIFTOP         reduce using rule 116 (term -> sub_script .)
    RELOP           reduce using rule 116 (term -> sub_script .)
    EQOP            reduce using rule 116 (term -> sub_script .)
    BITANDOP        reduce using rule 116 (term -> sub_script .)
    BITOROP         reduce using rule 116 (term -> sub_script .)
    DOTDOT          reduce using rule 116 (term -> sub_script .)
    ANDAND          reduce using rule 116 (term -> sub_script .)
    OROR            reduce using rule 116 (term -> sub_script .)
    DORDOR          reduce using rule 116 (term -> sub_script .)
    MATCHOP         reduce using rule 116 (term -> sub_script .)
    WAND            reduce using rule 116 (term -> sub_script .)
    WOR             reduce using rule 116 (term -> sub_script .)
    WXOR            reduce using rule 116 (term -> sub_script .)
    INCREMENT       reduce using rule 116 (term -> sub_script .)
    DECREMENT       reduce using rule 116 (term -> sub_script .)
    DEREF           reduce using rule 116 (term -> sub_script .)
    COMMA           reduce using rule 116 (term -> sub_script .)
    SEMI            reduce using rule 116 (term -> sub_script .)
    NAME            reduce using rule 116 (term -> sub_script .)
    SUB             reduce using rule 116 (term -> sub_script .)
    PRINT           reduce using rule 116 (term -> sub_script .)
    USE             reduce using rule 116 (term -> sub_script .)
    COMMENT         reduce using rule 116 (term -> sub_script .)
    MY              reduce using rule 116 (term -> sub_script .)
    FOR             reduce using rule 116 (term -> sub_script .)
    WHILE           reduce using rule 116 (term -> sub_script .)
    DO              reduce using rule 116 (term -> sub_script .)
    UNTIL           reduce using rule 116 (term -> sub_script .)
    FOREACH         reduce using rule 116 (term -> sub_script .)
    IF              reduce using rule 116 (term -> sub_script .)
    ELSE            reduce using rule 116 (term -> sub_script .)
    ELSIF           reduce using rule 116 (term -> sub_script .)
    UNLESS          reduce using rule 116 (term -> sub_script .)
    PARANTHESIS_L   reduce using rule 116 (term -> sub_script .)
    NUMBER          reduce using rule 116 (term -> sub_script .)
    STRING          reduce using rule 116 (term -> sub_script .)
    Q               reduce using rule 116 (term -> sub_script .)
    QQ              reduce using rule 116 (term -> sub_script .)
    QX              reduce using rule 116 (term -> sub_script .)
    !               reduce using rule 116 (term -> sub_script .)
    ~               reduce using rule 116 (term -> sub_script .)
    WNOT            reduce using rule 116 (term -> sub_script .)
    $end            reduce using rule 116 (term -> sub_script .)
    BRACES_RIGHT    reduce using rule 116 (term -> sub_script .)
    ASSIGNOP        reduce using rule 116 (term -> sub_script .)
    ]               reduce using rule 116 (term -> sub_script .)
    :               reduce using rule 116 (term -> sub_script .)


state 102

    (2) print_st -> PRINT HANDLE .

    SEMI            reduce using rule 2 (print_st -> PRINT HANDLE .)
    NAME            reduce using rule 2 (print_st -> PRINT HANDLE .)
    SUB             reduce using rule 2 (print_st -> PRINT HANDLE .)
    PRINT           reduce using rule 2 (print_st -> PRINT HANDLE .)
    USE             reduce using rule 2 (print_st -> PRINT HANDLE .)
    COMMENT         reduce using rule 2 (print_st -> PRINT HANDLE .)
    MY              reduce using rule 2 (print_st -> PRINT HANDLE .)
    FOR             reduce using rule 2 (print_st -> PRINT HANDLE .)
    WHILE           reduce using rule 2 (print_st -> PRINT HANDLE .)
    DO              reduce using rule 2 (print_st -> PRINT HANDLE .)
    UNTIL           reduce using rule 2 (print_st -> PRINT HANDLE .)
    FOREACH         reduce using rule 2 (print_st -> PRINT HANDLE .)
    IF              reduce using rule 2 (print_st -> PRINT HANDLE .)
    ELSE            reduce using rule 2 (print_st -> PRINT HANDLE .)
    ELSIF           reduce using rule 2 (print_st -> PRINT HANDLE .)
    UNLESS          reduce using rule 2 (print_st -> PRINT HANDLE .)
    PARANTHESIS_L   reduce using rule 2 (print_st -> PRINT HANDLE .)
    NUMBER          reduce using rule 2 (print_st -> PRINT HANDLE .)
    STRING          reduce using rule 2 (print_st -> PRINT HANDLE .)
    Q               reduce using rule 2 (print_st -> PRINT HANDLE .)
    QQ              reduce using rule 2 (print_st -> PRINT HANDLE .)
    QX              reduce using rule 2 (print_st -> PRINT HANDLE .)
    ADDOP           reduce using rule 2 (print_st -> PRINT HANDLE .)
    !               reduce using rule 2 (print_st -> PRINT HANDLE .)
    ~               reduce using rule 2 (print_st -> PRINT HANDLE .)
    INCREMENT       reduce using rule 2 (print_st -> PRINT HANDLE .)
    DECREMENT       reduce using rule 2 (print_st -> PRINT HANDLE .)
    WNOT            reduce using rule 2 (print_st -> PRINT HANDLE .)
    COMMA           reduce using rule 2 (print_st -> PRINT HANDLE .)
    $end            reduce using rule 2 (print_st -> PRINT HANDLE .)
    BRACES_RIGHT    reduce using rule 2 (print_st -> PRINT HANDLE .)
    ASSIGNOP        reduce using rule 2 (print_st -> PRINT HANDLE .)


state 103

    (3) print_st -> PRINT PARANTHESIS_L . HANDLE PARANTHESIS_R
    (111) term -> PARANTHESIS_L . term PARANTHESIS_R
    (49) HANDLE -> . arg_list
    (50) HANDLE -> . NAME arg_list
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]
    (67) arg -> . term
    (68) arg -> . empty
    (107) empty -> .

    NAME            shift and go to state 105
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64
    COMMA           reduce using rule 107 (empty -> .)
    PARANTHESIS_R   reduce using rule 107 (empty -> .)

    HANDLE                         shift and go to state 158
    term                           shift and go to state 159
    arg_list                       shift and go to state 104
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101
    arg                            shift and go to state 30
    empty                          shift and go to state 67

state 104

    (49) HANDLE -> arg_list .
    (66) arg_list -> arg_list . COMMA arg

  ! shift/reduce conflict for COMMA resolved as shift
    SEMI            reduce using rule 49 (HANDLE -> arg_list .)
    NAME            reduce using rule 49 (HANDLE -> arg_list .)
    SUB             reduce using rule 49 (HANDLE -> arg_list .)
    PRINT           reduce using rule 49 (HANDLE -> arg_list .)
    USE             reduce using rule 49 (HANDLE -> arg_list .)
    COMMENT         reduce using rule 49 (HANDLE -> arg_list .)
    MY              reduce using rule 49 (HANDLE -> arg_list .)
    FOR             reduce using rule 49 (HANDLE -> arg_list .)
    WHILE           reduce using rule 49 (HANDLE -> arg_list .)
    DO              reduce using rule 49 (HANDLE -> arg_list .)
    UNTIL           reduce using rule 49 (HANDLE -> arg_list .)
    FOREACH         reduce using rule 49 (HANDLE -> arg_list .)
    IF              reduce using rule 49 (HANDLE -> arg_list .)
    ELSE            reduce using rule 49 (HANDLE -> arg_list .)
    ELSIF           reduce using rule 49 (HANDLE -> arg_list .)
    UNLESS          reduce using rule 49 (HANDLE -> arg_list .)
    PARANTHESIS_L   reduce using rule 49 (HANDLE -> arg_list .)
    NUMBER          reduce using rule 49 (HANDLE -> arg_list .)
    STRING          reduce using rule 49 (HANDLE -> arg_list .)
    Q               reduce using rule 49 (HANDLE -> arg_list .)
    QQ              reduce using rule 49 (HANDLE -> arg_list .)
    QX              reduce using rule 49 (HANDLE -> arg_list .)
    ADDOP           reduce using rule 49 (HANDLE -> arg_list .)
    !               reduce using rule 49 (HANDLE -> arg_list .)
    ~               reduce using rule 49 (HANDLE -> arg_list .)
    INCREMENT       reduce using rule 49 (HANDLE -> arg_list .)
    DECREMENT       reduce using rule 49 (HANDLE -> arg_list .)
    WNOT            reduce using rule 49 (HANDLE -> arg_list .)
    $end            reduce using rule 49 (HANDLE -> arg_list .)
    BRACES_RIGHT    reduce using rule 49 (HANDLE -> arg_list .)
    ASSIGNOP        reduce using rule 49 (HANDLE -> arg_list .)
    PARANTHESIS_R   reduce using rule 49 (HANDLE -> arg_list .)
    COMMA           shift and go to state 74

  ! COMMA           [ reduce using rule 49 (HANDLE -> arg_list .) ]


state 105

    (50) HANDLE -> NAME . arg_list
    (112) term -> NAME .
    (72) var_deref -> NAME . DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> NAME . [ term ]
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (67) arg -> . term
    (68) arg -> . empty
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (107) empty -> .
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

  ! shift/reduce conflict for DEREF resolved as shift
  ! shift/reduce conflict for PARANTHESIS_L resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for Q resolved as shift
  ! shift/reduce conflict for QQ resolved as shift
  ! shift/reduce conflict for QX resolved as shift
  ! reduce/reduce conflict for COMMA resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for SEMI resolved using rule 107 (empty -> .)
  ! shift/reduce conflict for NAME resolved as shift
  ! reduce/reduce conflict for SUB resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for USE resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for COMMENT resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for MY resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for FOR resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for DO resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for UNTIL resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for FOREACH resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for IF resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for ELSE resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for ELSIF resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for UNLESS resolved using rule 107 (empty -> .)
  ! shift/reduce conflict for PARANTHESIS_L resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for Q resolved as shift
  ! shift/reduce conflict for QQ resolved as shift
  ! shift/reduce conflict for QX resolved as shift
  ! reduce/reduce conflict for ADDOP resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for ! resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for ~ resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for INCREMENT resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for DECREMENT resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for WNOT resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for $end resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for BRACES_RIGHT resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for ASSIGNOP resolved using rule 107 (empty -> .)
  ! reduce/reduce conflict for PARANTHESIS_R resolved using rule 107 (empty -> .)
  ! shift/reduce conflict for ADDOP resolved as shift
  ! shift/reduce conflict for ! resolved as shift
  ! shift/reduce conflict for ~ resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for WNOT resolved as shift
    ?               reduce using rule 112 (term -> NAME .)
    POWOP           reduce using rule 112 (term -> NAME .)
    MULOP           reduce using rule 112 (term -> NAME .)
    SHIFTOP         reduce using rule 112 (term -> NAME .)
    RELOP           reduce using rule 112 (term -> NAME .)
    EQOP            reduce using rule 112 (term -> NAME .)
    BITANDOP        reduce using rule 112 (term -> NAME .)
    BITOROP         reduce using rule 112 (term -> NAME .)
    DOTDOT          reduce using rule 112 (term -> NAME .)
    ANDAND          reduce using rule 112 (term -> NAME .)
    OROR            reduce using rule 112 (term -> NAME .)
    DORDOR          reduce using rule 112 (term -> NAME .)
    MATCHOP         reduce using rule 112 (term -> NAME .)
    WAND            reduce using rule 112 (term -> NAME .)
    WOR             reduce using rule 112 (term -> NAME .)
    WXOR            reduce using rule 112 (term -> NAME .)
    DEREF           shift and go to state 157
    [               shift and go to state 71
    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    COMMA           reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    SUB             reduce using rule 107 (empty -> .)
    PRINT           reduce using rule 107 (empty -> .)
    USE             reduce using rule 107 (empty -> .)
    COMMENT         reduce using rule 107 (empty -> .)
    MY              reduce using rule 107 (empty -> .)
    FOR             reduce using rule 107 (empty -> .)
    WHILE           reduce using rule 107 (empty -> .)
    DO              reduce using rule 107 (empty -> .)
    UNTIL           reduce using rule 107 (empty -> .)
    FOREACH         reduce using rule 107 (empty -> .)
    IF              reduce using rule 107 (empty -> .)
    ELSE            reduce using rule 107 (empty -> .)
    ELSIF           reduce using rule 107 (empty -> .)
    UNLESS          reduce using rule 107 (empty -> .)
    $end            reduce using rule 107 (empty -> .)
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    ASSIGNOP        reduce using rule 107 (empty -> .)
    PARANTHESIS_R   reduce using rule 107 (empty -> .)
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! ADDOP           [ reduce using rule 112 (term -> NAME .) ]
  ! INCREMENT       [ reduce using rule 112 (term -> NAME .) ]
  ! DECREMENT       [ reduce using rule 112 (term -> NAME .) ]
  ! DEREF           [ reduce using rule 112 (term -> NAME .) ]
  ! COMMA           [ reduce using rule 112 (term -> NAME .) ]
  ! SEMI            [ reduce using rule 112 (term -> NAME .) ]
  ! NAME            [ reduce using rule 112 (term -> NAME .) ]
  ! SUB             [ reduce using rule 112 (term -> NAME .) ]
  ! PRINT           [ reduce using rule 112 (term -> NAME .) ]
  ! USE             [ reduce using rule 112 (term -> NAME .) ]
  ! COMMENT         [ reduce using rule 112 (term -> NAME .) ]
  ! MY              [ reduce using rule 112 (term -> NAME .) ]
  ! FOR             [ reduce using rule 112 (term -> NAME .) ]
  ! WHILE           [ reduce using rule 112 (term -> NAME .) ]
  ! DO              [ reduce using rule 112 (term -> NAME .) ]
  ! UNTIL           [ reduce using rule 112 (term -> NAME .) ]
  ! FOREACH         [ reduce using rule 112 (term -> NAME .) ]
  ! IF              [ reduce using rule 112 (term -> NAME .) ]
  ! ELSE            [ reduce using rule 112 (term -> NAME .) ]
  ! ELSIF           [ reduce using rule 112 (term -> NAME .) ]
  ! UNLESS          [ reduce using rule 112 (term -> NAME .) ]
  ! PARANTHESIS_L   [ reduce using rule 112 (term -> NAME .) ]
  ! NUMBER          [ reduce using rule 112 (term -> NAME .) ]
  ! STRING          [ reduce using rule 112 (term -> NAME .) ]
  ! Q               [ reduce using rule 112 (term -> NAME .) ]
  ! QQ              [ reduce using rule 112 (term -> NAME .) ]
  ! QX              [ reduce using rule 112 (term -> NAME .) ]
  ! !               [ reduce using rule 112 (term -> NAME .) ]
  ! ~               [ reduce using rule 112 (term -> NAME .) ]
  ! WNOT            [ reduce using rule 112 (term -> NAME .) ]
  ! $end            [ reduce using rule 112 (term -> NAME .) ]
  ! BRACES_RIGHT    [ reduce using rule 112 (term -> NAME .) ]
  ! ASSIGNOP        [ reduce using rule 112 (term -> NAME .) ]
  ! PARANTHESIS_R   [ reduce using rule 112 (term -> NAME .) ]
  ! NAME            [ reduce using rule 107 (empty -> .) ]
  ! PARANTHESIS_L   [ reduce using rule 107 (empty -> .) ]
  ! NUMBER          [ reduce using rule 107 (empty -> .) ]
  ! STRING          [ reduce using rule 107 (empty -> .) ]
  ! Q               [ reduce using rule 107 (empty -> .) ]
  ! QQ              [ reduce using rule 107 (empty -> .) ]
  ! QX              [ reduce using rule 107 (empty -> .) ]
  ! ADDOP           [ reduce using rule 107 (empty -> .) ]
  ! !               [ reduce using rule 107 (empty -> .) ]
  ! ~               [ reduce using rule 107 (empty -> .) ]
  ! INCREMENT       [ reduce using rule 107 (empty -> .) ]
  ! DECREMENT       [ reduce using rule 107 (empty -> .) ]
  ! WNOT            [ reduce using rule 107 (empty -> .) ]

    arg_list                       shift and go to state 160
    term                           shift and go to state 22
    arg                            shift and go to state 30
    empty                          shift and go to state 67
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 106

    (78) use_st -> USE NAME . SEMI

    SEMI            shift and go to state 161


state 107

    (24) for_st -> FOR PARANTHESIS_L . NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L . NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 162


state 108

    (104) termunop -> INCREMENT term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 104 (termunop -> INCREMENT term .)
    POWOP           reduce using rule 104 (termunop -> INCREMENT term .)
    MULOP           reduce using rule 104 (termunop -> INCREMENT term .)
    ADDOP           reduce using rule 104 (termunop -> INCREMENT term .)
    SHIFTOP         reduce using rule 104 (termunop -> INCREMENT term .)
    RELOP           reduce using rule 104 (termunop -> INCREMENT term .)
    EQOP            reduce using rule 104 (termunop -> INCREMENT term .)
    BITANDOP        reduce using rule 104 (termunop -> INCREMENT term .)
    BITOROP         reduce using rule 104 (termunop -> INCREMENT term .)
    DOTDOT          reduce using rule 104 (termunop -> INCREMENT term .)
    ANDAND          reduce using rule 104 (termunop -> INCREMENT term .)
    OROR            reduce using rule 104 (termunop -> INCREMENT term .)
    DORDOR          reduce using rule 104 (termunop -> INCREMENT term .)
    MATCHOP         reduce using rule 104 (termunop -> INCREMENT term .)
    WAND            reduce using rule 104 (termunop -> INCREMENT term .)
    WOR             reduce using rule 104 (termunop -> INCREMENT term .)
    WXOR            reduce using rule 104 (termunop -> INCREMENT term .)
    INCREMENT       reduce using rule 104 (termunop -> INCREMENT term .)
    DECREMENT       reduce using rule 104 (termunop -> INCREMENT term .)
    SEMI            reduce using rule 104 (termunop -> INCREMENT term .)
    COMMA           reduce using rule 104 (termunop -> INCREMENT term .)
    PARANTHESIS_R   reduce using rule 104 (termunop -> INCREMENT term .)
    NAME            reduce using rule 104 (termunop -> INCREMENT term .)
    SUB             reduce using rule 104 (termunop -> INCREMENT term .)
    PRINT           reduce using rule 104 (termunop -> INCREMENT term .)
    USE             reduce using rule 104 (termunop -> INCREMENT term .)
    COMMENT         reduce using rule 104 (termunop -> INCREMENT term .)
    MY              reduce using rule 104 (termunop -> INCREMENT term .)
    FOR             reduce using rule 104 (termunop -> INCREMENT term .)
    WHILE           reduce using rule 104 (termunop -> INCREMENT term .)
    DO              reduce using rule 104 (termunop -> INCREMENT term .)
    UNTIL           reduce using rule 104 (termunop -> INCREMENT term .)
    FOREACH         reduce using rule 104 (termunop -> INCREMENT term .)
    IF              reduce using rule 104 (termunop -> INCREMENT term .)
    ELSE            reduce using rule 104 (termunop -> INCREMENT term .)
    ELSIF           reduce using rule 104 (termunop -> INCREMENT term .)
    UNLESS          reduce using rule 104 (termunop -> INCREMENT term .)
    PARANTHESIS_L   reduce using rule 104 (termunop -> INCREMENT term .)
    NUMBER          reduce using rule 104 (termunop -> INCREMENT term .)
    STRING          reduce using rule 104 (termunop -> INCREMENT term .)
    Q               reduce using rule 104 (termunop -> INCREMENT term .)
    QQ              reduce using rule 104 (termunop -> INCREMENT term .)
    QX              reduce using rule 104 (termunop -> INCREMENT term .)
    !               reduce using rule 104 (termunop -> INCREMENT term .)
    ~               reduce using rule 104 (termunop -> INCREMENT term .)
    WNOT            reduce using rule 104 (termunop -> INCREMENT term .)
    $end            reduce using rule 104 (termunop -> INCREMENT term .)
    BRACES_RIGHT    reduce using rule 104 (termunop -> INCREMENT term .)
    ASSIGNOP        reduce using rule 104 (termunop -> INCREMENT term .)
    ]               reduce using rule 104 (termunop -> INCREMENT term .)
    :               reduce using rule 104 (termunop -> INCREMENT term .)
    DEREF           shift and go to state 95

  ! DEREF           [ reduce using rule 104 (termunop -> INCREMENT term .) ]
  ! ?               [ shift and go to state 76 ]
  ! POWOP           [ shift and go to state 77 ]
  ! MULOP           [ shift and go to state 78 ]
  ! ADDOP           [ shift and go to state 79 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! MATCHOP         [ shift and go to state 89 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]
  ! INCREMENT       [ shift and go to state 93 ]
  ! DECREMENT       [ shift and go to state 94 ]


state 109

    (105) termunop -> DECREMENT term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 105 (termunop -> DECREMENT term .)
    POWOP           reduce using rule 105 (termunop -> DECREMENT term .)
    MULOP           reduce using rule 105 (termunop -> DECREMENT term .)
    ADDOP           reduce using rule 105 (termunop -> DECREMENT term .)
    SHIFTOP         reduce using rule 105 (termunop -> DECREMENT term .)
    RELOP           reduce using rule 105 (termunop -> DECREMENT term .)
    EQOP            reduce using rule 105 (termunop -> DECREMENT term .)
    BITANDOP        reduce using rule 105 (termunop -> DECREMENT term .)
    BITOROP         reduce using rule 105 (termunop -> DECREMENT term .)
    DOTDOT          reduce using rule 105 (termunop -> DECREMENT term .)
    ANDAND          reduce using rule 105 (termunop -> DECREMENT term .)
    OROR            reduce using rule 105 (termunop -> DECREMENT term .)
    DORDOR          reduce using rule 105 (termunop -> DECREMENT term .)
    MATCHOP         reduce using rule 105 (termunop -> DECREMENT term .)
    WAND            reduce using rule 105 (termunop -> DECREMENT term .)
    WOR             reduce using rule 105 (termunop -> DECREMENT term .)
    WXOR            reduce using rule 105 (termunop -> DECREMENT term .)
    INCREMENT       reduce using rule 105 (termunop -> DECREMENT term .)
    DECREMENT       reduce using rule 105 (termunop -> DECREMENT term .)
    SEMI            reduce using rule 105 (termunop -> DECREMENT term .)
    COMMA           reduce using rule 105 (termunop -> DECREMENT term .)
    PARANTHESIS_R   reduce using rule 105 (termunop -> DECREMENT term .)
    NAME            reduce using rule 105 (termunop -> DECREMENT term .)
    SUB             reduce using rule 105 (termunop -> DECREMENT term .)
    PRINT           reduce using rule 105 (termunop -> DECREMENT term .)
    USE             reduce using rule 105 (termunop -> DECREMENT term .)
    COMMENT         reduce using rule 105 (termunop -> DECREMENT term .)
    MY              reduce using rule 105 (termunop -> DECREMENT term .)
    FOR             reduce using rule 105 (termunop -> DECREMENT term .)
    WHILE           reduce using rule 105 (termunop -> DECREMENT term .)
    DO              reduce using rule 105 (termunop -> DECREMENT term .)
    UNTIL           reduce using rule 105 (termunop -> DECREMENT term .)
    FOREACH         reduce using rule 105 (termunop -> DECREMENT term .)
    IF              reduce using rule 105 (termunop -> DECREMENT term .)
    ELSE            reduce using rule 105 (termunop -> DECREMENT term .)
    ELSIF           reduce using rule 105 (termunop -> DECREMENT term .)
    UNLESS          reduce using rule 105 (termunop -> DECREMENT term .)
    PARANTHESIS_L   reduce using rule 105 (termunop -> DECREMENT term .)
    NUMBER          reduce using rule 105 (termunop -> DECREMENT term .)
    STRING          reduce using rule 105 (termunop -> DECREMENT term .)
    Q               reduce using rule 105 (termunop -> DECREMENT term .)
    QQ              reduce using rule 105 (termunop -> DECREMENT term .)
    QX              reduce using rule 105 (termunop -> DECREMENT term .)
    !               reduce using rule 105 (termunop -> DECREMENT term .)
    ~               reduce using rule 105 (termunop -> DECREMENT term .)
    WNOT            reduce using rule 105 (termunop -> DECREMENT term .)
    $end            reduce using rule 105 (termunop -> DECREMENT term .)
    BRACES_RIGHT    reduce using rule 105 (termunop -> DECREMENT term .)
    ASSIGNOP        reduce using rule 105 (termunop -> DECREMENT term .)
    ]               reduce using rule 105 (termunop -> DECREMENT term .)
    :               reduce using rule 105 (termunop -> DECREMENT term .)
    DEREF           shift and go to state 95

  ! DEREF           [ reduce using rule 105 (termunop -> DECREMENT term .) ]
  ! ?               [ shift and go to state 76 ]
  ! POWOP           [ shift and go to state 77 ]
  ! MULOP           [ shift and go to state 78 ]
  ! ADDOP           [ shift and go to state 79 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! MATCHOP         [ shift and go to state 89 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]
  ! INCREMENT       [ shift and go to state 93 ]
  ! DECREMENT       [ shift and go to state 94 ]


state 110

    (52) while_st -> WHILE PARANTHESIS_L . NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> WHILE PARANTHESIS_L . NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 163
    NUMBER          shift and go to state 164


state 111

    (69) do_while_st -> DO BRACES_LEFT . body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 165
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 112

    (71) until_st -> UNTIL PARANTHESIS_L . NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 166


state 113

    (51) foreach_st -> FOREACH NAME . PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_L   shift and go to state 167


state 114

    (83) if_st -> IF PARANTHESIS_L . NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> IF PARANTHESIS_L . NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 168


state 115

    (86) else_st -> ELSE BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 169
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 116

    (94) elsif_st -> ELSIF PARANTHESIS_L . NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> ELSIF PARANTHESIS_L . NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 170


state 117

    (96) unless_st -> UNLESS PARANTHESIS_L . NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> UNLESS PARANTHESIS_L . NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 171


state 118

    (118) term -> Q BRACES_LEFT . NAME BRACES_RIGHT

    NAME            shift and go to state 172


state 119

    (119) term -> QQ BRACES_LEFT . NAME BRACES_RIGHT

    NAME            shift and go to state 173


state 120

    (120) term -> QX BRACES_LEFT . NAME BRACES_RIGHT

    NAME            shift and go to state 174


state 121

    (98) termunop -> ADDOP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 98 (termunop -> ADDOP term .)
    MULOP           reduce using rule 98 (termunop -> ADDOP term .)
    ADDOP           reduce using rule 98 (termunop -> ADDOP term .)
    SHIFTOP         reduce using rule 98 (termunop -> ADDOP term .)
    RELOP           reduce using rule 98 (termunop -> ADDOP term .)
    EQOP            reduce using rule 98 (termunop -> ADDOP term .)
    BITANDOP        reduce using rule 98 (termunop -> ADDOP term .)
    BITOROP         reduce using rule 98 (termunop -> ADDOP term .)
    DOTDOT          reduce using rule 98 (termunop -> ADDOP term .)
    ANDAND          reduce using rule 98 (termunop -> ADDOP term .)
    OROR            reduce using rule 98 (termunop -> ADDOP term .)
    DORDOR          reduce using rule 98 (termunop -> ADDOP term .)
    MATCHOP         reduce using rule 98 (termunop -> ADDOP term .)
    WAND            reduce using rule 98 (termunop -> ADDOP term .)
    WOR             reduce using rule 98 (termunop -> ADDOP term .)
    WXOR            reduce using rule 98 (termunop -> ADDOP term .)
    SEMI            reduce using rule 98 (termunop -> ADDOP term .)
    COMMA           reduce using rule 98 (termunop -> ADDOP term .)
    PARANTHESIS_R   reduce using rule 98 (termunop -> ADDOP term .)
    NAME            reduce using rule 98 (termunop -> ADDOP term .)
    SUB             reduce using rule 98 (termunop -> ADDOP term .)
    PRINT           reduce using rule 98 (termunop -> ADDOP term .)
    USE             reduce using rule 98 (termunop -> ADDOP term .)
    COMMENT         reduce using rule 98 (termunop -> ADDOP term .)
    MY              reduce using rule 98 (termunop -> ADDOP term .)
    FOR             reduce using rule 98 (termunop -> ADDOP term .)
    WHILE           reduce using rule 98 (termunop -> ADDOP term .)
    DO              reduce using rule 98 (termunop -> ADDOP term .)
    UNTIL           reduce using rule 98 (termunop -> ADDOP term .)
    FOREACH         reduce using rule 98 (termunop -> ADDOP term .)
    IF              reduce using rule 98 (termunop -> ADDOP term .)
    ELSE            reduce using rule 98 (termunop -> ADDOP term .)
    ELSIF           reduce using rule 98 (termunop -> ADDOP term .)
    UNLESS          reduce using rule 98 (termunop -> ADDOP term .)
    PARANTHESIS_L   reduce using rule 98 (termunop -> ADDOP term .)
    NUMBER          reduce using rule 98 (termunop -> ADDOP term .)
    STRING          reduce using rule 98 (termunop -> ADDOP term .)
    Q               reduce using rule 98 (termunop -> ADDOP term .)
    QQ              reduce using rule 98 (termunop -> ADDOP term .)
    QX              reduce using rule 98 (termunop -> ADDOP term .)
    !               reduce using rule 98 (termunop -> ADDOP term .)
    ~               reduce using rule 98 (termunop -> ADDOP term .)
    WNOT            reduce using rule 98 (termunop -> ADDOP term .)
    $end            reduce using rule 98 (termunop -> ADDOP term .)
    BRACES_RIGHT    reduce using rule 98 (termunop -> ADDOP term .)
    ASSIGNOP        reduce using rule 98 (termunop -> ADDOP term .)
    ]               reduce using rule 98 (termunop -> ADDOP term .)
    :               reduce using rule 98 (termunop -> ADDOP term .)
    POWOP           shift and go to state 77
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 98 (termunop -> ADDOP term .) ]
  ! INCREMENT       [ reduce using rule 98 (termunop -> ADDOP term .) ]
  ! DECREMENT       [ reduce using rule 98 (termunop -> ADDOP term .) ]
  ! DEREF           [ reduce using rule 98 (termunop -> ADDOP term .) ]
  ! ?               [ shift and go to state 76 ]
  ! MULOP           [ shift and go to state 78 ]
  ! ADDOP           [ shift and go to state 79 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! MATCHOP         [ shift and go to state 89 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 122

    (99) termunop -> ! term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 99 (termunop -> ! term .)
    MULOP           reduce using rule 99 (termunop -> ! term .)
    ADDOP           reduce using rule 99 (termunop -> ! term .)
    SHIFTOP         reduce using rule 99 (termunop -> ! term .)
    RELOP           reduce using rule 99 (termunop -> ! term .)
    EQOP            reduce using rule 99 (termunop -> ! term .)
    BITANDOP        reduce using rule 99 (termunop -> ! term .)
    BITOROP         reduce using rule 99 (termunop -> ! term .)
    DOTDOT          reduce using rule 99 (termunop -> ! term .)
    ANDAND          reduce using rule 99 (termunop -> ! term .)
    OROR            reduce using rule 99 (termunop -> ! term .)
    DORDOR          reduce using rule 99 (termunop -> ! term .)
    MATCHOP         reduce using rule 99 (termunop -> ! term .)
    WAND            reduce using rule 99 (termunop -> ! term .)
    WOR             reduce using rule 99 (termunop -> ! term .)
    WXOR            reduce using rule 99 (termunop -> ! term .)
    SEMI            reduce using rule 99 (termunop -> ! term .)
    COMMA           reduce using rule 99 (termunop -> ! term .)
    PARANTHESIS_R   reduce using rule 99 (termunop -> ! term .)
    NAME            reduce using rule 99 (termunop -> ! term .)
    SUB             reduce using rule 99 (termunop -> ! term .)
    PRINT           reduce using rule 99 (termunop -> ! term .)
    USE             reduce using rule 99 (termunop -> ! term .)
    COMMENT         reduce using rule 99 (termunop -> ! term .)
    MY              reduce using rule 99 (termunop -> ! term .)
    FOR             reduce using rule 99 (termunop -> ! term .)
    WHILE           reduce using rule 99 (termunop -> ! term .)
    DO              reduce using rule 99 (termunop -> ! term .)
    UNTIL           reduce using rule 99 (termunop -> ! term .)
    FOREACH         reduce using rule 99 (termunop -> ! term .)
    IF              reduce using rule 99 (termunop -> ! term .)
    ELSE            reduce using rule 99 (termunop -> ! term .)
    ELSIF           reduce using rule 99 (termunop -> ! term .)
    UNLESS          reduce using rule 99 (termunop -> ! term .)
    PARANTHESIS_L   reduce using rule 99 (termunop -> ! term .)
    NUMBER          reduce using rule 99 (termunop -> ! term .)
    STRING          reduce using rule 99 (termunop -> ! term .)
    Q               reduce using rule 99 (termunop -> ! term .)
    QQ              reduce using rule 99 (termunop -> ! term .)
    QX              reduce using rule 99 (termunop -> ! term .)
    !               reduce using rule 99 (termunop -> ! term .)
    ~               reduce using rule 99 (termunop -> ! term .)
    WNOT            reduce using rule 99 (termunop -> ! term .)
    $end            reduce using rule 99 (termunop -> ! term .)
    BRACES_RIGHT    reduce using rule 99 (termunop -> ! term .)
    ASSIGNOP        reduce using rule 99 (termunop -> ! term .)
    ]               reduce using rule 99 (termunop -> ! term .)
    :               reduce using rule 99 (termunop -> ! term .)
    POWOP           shift and go to state 77
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 99 (termunop -> ! term .) ]
  ! INCREMENT       [ reduce using rule 99 (termunop -> ! term .) ]
  ! DECREMENT       [ reduce using rule 99 (termunop -> ! term .) ]
  ! DEREF           [ reduce using rule 99 (termunop -> ! term .) ]
  ! ?               [ shift and go to state 76 ]
  ! MULOP           [ shift and go to state 78 ]
  ! ADDOP           [ shift and go to state 79 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! MATCHOP         [ shift and go to state 89 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 123

    (100) termunop -> ~ term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 100 (termunop -> ~ term .)
    MULOP           reduce using rule 100 (termunop -> ~ term .)
    ADDOP           reduce using rule 100 (termunop -> ~ term .)
    SHIFTOP         reduce using rule 100 (termunop -> ~ term .)
    RELOP           reduce using rule 100 (termunop -> ~ term .)
    EQOP            reduce using rule 100 (termunop -> ~ term .)
    BITANDOP        reduce using rule 100 (termunop -> ~ term .)
    BITOROP         reduce using rule 100 (termunop -> ~ term .)
    DOTDOT          reduce using rule 100 (termunop -> ~ term .)
    ANDAND          reduce using rule 100 (termunop -> ~ term .)
    OROR            reduce using rule 100 (termunop -> ~ term .)
    DORDOR          reduce using rule 100 (termunop -> ~ term .)
    MATCHOP         reduce using rule 100 (termunop -> ~ term .)
    WAND            reduce using rule 100 (termunop -> ~ term .)
    WOR             reduce using rule 100 (termunop -> ~ term .)
    WXOR            reduce using rule 100 (termunop -> ~ term .)
    SEMI            reduce using rule 100 (termunop -> ~ term .)
    COMMA           reduce using rule 100 (termunop -> ~ term .)
    PARANTHESIS_R   reduce using rule 100 (termunop -> ~ term .)
    NAME            reduce using rule 100 (termunop -> ~ term .)
    SUB             reduce using rule 100 (termunop -> ~ term .)
    PRINT           reduce using rule 100 (termunop -> ~ term .)
    USE             reduce using rule 100 (termunop -> ~ term .)
    COMMENT         reduce using rule 100 (termunop -> ~ term .)
    MY              reduce using rule 100 (termunop -> ~ term .)
    FOR             reduce using rule 100 (termunop -> ~ term .)
    WHILE           reduce using rule 100 (termunop -> ~ term .)
    DO              reduce using rule 100 (termunop -> ~ term .)
    UNTIL           reduce using rule 100 (termunop -> ~ term .)
    FOREACH         reduce using rule 100 (termunop -> ~ term .)
    IF              reduce using rule 100 (termunop -> ~ term .)
    ELSE            reduce using rule 100 (termunop -> ~ term .)
    ELSIF           reduce using rule 100 (termunop -> ~ term .)
    UNLESS          reduce using rule 100 (termunop -> ~ term .)
    PARANTHESIS_L   reduce using rule 100 (termunop -> ~ term .)
    NUMBER          reduce using rule 100 (termunop -> ~ term .)
    STRING          reduce using rule 100 (termunop -> ~ term .)
    Q               reduce using rule 100 (termunop -> ~ term .)
    QQ              reduce using rule 100 (termunop -> ~ term .)
    QX              reduce using rule 100 (termunop -> ~ term .)
    !               reduce using rule 100 (termunop -> ~ term .)
    ~               reduce using rule 100 (termunop -> ~ term .)
    WNOT            reduce using rule 100 (termunop -> ~ term .)
    $end            reduce using rule 100 (termunop -> ~ term .)
    BRACES_RIGHT    reduce using rule 100 (termunop -> ~ term .)
    ASSIGNOP        reduce using rule 100 (termunop -> ~ term .)
    ]               reduce using rule 100 (termunop -> ~ term .)
    :               reduce using rule 100 (termunop -> ~ term .)
    POWOP           shift and go to state 77
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 100 (termunop -> ~ term .) ]
  ! INCREMENT       [ reduce using rule 100 (termunop -> ~ term .) ]
  ! DECREMENT       [ reduce using rule 100 (termunop -> ~ term .) ]
  ! DEREF           [ reduce using rule 100 (termunop -> ~ term .) ]
  ! ?               [ shift and go to state 76 ]
  ! MULOP           [ shift and go to state 78 ]
  ! ADDOP           [ shift and go to state 79 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! MATCHOP         [ shift and go to state 89 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 124

    (106) termunop -> WNOT term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 106 (termunop -> WNOT term .)
    EQOP            reduce using rule 106 (termunop -> WNOT term .)
    WAND            reduce using rule 106 (termunop -> WNOT term .)
    WOR             reduce using rule 106 (termunop -> WNOT term .)
    WXOR            reduce using rule 106 (termunop -> WNOT term .)
    SEMI            reduce using rule 106 (termunop -> WNOT term .)
    COMMA           reduce using rule 106 (termunop -> WNOT term .)
    PARANTHESIS_R   reduce using rule 106 (termunop -> WNOT term .)
    NAME            reduce using rule 106 (termunop -> WNOT term .)
    SUB             reduce using rule 106 (termunop -> WNOT term .)
    PRINT           reduce using rule 106 (termunop -> WNOT term .)
    USE             reduce using rule 106 (termunop -> WNOT term .)
    COMMENT         reduce using rule 106 (termunop -> WNOT term .)
    MY              reduce using rule 106 (termunop -> WNOT term .)
    FOR             reduce using rule 106 (termunop -> WNOT term .)
    WHILE           reduce using rule 106 (termunop -> WNOT term .)
    DO              reduce using rule 106 (termunop -> WNOT term .)
    UNTIL           reduce using rule 106 (termunop -> WNOT term .)
    FOREACH         reduce using rule 106 (termunop -> WNOT term .)
    IF              reduce using rule 106 (termunop -> WNOT term .)
    ELSE            reduce using rule 106 (termunop -> WNOT term .)
    ELSIF           reduce using rule 106 (termunop -> WNOT term .)
    UNLESS          reduce using rule 106 (termunop -> WNOT term .)
    PARANTHESIS_L   reduce using rule 106 (termunop -> WNOT term .)
    NUMBER          reduce using rule 106 (termunop -> WNOT term .)
    STRING          reduce using rule 106 (termunop -> WNOT term .)
    Q               reduce using rule 106 (termunop -> WNOT term .)
    QQ              reduce using rule 106 (termunop -> WNOT term .)
    QX              reduce using rule 106 (termunop -> WNOT term .)
    !               reduce using rule 106 (termunop -> WNOT term .)
    ~               reduce using rule 106 (termunop -> WNOT term .)
    WNOT            reduce using rule 106 (termunop -> WNOT term .)
    $end            reduce using rule 106 (termunop -> WNOT term .)
    BRACES_RIGHT    reduce using rule 106 (termunop -> WNOT term .)
    ASSIGNOP        reduce using rule 106 (termunop -> WNOT term .)
    ]               reduce using rule 106 (termunop -> WNOT term .)
    :               reduce using rule 106 (termunop -> WNOT term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! MULOP           [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! ADDOP           [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! SHIFTOP         [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! RELOP           [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! BITANDOP        [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! BITOROP         [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! DOTDOT          [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! ANDAND          [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! OROR            [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! DORDOR          [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! MATCHOP         [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! INCREMENT       [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! DECREMENT       [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! DEREF           [ reduce using rule 106 (termunop -> WNOT term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 125

    (73) package_dec -> PACKAGE NAME SEMI .

    NAME            reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    SUB             reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    PRINT           reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    USE             reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    COMMENT         reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    MY              reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    FOR             reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    WHILE           reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    DO              reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    UNTIL           reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    FOREACH         reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    IF              reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    ELSE            reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    ELSIF           reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    UNLESS          reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    PARANTHESIS_L   reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    NUMBER          reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    STRING          reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    Q               reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    QQ              reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    QX              reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    ADDOP           reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    !               reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    ~               reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    INCREMENT       reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    DECREMENT       reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    WNOT            reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    SEMI            reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    COMMA           reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)
    $end            reduce using rule 73 (package_dec -> PACKAGE NAME SEMI .)


state 126

    (1) object_creation -> NAME ASSIGNOP NAME . DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (112) term -> NAME .
    (72) var_deref -> NAME . DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> NAME . [ term ]

  ! shift/reduce conflict for DEREF resolved as shift
    DEREF           shift and go to state 175
    SEMI            reduce using rule 112 (term -> NAME .)
    ?               reduce using rule 112 (term -> NAME .)
    POWOP           reduce using rule 112 (term -> NAME .)
    MULOP           reduce using rule 112 (term -> NAME .)
    ADDOP           reduce using rule 112 (term -> NAME .)
    SHIFTOP         reduce using rule 112 (term -> NAME .)
    RELOP           reduce using rule 112 (term -> NAME .)
    EQOP            reduce using rule 112 (term -> NAME .)
    BITANDOP        reduce using rule 112 (term -> NAME .)
    BITOROP         reduce using rule 112 (term -> NAME .)
    DOTDOT          reduce using rule 112 (term -> NAME .)
    ANDAND          reduce using rule 112 (term -> NAME .)
    OROR            reduce using rule 112 (term -> NAME .)
    DORDOR          reduce using rule 112 (term -> NAME .)
    MATCHOP         reduce using rule 112 (term -> NAME .)
    WAND            reduce using rule 112 (term -> NAME .)
    WOR             reduce using rule 112 (term -> NAME .)
    WXOR            reduce using rule 112 (term -> NAME .)
    INCREMENT       reduce using rule 112 (term -> NAME .)
    DECREMENT       reduce using rule 112 (term -> NAME .)
    [               shift and go to state 71

  ! DEREF           [ reduce using rule 112 (term -> NAME .) ]


state 127

    (90) var_dec -> NAME ASSIGNOP SHIFT . SEMI

    SEMI            shift and go to state 176


state 128

    (91) var_dec -> NAME ASSIGNOP term . SEMI
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    SEMI            shift and go to state 177
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95


state 129

    (92) var_dec -> NAME ASSIGNOP array_statement . SEMI

    SEMI            shift and go to state 178


state 130

    (111) term -> PARANTHESIS_L . term PARANTHESIS_R
    (19) array_statement -> PARANTHESIS_L . arg_list PARANTHESIS_R
    (20) array_statement -> PARANTHESIS_L . NUMBER DOTDOT NUMBER PARANTHESIS_R
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]
    (67) arg -> . term
    (68) arg -> . empty
    (107) empty -> .

    NUMBER          shift and go to state 180
    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64
    PARANTHESIS_R   reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)

    term                           shift and go to state 159
    arg_list                       shift and go to state 179
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101
    arg                            shift and go to state 30
    empty                          shift and go to state 67

state 131

    (7) obj_func_call -> NAME DEREF NAME . PARANTHESIS_L arg_list PARANTHESIS_R SEMI

    PARANTHESIS_L   shift and go to state 181


state 132

    (72) var_deref -> NAME DEREF BRACES_LEFT . NAME BRACES_RIGHT

    NAME            shift and go to state 182


state 133

    (31) sub_script -> NAME [ term . ]
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ]               shift and go to state 183
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95


state 134

    (66) arg_list -> arg_list COMMA arg .

    SEMI            reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    COMMA           reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    NAME            reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    SUB             reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    PRINT           reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    USE             reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    COMMENT         reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    MY              reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    FOR             reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    WHILE           reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    DO              reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    UNTIL           reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    FOREACH         reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    IF              reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    ELSE            reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    ELSIF           reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    UNLESS          reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    PARANTHESIS_L   reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    NUMBER          reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    STRING          reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    Q               reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    QQ              reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    QX              reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    ADDOP           reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    !               reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    ~               reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    INCREMENT       reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    DECREMENT       reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    WNOT            reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    $end            reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    BRACES_RIGHT    reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    ASSIGNOP        reduce using rule 66 (arg_list -> arg_list COMMA arg .)
    PARANTHESIS_R   reduce using rule 66 (arg_list -> arg_list COMMA arg .)


state 135

    (88) var_dec -> my NAME ASSIGNOP . SHIFT SEMI
    (89) var_dec -> my NAME ASSIGNOP . term SEMI
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    SHIFT           shift and go to state 184
    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 185
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 136

    (117) term -> term ? term . : term
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    :               shift and go to state 186
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95


state 137

    (33) termbinop -> term POWOP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 33 (termbinop -> term POWOP term .)
    MULOP           reduce using rule 33 (termbinop -> term POWOP term .)
    ADDOP           reduce using rule 33 (termbinop -> term POWOP term .)
    SHIFTOP         reduce using rule 33 (termbinop -> term POWOP term .)
    RELOP           reduce using rule 33 (termbinop -> term POWOP term .)
    EQOP            reduce using rule 33 (termbinop -> term POWOP term .)
    BITANDOP        reduce using rule 33 (termbinop -> term POWOP term .)
    BITOROP         reduce using rule 33 (termbinop -> term POWOP term .)
    DOTDOT          reduce using rule 33 (termbinop -> term POWOP term .)
    ANDAND          reduce using rule 33 (termbinop -> term POWOP term .)
    OROR            reduce using rule 33 (termbinop -> term POWOP term .)
    DORDOR          reduce using rule 33 (termbinop -> term POWOP term .)
    MATCHOP         reduce using rule 33 (termbinop -> term POWOP term .)
    WAND            reduce using rule 33 (termbinop -> term POWOP term .)
    WOR             reduce using rule 33 (termbinop -> term POWOP term .)
    WXOR            reduce using rule 33 (termbinop -> term POWOP term .)
    SEMI            reduce using rule 33 (termbinop -> term POWOP term .)
    COMMA           reduce using rule 33 (termbinop -> term POWOP term .)
    PARANTHESIS_R   reduce using rule 33 (termbinop -> term POWOP term .)
    NAME            reduce using rule 33 (termbinop -> term POWOP term .)
    SUB             reduce using rule 33 (termbinop -> term POWOP term .)
    PRINT           reduce using rule 33 (termbinop -> term POWOP term .)
    USE             reduce using rule 33 (termbinop -> term POWOP term .)
    COMMENT         reduce using rule 33 (termbinop -> term POWOP term .)
    MY              reduce using rule 33 (termbinop -> term POWOP term .)
    FOR             reduce using rule 33 (termbinop -> term POWOP term .)
    WHILE           reduce using rule 33 (termbinop -> term POWOP term .)
    DO              reduce using rule 33 (termbinop -> term POWOP term .)
    UNTIL           reduce using rule 33 (termbinop -> term POWOP term .)
    FOREACH         reduce using rule 33 (termbinop -> term POWOP term .)
    IF              reduce using rule 33 (termbinop -> term POWOP term .)
    ELSE            reduce using rule 33 (termbinop -> term POWOP term .)
    ELSIF           reduce using rule 33 (termbinop -> term POWOP term .)
    UNLESS          reduce using rule 33 (termbinop -> term POWOP term .)
    PARANTHESIS_L   reduce using rule 33 (termbinop -> term POWOP term .)
    NUMBER          reduce using rule 33 (termbinop -> term POWOP term .)
    STRING          reduce using rule 33 (termbinop -> term POWOP term .)
    Q               reduce using rule 33 (termbinop -> term POWOP term .)
    QQ              reduce using rule 33 (termbinop -> term POWOP term .)
    QX              reduce using rule 33 (termbinop -> term POWOP term .)
    !               reduce using rule 33 (termbinop -> term POWOP term .)
    ~               reduce using rule 33 (termbinop -> term POWOP term .)
    WNOT            reduce using rule 33 (termbinop -> term POWOP term .)
    $end            reduce using rule 33 (termbinop -> term POWOP term .)
    BRACES_RIGHT    reduce using rule 33 (termbinop -> term POWOP term .)
    ASSIGNOP        reduce using rule 33 (termbinop -> term POWOP term .)
    ]               reduce using rule 33 (termbinop -> term POWOP term .)
    :               reduce using rule 33 (termbinop -> term POWOP term .)
    POWOP           shift and go to state 77
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 33 (termbinop -> term POWOP term .) ]
  ! INCREMENT       [ reduce using rule 33 (termbinop -> term POWOP term .) ]
  ! DECREMENT       [ reduce using rule 33 (termbinop -> term POWOP term .) ]
  ! DEREF           [ reduce using rule 33 (termbinop -> term POWOP term .) ]
  ! ?               [ shift and go to state 76 ]
  ! MULOP           [ shift and go to state 78 ]
  ! ADDOP           [ shift and go to state 79 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! MATCHOP         [ shift and go to state 89 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 138

    (34) termbinop -> term MULOP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 34 (termbinop -> term MULOP term .)
    MULOP           reduce using rule 34 (termbinop -> term MULOP term .)
    ADDOP           reduce using rule 34 (termbinop -> term MULOP term .)
    SHIFTOP         reduce using rule 34 (termbinop -> term MULOP term .)
    RELOP           reduce using rule 34 (termbinop -> term MULOP term .)
    EQOP            reduce using rule 34 (termbinop -> term MULOP term .)
    BITANDOP        reduce using rule 34 (termbinop -> term MULOP term .)
    BITOROP         reduce using rule 34 (termbinop -> term MULOP term .)
    DOTDOT          reduce using rule 34 (termbinop -> term MULOP term .)
    ANDAND          reduce using rule 34 (termbinop -> term MULOP term .)
    OROR            reduce using rule 34 (termbinop -> term MULOP term .)
    DORDOR          reduce using rule 34 (termbinop -> term MULOP term .)
    WAND            reduce using rule 34 (termbinop -> term MULOP term .)
    WOR             reduce using rule 34 (termbinop -> term MULOP term .)
    WXOR            reduce using rule 34 (termbinop -> term MULOP term .)
    SEMI            reduce using rule 34 (termbinop -> term MULOP term .)
    COMMA           reduce using rule 34 (termbinop -> term MULOP term .)
    PARANTHESIS_R   reduce using rule 34 (termbinop -> term MULOP term .)
    NAME            reduce using rule 34 (termbinop -> term MULOP term .)
    SUB             reduce using rule 34 (termbinop -> term MULOP term .)
    PRINT           reduce using rule 34 (termbinop -> term MULOP term .)
    USE             reduce using rule 34 (termbinop -> term MULOP term .)
    COMMENT         reduce using rule 34 (termbinop -> term MULOP term .)
    MY              reduce using rule 34 (termbinop -> term MULOP term .)
    FOR             reduce using rule 34 (termbinop -> term MULOP term .)
    WHILE           reduce using rule 34 (termbinop -> term MULOP term .)
    DO              reduce using rule 34 (termbinop -> term MULOP term .)
    UNTIL           reduce using rule 34 (termbinop -> term MULOP term .)
    FOREACH         reduce using rule 34 (termbinop -> term MULOP term .)
    IF              reduce using rule 34 (termbinop -> term MULOP term .)
    ELSE            reduce using rule 34 (termbinop -> term MULOP term .)
    ELSIF           reduce using rule 34 (termbinop -> term MULOP term .)
    UNLESS          reduce using rule 34 (termbinop -> term MULOP term .)
    PARANTHESIS_L   reduce using rule 34 (termbinop -> term MULOP term .)
    NUMBER          reduce using rule 34 (termbinop -> term MULOP term .)
    STRING          reduce using rule 34 (termbinop -> term MULOP term .)
    Q               reduce using rule 34 (termbinop -> term MULOP term .)
    QQ              reduce using rule 34 (termbinop -> term MULOP term .)
    QX              reduce using rule 34 (termbinop -> term MULOP term .)
    !               reduce using rule 34 (termbinop -> term MULOP term .)
    ~               reduce using rule 34 (termbinop -> term MULOP term .)
    WNOT            reduce using rule 34 (termbinop -> term MULOP term .)
    $end            reduce using rule 34 (termbinop -> term MULOP term .)
    BRACES_RIGHT    reduce using rule 34 (termbinop -> term MULOP term .)
    ASSIGNOP        reduce using rule 34 (termbinop -> term MULOP term .)
    ]               reduce using rule 34 (termbinop -> term MULOP term .)
    :               reduce using rule 34 (termbinop -> term MULOP term .)
    POWOP           shift and go to state 77
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 34 (termbinop -> term MULOP term .) ]
  ! MATCHOP         [ reduce using rule 34 (termbinop -> term MULOP term .) ]
  ! INCREMENT       [ reduce using rule 34 (termbinop -> term MULOP term .) ]
  ! DECREMENT       [ reduce using rule 34 (termbinop -> term MULOP term .) ]
  ! DEREF           [ reduce using rule 34 (termbinop -> term MULOP term .) ]
  ! ?               [ shift and go to state 76 ]
  ! MULOP           [ shift and go to state 78 ]
  ! ADDOP           [ shift and go to state 79 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 139

    (35) termbinop -> term ADDOP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 35 (termbinop -> term ADDOP term .)
    ADDOP           reduce using rule 35 (termbinop -> term ADDOP term .)
    SHIFTOP         reduce using rule 35 (termbinop -> term ADDOP term .)
    RELOP           reduce using rule 35 (termbinop -> term ADDOP term .)
    EQOP            reduce using rule 35 (termbinop -> term ADDOP term .)
    BITANDOP        reduce using rule 35 (termbinop -> term ADDOP term .)
    BITOROP         reduce using rule 35 (termbinop -> term ADDOP term .)
    DOTDOT          reduce using rule 35 (termbinop -> term ADDOP term .)
    ANDAND          reduce using rule 35 (termbinop -> term ADDOP term .)
    OROR            reduce using rule 35 (termbinop -> term ADDOP term .)
    DORDOR          reduce using rule 35 (termbinop -> term ADDOP term .)
    WAND            reduce using rule 35 (termbinop -> term ADDOP term .)
    WOR             reduce using rule 35 (termbinop -> term ADDOP term .)
    WXOR            reduce using rule 35 (termbinop -> term ADDOP term .)
    SEMI            reduce using rule 35 (termbinop -> term ADDOP term .)
    COMMA           reduce using rule 35 (termbinop -> term ADDOP term .)
    PARANTHESIS_R   reduce using rule 35 (termbinop -> term ADDOP term .)
    NAME            reduce using rule 35 (termbinop -> term ADDOP term .)
    SUB             reduce using rule 35 (termbinop -> term ADDOP term .)
    PRINT           reduce using rule 35 (termbinop -> term ADDOP term .)
    USE             reduce using rule 35 (termbinop -> term ADDOP term .)
    COMMENT         reduce using rule 35 (termbinop -> term ADDOP term .)
    MY              reduce using rule 35 (termbinop -> term ADDOP term .)
    FOR             reduce using rule 35 (termbinop -> term ADDOP term .)
    WHILE           reduce using rule 35 (termbinop -> term ADDOP term .)
    DO              reduce using rule 35 (termbinop -> term ADDOP term .)
    UNTIL           reduce using rule 35 (termbinop -> term ADDOP term .)
    FOREACH         reduce using rule 35 (termbinop -> term ADDOP term .)
    IF              reduce using rule 35 (termbinop -> term ADDOP term .)
    ELSE            reduce using rule 35 (termbinop -> term ADDOP term .)
    ELSIF           reduce using rule 35 (termbinop -> term ADDOP term .)
    UNLESS          reduce using rule 35 (termbinop -> term ADDOP term .)
    PARANTHESIS_L   reduce using rule 35 (termbinop -> term ADDOP term .)
    NUMBER          reduce using rule 35 (termbinop -> term ADDOP term .)
    STRING          reduce using rule 35 (termbinop -> term ADDOP term .)
    Q               reduce using rule 35 (termbinop -> term ADDOP term .)
    QQ              reduce using rule 35 (termbinop -> term ADDOP term .)
    QX              reduce using rule 35 (termbinop -> term ADDOP term .)
    !               reduce using rule 35 (termbinop -> term ADDOP term .)
    ~               reduce using rule 35 (termbinop -> term ADDOP term .)
    WNOT            reduce using rule 35 (termbinop -> term ADDOP term .)
    $end            reduce using rule 35 (termbinop -> term ADDOP term .)
    BRACES_RIGHT    reduce using rule 35 (termbinop -> term ADDOP term .)
    ASSIGNOP        reduce using rule 35 (termbinop -> term ADDOP term .)
    ]               reduce using rule 35 (termbinop -> term ADDOP term .)
    :               reduce using rule 35 (termbinop -> term ADDOP term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 35 (termbinop -> term ADDOP term .) ]
  ! MULOP           [ reduce using rule 35 (termbinop -> term ADDOP term .) ]
  ! MATCHOP         [ reduce using rule 35 (termbinop -> term ADDOP term .) ]
  ! INCREMENT       [ reduce using rule 35 (termbinop -> term ADDOP term .) ]
  ! DECREMENT       [ reduce using rule 35 (termbinop -> term ADDOP term .) ]
  ! DEREF           [ reduce using rule 35 (termbinop -> term ADDOP term .) ]
  ! ?               [ shift and go to state 76 ]
  ! ADDOP           [ shift and go to state 79 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 140

    (36) termbinop -> term SHIFTOP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 36 (termbinop -> term SHIFTOP term .)
    SHIFTOP         reduce using rule 36 (termbinop -> term SHIFTOP term .)
    RELOP           reduce using rule 36 (termbinop -> term SHIFTOP term .)
    EQOP            reduce using rule 36 (termbinop -> term SHIFTOP term .)
    BITANDOP        reduce using rule 36 (termbinop -> term SHIFTOP term .)
    BITOROP         reduce using rule 36 (termbinop -> term SHIFTOP term .)
    DOTDOT          reduce using rule 36 (termbinop -> term SHIFTOP term .)
    ANDAND          reduce using rule 36 (termbinop -> term SHIFTOP term .)
    OROR            reduce using rule 36 (termbinop -> term SHIFTOP term .)
    DORDOR          reduce using rule 36 (termbinop -> term SHIFTOP term .)
    WAND            reduce using rule 36 (termbinop -> term SHIFTOP term .)
    WOR             reduce using rule 36 (termbinop -> term SHIFTOP term .)
    WXOR            reduce using rule 36 (termbinop -> term SHIFTOP term .)
    SEMI            reduce using rule 36 (termbinop -> term SHIFTOP term .)
    COMMA           reduce using rule 36 (termbinop -> term SHIFTOP term .)
    PARANTHESIS_R   reduce using rule 36 (termbinop -> term SHIFTOP term .)
    NAME            reduce using rule 36 (termbinop -> term SHIFTOP term .)
    SUB             reduce using rule 36 (termbinop -> term SHIFTOP term .)
    PRINT           reduce using rule 36 (termbinop -> term SHIFTOP term .)
    USE             reduce using rule 36 (termbinop -> term SHIFTOP term .)
    COMMENT         reduce using rule 36 (termbinop -> term SHIFTOP term .)
    MY              reduce using rule 36 (termbinop -> term SHIFTOP term .)
    FOR             reduce using rule 36 (termbinop -> term SHIFTOP term .)
    WHILE           reduce using rule 36 (termbinop -> term SHIFTOP term .)
    DO              reduce using rule 36 (termbinop -> term SHIFTOP term .)
    UNTIL           reduce using rule 36 (termbinop -> term SHIFTOP term .)
    FOREACH         reduce using rule 36 (termbinop -> term SHIFTOP term .)
    IF              reduce using rule 36 (termbinop -> term SHIFTOP term .)
    ELSE            reduce using rule 36 (termbinop -> term SHIFTOP term .)
    ELSIF           reduce using rule 36 (termbinop -> term SHIFTOP term .)
    UNLESS          reduce using rule 36 (termbinop -> term SHIFTOP term .)
    PARANTHESIS_L   reduce using rule 36 (termbinop -> term SHIFTOP term .)
    NUMBER          reduce using rule 36 (termbinop -> term SHIFTOP term .)
    STRING          reduce using rule 36 (termbinop -> term SHIFTOP term .)
    Q               reduce using rule 36 (termbinop -> term SHIFTOP term .)
    QQ              reduce using rule 36 (termbinop -> term SHIFTOP term .)
    QX              reduce using rule 36 (termbinop -> term SHIFTOP term .)
    !               reduce using rule 36 (termbinop -> term SHIFTOP term .)
    ~               reduce using rule 36 (termbinop -> term SHIFTOP term .)
    WNOT            reduce using rule 36 (termbinop -> term SHIFTOP term .)
    $end            reduce using rule 36 (termbinop -> term SHIFTOP term .)
    BRACES_RIGHT    reduce using rule 36 (termbinop -> term SHIFTOP term .)
    ASSIGNOP        reduce using rule 36 (termbinop -> term SHIFTOP term .)
    ]               reduce using rule 36 (termbinop -> term SHIFTOP term .)
    :               reduce using rule 36 (termbinop -> term SHIFTOP term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 36 (termbinop -> term SHIFTOP term .) ]
  ! MULOP           [ reduce using rule 36 (termbinop -> term SHIFTOP term .) ]
  ! ADDOP           [ reduce using rule 36 (termbinop -> term SHIFTOP term .) ]
  ! MATCHOP         [ reduce using rule 36 (termbinop -> term SHIFTOP term .) ]
  ! INCREMENT       [ reduce using rule 36 (termbinop -> term SHIFTOP term .) ]
  ! DECREMENT       [ reduce using rule 36 (termbinop -> term SHIFTOP term .) ]
  ! DEREF           [ reduce using rule 36 (termbinop -> term SHIFTOP term .) ]
  ! ?               [ shift and go to state 76 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 141

    (37) termbinop -> term RELOP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 37 (termbinop -> term RELOP term .)
    RELOP           reduce using rule 37 (termbinop -> term RELOP term .)
    EQOP            reduce using rule 37 (termbinop -> term RELOP term .)
    BITANDOP        reduce using rule 37 (termbinop -> term RELOP term .)
    BITOROP         reduce using rule 37 (termbinop -> term RELOP term .)
    DOTDOT          reduce using rule 37 (termbinop -> term RELOP term .)
    ANDAND          reduce using rule 37 (termbinop -> term RELOP term .)
    OROR            reduce using rule 37 (termbinop -> term RELOP term .)
    DORDOR          reduce using rule 37 (termbinop -> term RELOP term .)
    WAND            reduce using rule 37 (termbinop -> term RELOP term .)
    WOR             reduce using rule 37 (termbinop -> term RELOP term .)
    WXOR            reduce using rule 37 (termbinop -> term RELOP term .)
    SEMI            reduce using rule 37 (termbinop -> term RELOP term .)
    COMMA           reduce using rule 37 (termbinop -> term RELOP term .)
    PARANTHESIS_R   reduce using rule 37 (termbinop -> term RELOP term .)
    NAME            reduce using rule 37 (termbinop -> term RELOP term .)
    SUB             reduce using rule 37 (termbinop -> term RELOP term .)
    PRINT           reduce using rule 37 (termbinop -> term RELOP term .)
    USE             reduce using rule 37 (termbinop -> term RELOP term .)
    COMMENT         reduce using rule 37 (termbinop -> term RELOP term .)
    MY              reduce using rule 37 (termbinop -> term RELOP term .)
    FOR             reduce using rule 37 (termbinop -> term RELOP term .)
    WHILE           reduce using rule 37 (termbinop -> term RELOP term .)
    DO              reduce using rule 37 (termbinop -> term RELOP term .)
    UNTIL           reduce using rule 37 (termbinop -> term RELOP term .)
    FOREACH         reduce using rule 37 (termbinop -> term RELOP term .)
    IF              reduce using rule 37 (termbinop -> term RELOP term .)
    ELSE            reduce using rule 37 (termbinop -> term RELOP term .)
    ELSIF           reduce using rule 37 (termbinop -> term RELOP term .)
    UNLESS          reduce using rule 37 (termbinop -> term RELOP term .)
    PARANTHESIS_L   reduce using rule 37 (termbinop -> term RELOP term .)
    NUMBER          reduce using rule 37 (termbinop -> term RELOP term .)
    STRING          reduce using rule 37 (termbinop -> term RELOP term .)
    Q               reduce using rule 37 (termbinop -> term RELOP term .)
    QQ              reduce using rule 37 (termbinop -> term RELOP term .)
    QX              reduce using rule 37 (termbinop -> term RELOP term .)
    !               reduce using rule 37 (termbinop -> term RELOP term .)
    ~               reduce using rule 37 (termbinop -> term RELOP term .)
    WNOT            reduce using rule 37 (termbinop -> term RELOP term .)
    $end            reduce using rule 37 (termbinop -> term RELOP term .)
    BRACES_RIGHT    reduce using rule 37 (termbinop -> term RELOP term .)
    ASSIGNOP        reduce using rule 37 (termbinop -> term RELOP term .)
    ]               reduce using rule 37 (termbinop -> term RELOP term .)
    :               reduce using rule 37 (termbinop -> term RELOP term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 37 (termbinop -> term RELOP term .) ]
  ! MULOP           [ reduce using rule 37 (termbinop -> term RELOP term .) ]
  ! ADDOP           [ reduce using rule 37 (termbinop -> term RELOP term .) ]
  ! SHIFTOP         [ reduce using rule 37 (termbinop -> term RELOP term .) ]
  ! MATCHOP         [ reduce using rule 37 (termbinop -> term RELOP term .) ]
  ! INCREMENT       [ reduce using rule 37 (termbinop -> term RELOP term .) ]
  ! DECREMENT       [ reduce using rule 37 (termbinop -> term RELOP term .) ]
  ! DEREF           [ reduce using rule 37 (termbinop -> term RELOP term .) ]
  ! ?               [ shift and go to state 76 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 142

    (38) termbinop -> term EQOP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

  ! shift/reduce conflict for ? resolved as shift
  ! shift/reduce conflict for POWOP resolved as shift
  ! shift/reduce conflict for MULOP resolved as shift
  ! shift/reduce conflict for ADDOP resolved as shift
  ! shift/reduce conflict for SHIFTOP resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
  ! shift/reduce conflict for EQOP resolved as shift
  ! shift/reduce conflict for BITANDOP resolved as shift
  ! shift/reduce conflict for BITOROP resolved as shift
  ! shift/reduce conflict for DOTDOT resolved as shift
  ! shift/reduce conflict for ANDAND resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for DORDOR resolved as shift
  ! shift/reduce conflict for MATCHOP resolved as shift
  ! shift/reduce conflict for WAND resolved as shift
  ! shift/reduce conflict for WOR resolved as shift
  ! shift/reduce conflict for WXOR resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for DEREF resolved as shift
    SEMI            reduce using rule 38 (termbinop -> term EQOP term .)
    COMMA           reduce using rule 38 (termbinop -> term EQOP term .)
    PARANTHESIS_R   reduce using rule 38 (termbinop -> term EQOP term .)
    NAME            reduce using rule 38 (termbinop -> term EQOP term .)
    SUB             reduce using rule 38 (termbinop -> term EQOP term .)
    PRINT           reduce using rule 38 (termbinop -> term EQOP term .)
    USE             reduce using rule 38 (termbinop -> term EQOP term .)
    COMMENT         reduce using rule 38 (termbinop -> term EQOP term .)
    MY              reduce using rule 38 (termbinop -> term EQOP term .)
    FOR             reduce using rule 38 (termbinop -> term EQOP term .)
    WHILE           reduce using rule 38 (termbinop -> term EQOP term .)
    DO              reduce using rule 38 (termbinop -> term EQOP term .)
    UNTIL           reduce using rule 38 (termbinop -> term EQOP term .)
    FOREACH         reduce using rule 38 (termbinop -> term EQOP term .)
    IF              reduce using rule 38 (termbinop -> term EQOP term .)
    ELSE            reduce using rule 38 (termbinop -> term EQOP term .)
    ELSIF           reduce using rule 38 (termbinop -> term EQOP term .)
    UNLESS          reduce using rule 38 (termbinop -> term EQOP term .)
    PARANTHESIS_L   reduce using rule 38 (termbinop -> term EQOP term .)
    NUMBER          reduce using rule 38 (termbinop -> term EQOP term .)
    STRING          reduce using rule 38 (termbinop -> term EQOP term .)
    Q               reduce using rule 38 (termbinop -> term EQOP term .)
    QQ              reduce using rule 38 (termbinop -> term EQOP term .)
    QX              reduce using rule 38 (termbinop -> term EQOP term .)
    !               reduce using rule 38 (termbinop -> term EQOP term .)
    ~               reduce using rule 38 (termbinop -> term EQOP term .)
    WNOT            reduce using rule 38 (termbinop -> term EQOP term .)
    $end            reduce using rule 38 (termbinop -> term EQOP term .)
    BRACES_RIGHT    reduce using rule 38 (termbinop -> term EQOP term .)
    ASSIGNOP        reduce using rule 38 (termbinop -> term EQOP term .)
    ]               reduce using rule 38 (termbinop -> term EQOP term .)
    :               reduce using rule 38 (termbinop -> term EQOP term .)
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! ?               [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! POWOP           [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! MULOP           [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! ADDOP           [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! SHIFTOP         [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! RELOP           [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! EQOP            [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! BITANDOP        [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! BITOROP         [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! DOTDOT          [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! ANDAND          [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! OROR            [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! DORDOR          [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! MATCHOP         [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! WAND            [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! WOR             [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! WXOR            [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! INCREMENT       [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! DECREMENT       [ reduce using rule 38 (termbinop -> term EQOP term .) ]
  ! DEREF           [ reduce using rule 38 (termbinop -> term EQOP term .) ]


state 143

    (39) termbinop -> term BITANDOP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 39 (termbinop -> term BITANDOP term .)
    EQOP            reduce using rule 39 (termbinop -> term BITANDOP term .)
    BITANDOP        reduce using rule 39 (termbinop -> term BITANDOP term .)
    BITOROP         reduce using rule 39 (termbinop -> term BITANDOP term .)
    DOTDOT          reduce using rule 39 (termbinop -> term BITANDOP term .)
    ANDAND          reduce using rule 39 (termbinop -> term BITANDOP term .)
    OROR            reduce using rule 39 (termbinop -> term BITANDOP term .)
    DORDOR          reduce using rule 39 (termbinop -> term BITANDOP term .)
    WAND            reduce using rule 39 (termbinop -> term BITANDOP term .)
    WOR             reduce using rule 39 (termbinop -> term BITANDOP term .)
    WXOR            reduce using rule 39 (termbinop -> term BITANDOP term .)
    SEMI            reduce using rule 39 (termbinop -> term BITANDOP term .)
    COMMA           reduce using rule 39 (termbinop -> term BITANDOP term .)
    PARANTHESIS_R   reduce using rule 39 (termbinop -> term BITANDOP term .)
    NAME            reduce using rule 39 (termbinop -> term BITANDOP term .)
    SUB             reduce using rule 39 (termbinop -> term BITANDOP term .)
    PRINT           reduce using rule 39 (termbinop -> term BITANDOP term .)
    USE             reduce using rule 39 (termbinop -> term BITANDOP term .)
    COMMENT         reduce using rule 39 (termbinop -> term BITANDOP term .)
    MY              reduce using rule 39 (termbinop -> term BITANDOP term .)
    FOR             reduce using rule 39 (termbinop -> term BITANDOP term .)
    WHILE           reduce using rule 39 (termbinop -> term BITANDOP term .)
    DO              reduce using rule 39 (termbinop -> term BITANDOP term .)
    UNTIL           reduce using rule 39 (termbinop -> term BITANDOP term .)
    FOREACH         reduce using rule 39 (termbinop -> term BITANDOP term .)
    IF              reduce using rule 39 (termbinop -> term BITANDOP term .)
    ELSE            reduce using rule 39 (termbinop -> term BITANDOP term .)
    ELSIF           reduce using rule 39 (termbinop -> term BITANDOP term .)
    UNLESS          reduce using rule 39 (termbinop -> term BITANDOP term .)
    PARANTHESIS_L   reduce using rule 39 (termbinop -> term BITANDOP term .)
    NUMBER          reduce using rule 39 (termbinop -> term BITANDOP term .)
    STRING          reduce using rule 39 (termbinop -> term BITANDOP term .)
    Q               reduce using rule 39 (termbinop -> term BITANDOP term .)
    QQ              reduce using rule 39 (termbinop -> term BITANDOP term .)
    QX              reduce using rule 39 (termbinop -> term BITANDOP term .)
    !               reduce using rule 39 (termbinop -> term BITANDOP term .)
    ~               reduce using rule 39 (termbinop -> term BITANDOP term .)
    WNOT            reduce using rule 39 (termbinop -> term BITANDOP term .)
    $end            reduce using rule 39 (termbinop -> term BITANDOP term .)
    BRACES_RIGHT    reduce using rule 39 (termbinop -> term BITANDOP term .)
    ASSIGNOP        reduce using rule 39 (termbinop -> term BITANDOP term .)
    ]               reduce using rule 39 (termbinop -> term BITANDOP term .)
    :               reduce using rule 39 (termbinop -> term BITANDOP term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 39 (termbinop -> term BITANDOP term .) ]
  ! MULOP           [ reduce using rule 39 (termbinop -> term BITANDOP term .) ]
  ! ADDOP           [ reduce using rule 39 (termbinop -> term BITANDOP term .) ]
  ! SHIFTOP         [ reduce using rule 39 (termbinop -> term BITANDOP term .) ]
  ! RELOP           [ reduce using rule 39 (termbinop -> term BITANDOP term .) ]
  ! MATCHOP         [ reduce using rule 39 (termbinop -> term BITANDOP term .) ]
  ! INCREMENT       [ reduce using rule 39 (termbinop -> term BITANDOP term .) ]
  ! DECREMENT       [ reduce using rule 39 (termbinop -> term BITANDOP term .) ]
  ! DEREF           [ reduce using rule 39 (termbinop -> term BITANDOP term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 144

    (40) termbinop -> term BITOROP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 40 (termbinop -> term BITOROP term .)
    EQOP            reduce using rule 40 (termbinop -> term BITOROP term .)
    BITOROP         reduce using rule 40 (termbinop -> term BITOROP term .)
    DOTDOT          reduce using rule 40 (termbinop -> term BITOROP term .)
    ANDAND          reduce using rule 40 (termbinop -> term BITOROP term .)
    OROR            reduce using rule 40 (termbinop -> term BITOROP term .)
    DORDOR          reduce using rule 40 (termbinop -> term BITOROP term .)
    WAND            reduce using rule 40 (termbinop -> term BITOROP term .)
    WOR             reduce using rule 40 (termbinop -> term BITOROP term .)
    WXOR            reduce using rule 40 (termbinop -> term BITOROP term .)
    SEMI            reduce using rule 40 (termbinop -> term BITOROP term .)
    COMMA           reduce using rule 40 (termbinop -> term BITOROP term .)
    PARANTHESIS_R   reduce using rule 40 (termbinop -> term BITOROP term .)
    NAME            reduce using rule 40 (termbinop -> term BITOROP term .)
    SUB             reduce using rule 40 (termbinop -> term BITOROP term .)
    PRINT           reduce using rule 40 (termbinop -> term BITOROP term .)
    USE             reduce using rule 40 (termbinop -> term BITOROP term .)
    COMMENT         reduce using rule 40 (termbinop -> term BITOROP term .)
    MY              reduce using rule 40 (termbinop -> term BITOROP term .)
    FOR             reduce using rule 40 (termbinop -> term BITOROP term .)
    WHILE           reduce using rule 40 (termbinop -> term BITOROP term .)
    DO              reduce using rule 40 (termbinop -> term BITOROP term .)
    UNTIL           reduce using rule 40 (termbinop -> term BITOROP term .)
    FOREACH         reduce using rule 40 (termbinop -> term BITOROP term .)
    IF              reduce using rule 40 (termbinop -> term BITOROP term .)
    ELSE            reduce using rule 40 (termbinop -> term BITOROP term .)
    ELSIF           reduce using rule 40 (termbinop -> term BITOROP term .)
    UNLESS          reduce using rule 40 (termbinop -> term BITOROP term .)
    PARANTHESIS_L   reduce using rule 40 (termbinop -> term BITOROP term .)
    NUMBER          reduce using rule 40 (termbinop -> term BITOROP term .)
    STRING          reduce using rule 40 (termbinop -> term BITOROP term .)
    Q               reduce using rule 40 (termbinop -> term BITOROP term .)
    QQ              reduce using rule 40 (termbinop -> term BITOROP term .)
    QX              reduce using rule 40 (termbinop -> term BITOROP term .)
    !               reduce using rule 40 (termbinop -> term BITOROP term .)
    ~               reduce using rule 40 (termbinop -> term BITOROP term .)
    WNOT            reduce using rule 40 (termbinop -> term BITOROP term .)
    $end            reduce using rule 40 (termbinop -> term BITOROP term .)
    BRACES_RIGHT    reduce using rule 40 (termbinop -> term BITOROP term .)
    ASSIGNOP        reduce using rule 40 (termbinop -> term BITOROP term .)
    ]               reduce using rule 40 (termbinop -> term BITOROP term .)
    :               reduce using rule 40 (termbinop -> term BITOROP term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    BITANDOP        shift and go to state 83
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! MULOP           [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! ADDOP           [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! SHIFTOP         [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! RELOP           [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! BITANDOP        [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! MATCHOP         [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! INCREMENT       [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! DECREMENT       [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! DEREF           [ reduce using rule 40 (termbinop -> term BITOROP term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 145

    (41) termbinop -> term DOTDOT term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 41 (termbinop -> term DOTDOT term .)
    EQOP            reduce using rule 41 (termbinop -> term DOTDOT term .)
    DOTDOT          reduce using rule 41 (termbinop -> term DOTDOT term .)
    WAND            reduce using rule 41 (termbinop -> term DOTDOT term .)
    WOR             reduce using rule 41 (termbinop -> term DOTDOT term .)
    WXOR            reduce using rule 41 (termbinop -> term DOTDOT term .)
    SEMI            reduce using rule 41 (termbinop -> term DOTDOT term .)
    COMMA           reduce using rule 41 (termbinop -> term DOTDOT term .)
    PARANTHESIS_R   reduce using rule 41 (termbinop -> term DOTDOT term .)
    NAME            reduce using rule 41 (termbinop -> term DOTDOT term .)
    SUB             reduce using rule 41 (termbinop -> term DOTDOT term .)
    PRINT           reduce using rule 41 (termbinop -> term DOTDOT term .)
    USE             reduce using rule 41 (termbinop -> term DOTDOT term .)
    COMMENT         reduce using rule 41 (termbinop -> term DOTDOT term .)
    MY              reduce using rule 41 (termbinop -> term DOTDOT term .)
    FOR             reduce using rule 41 (termbinop -> term DOTDOT term .)
    WHILE           reduce using rule 41 (termbinop -> term DOTDOT term .)
    DO              reduce using rule 41 (termbinop -> term DOTDOT term .)
    UNTIL           reduce using rule 41 (termbinop -> term DOTDOT term .)
    FOREACH         reduce using rule 41 (termbinop -> term DOTDOT term .)
    IF              reduce using rule 41 (termbinop -> term DOTDOT term .)
    ELSE            reduce using rule 41 (termbinop -> term DOTDOT term .)
    ELSIF           reduce using rule 41 (termbinop -> term DOTDOT term .)
    UNLESS          reduce using rule 41 (termbinop -> term DOTDOT term .)
    PARANTHESIS_L   reduce using rule 41 (termbinop -> term DOTDOT term .)
    NUMBER          reduce using rule 41 (termbinop -> term DOTDOT term .)
    STRING          reduce using rule 41 (termbinop -> term DOTDOT term .)
    Q               reduce using rule 41 (termbinop -> term DOTDOT term .)
    QQ              reduce using rule 41 (termbinop -> term DOTDOT term .)
    QX              reduce using rule 41 (termbinop -> term DOTDOT term .)
    !               reduce using rule 41 (termbinop -> term DOTDOT term .)
    ~               reduce using rule 41 (termbinop -> term DOTDOT term .)
    WNOT            reduce using rule 41 (termbinop -> term DOTDOT term .)
    $end            reduce using rule 41 (termbinop -> term DOTDOT term .)
    BRACES_RIGHT    reduce using rule 41 (termbinop -> term DOTDOT term .)
    ASSIGNOP        reduce using rule 41 (termbinop -> term DOTDOT term .)
    ]               reduce using rule 41 (termbinop -> term DOTDOT term .)
    :               reduce using rule 41 (termbinop -> term DOTDOT term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! MULOP           [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! ADDOP           [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! SHIFTOP         [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! RELOP           [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! BITANDOP        [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! BITOROP         [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! ANDAND          [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! OROR            [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! DORDOR          [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! MATCHOP         [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! INCREMENT       [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! DECREMENT       [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! DEREF           [ reduce using rule 41 (termbinop -> term DOTDOT term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 146

    (42) termbinop -> term ANDAND term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 42 (termbinop -> term ANDAND term .)
    EQOP            reduce using rule 42 (termbinop -> term ANDAND term .)
    DOTDOT          reduce using rule 42 (termbinop -> term ANDAND term .)
    ANDAND          reduce using rule 42 (termbinop -> term ANDAND term .)
    OROR            reduce using rule 42 (termbinop -> term ANDAND term .)
    DORDOR          reduce using rule 42 (termbinop -> term ANDAND term .)
    WAND            reduce using rule 42 (termbinop -> term ANDAND term .)
    WOR             reduce using rule 42 (termbinop -> term ANDAND term .)
    WXOR            reduce using rule 42 (termbinop -> term ANDAND term .)
    SEMI            reduce using rule 42 (termbinop -> term ANDAND term .)
    COMMA           reduce using rule 42 (termbinop -> term ANDAND term .)
    PARANTHESIS_R   reduce using rule 42 (termbinop -> term ANDAND term .)
    NAME            reduce using rule 42 (termbinop -> term ANDAND term .)
    SUB             reduce using rule 42 (termbinop -> term ANDAND term .)
    PRINT           reduce using rule 42 (termbinop -> term ANDAND term .)
    USE             reduce using rule 42 (termbinop -> term ANDAND term .)
    COMMENT         reduce using rule 42 (termbinop -> term ANDAND term .)
    MY              reduce using rule 42 (termbinop -> term ANDAND term .)
    FOR             reduce using rule 42 (termbinop -> term ANDAND term .)
    WHILE           reduce using rule 42 (termbinop -> term ANDAND term .)
    DO              reduce using rule 42 (termbinop -> term ANDAND term .)
    UNTIL           reduce using rule 42 (termbinop -> term ANDAND term .)
    FOREACH         reduce using rule 42 (termbinop -> term ANDAND term .)
    IF              reduce using rule 42 (termbinop -> term ANDAND term .)
    ELSE            reduce using rule 42 (termbinop -> term ANDAND term .)
    ELSIF           reduce using rule 42 (termbinop -> term ANDAND term .)
    UNLESS          reduce using rule 42 (termbinop -> term ANDAND term .)
    PARANTHESIS_L   reduce using rule 42 (termbinop -> term ANDAND term .)
    NUMBER          reduce using rule 42 (termbinop -> term ANDAND term .)
    STRING          reduce using rule 42 (termbinop -> term ANDAND term .)
    Q               reduce using rule 42 (termbinop -> term ANDAND term .)
    QQ              reduce using rule 42 (termbinop -> term ANDAND term .)
    QX              reduce using rule 42 (termbinop -> term ANDAND term .)
    !               reduce using rule 42 (termbinop -> term ANDAND term .)
    ~               reduce using rule 42 (termbinop -> term ANDAND term .)
    WNOT            reduce using rule 42 (termbinop -> term ANDAND term .)
    $end            reduce using rule 42 (termbinop -> term ANDAND term .)
    BRACES_RIGHT    reduce using rule 42 (termbinop -> term ANDAND term .)
    ASSIGNOP        reduce using rule 42 (termbinop -> term ANDAND term .)
    ]               reduce using rule 42 (termbinop -> term ANDAND term .)
    :               reduce using rule 42 (termbinop -> term ANDAND term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! MULOP           [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! ADDOP           [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! SHIFTOP         [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! RELOP           [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! BITANDOP        [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! BITOROP         [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! MATCHOP         [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! INCREMENT       [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! DECREMENT       [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! DEREF           [ reduce using rule 42 (termbinop -> term ANDAND term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 147

    (43) termbinop -> term OROR term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 43 (termbinop -> term OROR term .)
    EQOP            reduce using rule 43 (termbinop -> term OROR term .)
    DOTDOT          reduce using rule 43 (termbinop -> term OROR term .)
    OROR            reduce using rule 43 (termbinop -> term OROR term .)
    DORDOR          reduce using rule 43 (termbinop -> term OROR term .)
    WAND            reduce using rule 43 (termbinop -> term OROR term .)
    WOR             reduce using rule 43 (termbinop -> term OROR term .)
    WXOR            reduce using rule 43 (termbinop -> term OROR term .)
    SEMI            reduce using rule 43 (termbinop -> term OROR term .)
    COMMA           reduce using rule 43 (termbinop -> term OROR term .)
    PARANTHESIS_R   reduce using rule 43 (termbinop -> term OROR term .)
    NAME            reduce using rule 43 (termbinop -> term OROR term .)
    SUB             reduce using rule 43 (termbinop -> term OROR term .)
    PRINT           reduce using rule 43 (termbinop -> term OROR term .)
    USE             reduce using rule 43 (termbinop -> term OROR term .)
    COMMENT         reduce using rule 43 (termbinop -> term OROR term .)
    MY              reduce using rule 43 (termbinop -> term OROR term .)
    FOR             reduce using rule 43 (termbinop -> term OROR term .)
    WHILE           reduce using rule 43 (termbinop -> term OROR term .)
    DO              reduce using rule 43 (termbinop -> term OROR term .)
    UNTIL           reduce using rule 43 (termbinop -> term OROR term .)
    FOREACH         reduce using rule 43 (termbinop -> term OROR term .)
    IF              reduce using rule 43 (termbinop -> term OROR term .)
    ELSE            reduce using rule 43 (termbinop -> term OROR term .)
    ELSIF           reduce using rule 43 (termbinop -> term OROR term .)
    UNLESS          reduce using rule 43 (termbinop -> term OROR term .)
    PARANTHESIS_L   reduce using rule 43 (termbinop -> term OROR term .)
    NUMBER          reduce using rule 43 (termbinop -> term OROR term .)
    STRING          reduce using rule 43 (termbinop -> term OROR term .)
    Q               reduce using rule 43 (termbinop -> term OROR term .)
    QQ              reduce using rule 43 (termbinop -> term OROR term .)
    QX              reduce using rule 43 (termbinop -> term OROR term .)
    !               reduce using rule 43 (termbinop -> term OROR term .)
    ~               reduce using rule 43 (termbinop -> term OROR term .)
    WNOT            reduce using rule 43 (termbinop -> term OROR term .)
    $end            reduce using rule 43 (termbinop -> term OROR term .)
    BRACES_RIGHT    reduce using rule 43 (termbinop -> term OROR term .)
    ASSIGNOP        reduce using rule 43 (termbinop -> term OROR term .)
    ]               reduce using rule 43 (termbinop -> term OROR term .)
    :               reduce using rule 43 (termbinop -> term OROR term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    ANDAND          shift and go to state 86
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! MULOP           [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! ADDOP           [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! SHIFTOP         [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! RELOP           [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! BITANDOP        [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! BITOROP         [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! ANDAND          [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! MATCHOP         [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! INCREMENT       [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! DECREMENT       [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! DEREF           [ reduce using rule 43 (termbinop -> term OROR term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 148

    (44) termbinop -> term DORDOR term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 44 (termbinop -> term DORDOR term .)
    EQOP            reduce using rule 44 (termbinop -> term DORDOR term .)
    DOTDOT          reduce using rule 44 (termbinop -> term DORDOR term .)
    OROR            reduce using rule 44 (termbinop -> term DORDOR term .)
    DORDOR          reduce using rule 44 (termbinop -> term DORDOR term .)
    WAND            reduce using rule 44 (termbinop -> term DORDOR term .)
    WOR             reduce using rule 44 (termbinop -> term DORDOR term .)
    WXOR            reduce using rule 44 (termbinop -> term DORDOR term .)
    SEMI            reduce using rule 44 (termbinop -> term DORDOR term .)
    COMMA           reduce using rule 44 (termbinop -> term DORDOR term .)
    PARANTHESIS_R   reduce using rule 44 (termbinop -> term DORDOR term .)
    NAME            reduce using rule 44 (termbinop -> term DORDOR term .)
    SUB             reduce using rule 44 (termbinop -> term DORDOR term .)
    PRINT           reduce using rule 44 (termbinop -> term DORDOR term .)
    USE             reduce using rule 44 (termbinop -> term DORDOR term .)
    COMMENT         reduce using rule 44 (termbinop -> term DORDOR term .)
    MY              reduce using rule 44 (termbinop -> term DORDOR term .)
    FOR             reduce using rule 44 (termbinop -> term DORDOR term .)
    WHILE           reduce using rule 44 (termbinop -> term DORDOR term .)
    DO              reduce using rule 44 (termbinop -> term DORDOR term .)
    UNTIL           reduce using rule 44 (termbinop -> term DORDOR term .)
    FOREACH         reduce using rule 44 (termbinop -> term DORDOR term .)
    IF              reduce using rule 44 (termbinop -> term DORDOR term .)
    ELSE            reduce using rule 44 (termbinop -> term DORDOR term .)
    ELSIF           reduce using rule 44 (termbinop -> term DORDOR term .)
    UNLESS          reduce using rule 44 (termbinop -> term DORDOR term .)
    PARANTHESIS_L   reduce using rule 44 (termbinop -> term DORDOR term .)
    NUMBER          reduce using rule 44 (termbinop -> term DORDOR term .)
    STRING          reduce using rule 44 (termbinop -> term DORDOR term .)
    Q               reduce using rule 44 (termbinop -> term DORDOR term .)
    QQ              reduce using rule 44 (termbinop -> term DORDOR term .)
    QX              reduce using rule 44 (termbinop -> term DORDOR term .)
    !               reduce using rule 44 (termbinop -> term DORDOR term .)
    ~               reduce using rule 44 (termbinop -> term DORDOR term .)
    WNOT            reduce using rule 44 (termbinop -> term DORDOR term .)
    $end            reduce using rule 44 (termbinop -> term DORDOR term .)
    BRACES_RIGHT    reduce using rule 44 (termbinop -> term DORDOR term .)
    ASSIGNOP        reduce using rule 44 (termbinop -> term DORDOR term .)
    ]               reduce using rule 44 (termbinop -> term DORDOR term .)
    :               reduce using rule 44 (termbinop -> term DORDOR term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    ANDAND          shift and go to state 86
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! MULOP           [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! ADDOP           [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! SHIFTOP         [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! RELOP           [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! BITANDOP        [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! BITOROP         [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! ANDAND          [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! MATCHOP         [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! INCREMENT       [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! DECREMENT       [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! DEREF           [ reduce using rule 44 (termbinop -> term DORDOR term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 149

    (45) termbinop -> term MATCHOP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 45 (termbinop -> term MATCHOP term .)
    MULOP           reduce using rule 45 (termbinop -> term MATCHOP term .)
    ADDOP           reduce using rule 45 (termbinop -> term MATCHOP term .)
    SHIFTOP         reduce using rule 45 (termbinop -> term MATCHOP term .)
    RELOP           reduce using rule 45 (termbinop -> term MATCHOP term .)
    EQOP            reduce using rule 45 (termbinop -> term MATCHOP term .)
    BITANDOP        reduce using rule 45 (termbinop -> term MATCHOP term .)
    BITOROP         reduce using rule 45 (termbinop -> term MATCHOP term .)
    DOTDOT          reduce using rule 45 (termbinop -> term MATCHOP term .)
    ANDAND          reduce using rule 45 (termbinop -> term MATCHOP term .)
    OROR            reduce using rule 45 (termbinop -> term MATCHOP term .)
    DORDOR          reduce using rule 45 (termbinop -> term MATCHOP term .)
    MATCHOP         reduce using rule 45 (termbinop -> term MATCHOP term .)
    WAND            reduce using rule 45 (termbinop -> term MATCHOP term .)
    WOR             reduce using rule 45 (termbinop -> term MATCHOP term .)
    WXOR            reduce using rule 45 (termbinop -> term MATCHOP term .)
    SEMI            reduce using rule 45 (termbinop -> term MATCHOP term .)
    COMMA           reduce using rule 45 (termbinop -> term MATCHOP term .)
    PARANTHESIS_R   reduce using rule 45 (termbinop -> term MATCHOP term .)
    NAME            reduce using rule 45 (termbinop -> term MATCHOP term .)
    SUB             reduce using rule 45 (termbinop -> term MATCHOP term .)
    PRINT           reduce using rule 45 (termbinop -> term MATCHOP term .)
    USE             reduce using rule 45 (termbinop -> term MATCHOP term .)
    COMMENT         reduce using rule 45 (termbinop -> term MATCHOP term .)
    MY              reduce using rule 45 (termbinop -> term MATCHOP term .)
    FOR             reduce using rule 45 (termbinop -> term MATCHOP term .)
    WHILE           reduce using rule 45 (termbinop -> term MATCHOP term .)
    DO              reduce using rule 45 (termbinop -> term MATCHOP term .)
    UNTIL           reduce using rule 45 (termbinop -> term MATCHOP term .)
    FOREACH         reduce using rule 45 (termbinop -> term MATCHOP term .)
    IF              reduce using rule 45 (termbinop -> term MATCHOP term .)
    ELSE            reduce using rule 45 (termbinop -> term MATCHOP term .)
    ELSIF           reduce using rule 45 (termbinop -> term MATCHOP term .)
    UNLESS          reduce using rule 45 (termbinop -> term MATCHOP term .)
    PARANTHESIS_L   reduce using rule 45 (termbinop -> term MATCHOP term .)
    NUMBER          reduce using rule 45 (termbinop -> term MATCHOP term .)
    STRING          reduce using rule 45 (termbinop -> term MATCHOP term .)
    Q               reduce using rule 45 (termbinop -> term MATCHOP term .)
    QQ              reduce using rule 45 (termbinop -> term MATCHOP term .)
    QX              reduce using rule 45 (termbinop -> term MATCHOP term .)
    !               reduce using rule 45 (termbinop -> term MATCHOP term .)
    ~               reduce using rule 45 (termbinop -> term MATCHOP term .)
    WNOT            reduce using rule 45 (termbinop -> term MATCHOP term .)
    $end            reduce using rule 45 (termbinop -> term MATCHOP term .)
    BRACES_RIGHT    reduce using rule 45 (termbinop -> term MATCHOP term .)
    ASSIGNOP        reduce using rule 45 (termbinop -> term MATCHOP term .)
    ]               reduce using rule 45 (termbinop -> term MATCHOP term .)
    :               reduce using rule 45 (termbinop -> term MATCHOP term .)
    POWOP           shift and go to state 77
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 45 (termbinop -> term MATCHOP term .) ]
  ! INCREMENT       [ reduce using rule 45 (termbinop -> term MATCHOP term .) ]
  ! DECREMENT       [ reduce using rule 45 (termbinop -> term MATCHOP term .) ]
  ! DEREF           [ reduce using rule 45 (termbinop -> term MATCHOP term .) ]
  ! ?               [ shift and go to state 76 ]
  ! MULOP           [ shift and go to state 78 ]
  ! ADDOP           [ shift and go to state 79 ]
  ! SHIFTOP         [ shift and go to state 80 ]
  ! RELOP           [ shift and go to state 81 ]
  ! EQOP            [ shift and go to state 82 ]
  ! BITANDOP        [ shift and go to state 83 ]
  ! BITOROP         [ shift and go to state 84 ]
  ! DOTDOT          [ shift and go to state 85 ]
  ! ANDAND          [ shift and go to state 86 ]
  ! OROR            [ shift and go to state 87 ]
  ! DORDOR          [ shift and go to state 88 ]
  ! MATCHOP         [ shift and go to state 89 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 150

    (46) termbinop -> term WAND term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 46 (termbinop -> term WAND term .)
    EQOP            reduce using rule 46 (termbinop -> term WAND term .)
    WAND            reduce using rule 46 (termbinop -> term WAND term .)
    WOR             reduce using rule 46 (termbinop -> term WAND term .)
    WXOR            reduce using rule 46 (termbinop -> term WAND term .)
    SEMI            reduce using rule 46 (termbinop -> term WAND term .)
    COMMA           reduce using rule 46 (termbinop -> term WAND term .)
    PARANTHESIS_R   reduce using rule 46 (termbinop -> term WAND term .)
    NAME            reduce using rule 46 (termbinop -> term WAND term .)
    SUB             reduce using rule 46 (termbinop -> term WAND term .)
    PRINT           reduce using rule 46 (termbinop -> term WAND term .)
    USE             reduce using rule 46 (termbinop -> term WAND term .)
    COMMENT         reduce using rule 46 (termbinop -> term WAND term .)
    MY              reduce using rule 46 (termbinop -> term WAND term .)
    FOR             reduce using rule 46 (termbinop -> term WAND term .)
    WHILE           reduce using rule 46 (termbinop -> term WAND term .)
    DO              reduce using rule 46 (termbinop -> term WAND term .)
    UNTIL           reduce using rule 46 (termbinop -> term WAND term .)
    FOREACH         reduce using rule 46 (termbinop -> term WAND term .)
    IF              reduce using rule 46 (termbinop -> term WAND term .)
    ELSE            reduce using rule 46 (termbinop -> term WAND term .)
    ELSIF           reduce using rule 46 (termbinop -> term WAND term .)
    UNLESS          reduce using rule 46 (termbinop -> term WAND term .)
    PARANTHESIS_L   reduce using rule 46 (termbinop -> term WAND term .)
    NUMBER          reduce using rule 46 (termbinop -> term WAND term .)
    STRING          reduce using rule 46 (termbinop -> term WAND term .)
    Q               reduce using rule 46 (termbinop -> term WAND term .)
    QQ              reduce using rule 46 (termbinop -> term WAND term .)
    QX              reduce using rule 46 (termbinop -> term WAND term .)
    !               reduce using rule 46 (termbinop -> term WAND term .)
    ~               reduce using rule 46 (termbinop -> term WAND term .)
    WNOT            reduce using rule 46 (termbinop -> term WAND term .)
    $end            reduce using rule 46 (termbinop -> term WAND term .)
    BRACES_RIGHT    reduce using rule 46 (termbinop -> term WAND term .)
    ASSIGNOP        reduce using rule 46 (termbinop -> term WAND term .)
    ]               reduce using rule 46 (termbinop -> term WAND term .)
    :               reduce using rule 46 (termbinop -> term WAND term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! MULOP           [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! ADDOP           [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! SHIFTOP         [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! RELOP           [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! BITANDOP        [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! BITOROP         [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! DOTDOT          [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! ANDAND          [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! OROR            [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! DORDOR          [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! MATCHOP         [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! INCREMENT       [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! DECREMENT       [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! DEREF           [ reduce using rule 46 (termbinop -> term WAND term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! WAND            [ shift and go to state 90 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 151

    (47) termbinop -> term WOR term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 47 (termbinop -> term WOR term .)
    EQOP            reduce using rule 47 (termbinop -> term WOR term .)
    WOR             reduce using rule 47 (termbinop -> term WOR term .)
    WXOR            reduce using rule 47 (termbinop -> term WOR term .)
    SEMI            reduce using rule 47 (termbinop -> term WOR term .)
    COMMA           reduce using rule 47 (termbinop -> term WOR term .)
    PARANTHESIS_R   reduce using rule 47 (termbinop -> term WOR term .)
    NAME            reduce using rule 47 (termbinop -> term WOR term .)
    SUB             reduce using rule 47 (termbinop -> term WOR term .)
    PRINT           reduce using rule 47 (termbinop -> term WOR term .)
    USE             reduce using rule 47 (termbinop -> term WOR term .)
    COMMENT         reduce using rule 47 (termbinop -> term WOR term .)
    MY              reduce using rule 47 (termbinop -> term WOR term .)
    FOR             reduce using rule 47 (termbinop -> term WOR term .)
    WHILE           reduce using rule 47 (termbinop -> term WOR term .)
    DO              reduce using rule 47 (termbinop -> term WOR term .)
    UNTIL           reduce using rule 47 (termbinop -> term WOR term .)
    FOREACH         reduce using rule 47 (termbinop -> term WOR term .)
    IF              reduce using rule 47 (termbinop -> term WOR term .)
    ELSE            reduce using rule 47 (termbinop -> term WOR term .)
    ELSIF           reduce using rule 47 (termbinop -> term WOR term .)
    UNLESS          reduce using rule 47 (termbinop -> term WOR term .)
    PARANTHESIS_L   reduce using rule 47 (termbinop -> term WOR term .)
    NUMBER          reduce using rule 47 (termbinop -> term WOR term .)
    STRING          reduce using rule 47 (termbinop -> term WOR term .)
    Q               reduce using rule 47 (termbinop -> term WOR term .)
    QQ              reduce using rule 47 (termbinop -> term WOR term .)
    QX              reduce using rule 47 (termbinop -> term WOR term .)
    !               reduce using rule 47 (termbinop -> term WOR term .)
    ~               reduce using rule 47 (termbinop -> term WOR term .)
    WNOT            reduce using rule 47 (termbinop -> term WOR term .)
    $end            reduce using rule 47 (termbinop -> term WOR term .)
    BRACES_RIGHT    reduce using rule 47 (termbinop -> term WOR term .)
    ASSIGNOP        reduce using rule 47 (termbinop -> term WOR term .)
    ]               reduce using rule 47 (termbinop -> term WOR term .)
    :               reduce using rule 47 (termbinop -> term WOR term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! MULOP           [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! ADDOP           [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! SHIFTOP         [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! RELOP           [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! BITANDOP        [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! BITOROP         [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! DOTDOT          [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! ANDAND          [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! OROR            [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! DORDOR          [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! MATCHOP         [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! WAND            [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! INCREMENT       [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! DECREMENT       [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! DEREF           [ reduce using rule 47 (termbinop -> term WOR term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 152

    (48) termbinop -> term WXOR term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    ?               reduce using rule 48 (termbinop -> term WXOR term .)
    EQOP            reduce using rule 48 (termbinop -> term WXOR term .)
    WOR             reduce using rule 48 (termbinop -> term WXOR term .)
    WXOR            reduce using rule 48 (termbinop -> term WXOR term .)
    SEMI            reduce using rule 48 (termbinop -> term WXOR term .)
    COMMA           reduce using rule 48 (termbinop -> term WXOR term .)
    PARANTHESIS_R   reduce using rule 48 (termbinop -> term WXOR term .)
    NAME            reduce using rule 48 (termbinop -> term WXOR term .)
    SUB             reduce using rule 48 (termbinop -> term WXOR term .)
    PRINT           reduce using rule 48 (termbinop -> term WXOR term .)
    USE             reduce using rule 48 (termbinop -> term WXOR term .)
    COMMENT         reduce using rule 48 (termbinop -> term WXOR term .)
    MY              reduce using rule 48 (termbinop -> term WXOR term .)
    FOR             reduce using rule 48 (termbinop -> term WXOR term .)
    WHILE           reduce using rule 48 (termbinop -> term WXOR term .)
    DO              reduce using rule 48 (termbinop -> term WXOR term .)
    UNTIL           reduce using rule 48 (termbinop -> term WXOR term .)
    FOREACH         reduce using rule 48 (termbinop -> term WXOR term .)
    IF              reduce using rule 48 (termbinop -> term WXOR term .)
    ELSE            reduce using rule 48 (termbinop -> term WXOR term .)
    ELSIF           reduce using rule 48 (termbinop -> term WXOR term .)
    UNLESS          reduce using rule 48 (termbinop -> term WXOR term .)
    PARANTHESIS_L   reduce using rule 48 (termbinop -> term WXOR term .)
    NUMBER          reduce using rule 48 (termbinop -> term WXOR term .)
    STRING          reduce using rule 48 (termbinop -> term WXOR term .)
    Q               reduce using rule 48 (termbinop -> term WXOR term .)
    QQ              reduce using rule 48 (termbinop -> term WXOR term .)
    QX              reduce using rule 48 (termbinop -> term WXOR term .)
    !               reduce using rule 48 (termbinop -> term WXOR term .)
    ~               reduce using rule 48 (termbinop -> term WXOR term .)
    WNOT            reduce using rule 48 (termbinop -> term WXOR term .)
    $end            reduce using rule 48 (termbinop -> term WXOR term .)
    BRACES_RIGHT    reduce using rule 48 (termbinop -> term WXOR term .)
    ASSIGNOP        reduce using rule 48 (termbinop -> term WXOR term .)
    ]               reduce using rule 48 (termbinop -> term WXOR term .)
    :               reduce using rule 48 (termbinop -> term WXOR term .)
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! POWOP           [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! MULOP           [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! ADDOP           [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! SHIFTOP         [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! RELOP           [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! BITANDOP        [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! BITOROP         [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! DOTDOT          [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! ANDAND          [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! OROR            [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! DORDOR          [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! MATCHOP         [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! WAND            [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! INCREMENT       [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! DECREMENT       [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! DEREF           [ reduce using rule 48 (termbinop -> term WXOR term .) ]
  ! ?               [ shift and go to state 76 ]
  ! EQOP            [ shift and go to state 82 ]
  ! WOR             [ shift and go to state 91 ]
  ! WXOR            [ shift and go to state 92 ]


state 153

    (93) var_dec -> sub_script ASSIGNOP term . SEMI
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    SEMI            shift and go to state 187
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95


state 154

    (81) function_dec -> SUB NAME BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 188
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 155

    (4) constructor -> SUB NEW BRACES_LEFT . constructor_body BRACES_RIGHT
    (8) constructor_body -> . statement constructor_hash bless_st return_constructor
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (107) empty -> .
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    constructor_body               shift and go to state 189
    statement                      shift and go to state 190
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    empty                          shift and go to state 67
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 156

    (111) term -> PARANTHESIS_L term PARANTHESIS_R .

    ?               reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    POWOP           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    MULOP           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    ADDOP           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    SHIFTOP         reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    RELOP           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    EQOP            reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    BITANDOP        reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    BITOROP         reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    DOTDOT          reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    ANDAND          reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    OROR            reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    DORDOR          reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    MATCHOP         reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    WAND            reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    WOR             reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    WXOR            reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    INCREMENT       reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    DECREMENT       reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    DEREF           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    SEMI            reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    COMMA           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    PARANTHESIS_R   reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    NAME            reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    SUB             reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    PRINT           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    USE             reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    COMMENT         reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    MY              reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    FOR             reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    WHILE           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    DO              reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    UNTIL           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    FOREACH         reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    IF              reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    ELSE            reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    ELSIF           reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    UNLESS          reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    PARANTHESIS_L   reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    NUMBER          reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    STRING          reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    Q               reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    QQ              reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    QX              reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    !               reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    ~               reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    WNOT            reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    $end            reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    BRACES_RIGHT    reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    ASSIGNOP        reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    ]               reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)
    :               reduce using rule 111 (term -> PARANTHESIS_L term PARANTHESIS_R .)


state 157

    (72) var_deref -> NAME DEREF . BRACES_LEFT NAME BRACES_RIGHT

    BRACES_LEFT     shift and go to state 132


state 158

    (3) print_st -> PRINT PARANTHESIS_L HANDLE . PARANTHESIS_R

    PARANTHESIS_R   shift and go to state 191


state 159

    (111) term -> PARANTHESIS_L term . PARANTHESIS_R
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF
    (67) arg -> term .

  ! shift/reduce conflict for PARANTHESIS_R resolved as shift
    PARANTHESIS_R   shift and go to state 156
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95
    COMMA           reduce using rule 67 (arg -> term .)

  ! PARANTHESIS_R   [ reduce using rule 67 (arg -> term .) ]


state 160

    (50) HANDLE -> NAME arg_list .
    (66) arg_list -> arg_list . COMMA arg

  ! shift/reduce conflict for COMMA resolved as shift
    SEMI            reduce using rule 50 (HANDLE -> NAME arg_list .)
    NAME            reduce using rule 50 (HANDLE -> NAME arg_list .)
    SUB             reduce using rule 50 (HANDLE -> NAME arg_list .)
    PRINT           reduce using rule 50 (HANDLE -> NAME arg_list .)
    USE             reduce using rule 50 (HANDLE -> NAME arg_list .)
    COMMENT         reduce using rule 50 (HANDLE -> NAME arg_list .)
    MY              reduce using rule 50 (HANDLE -> NAME arg_list .)
    FOR             reduce using rule 50 (HANDLE -> NAME arg_list .)
    WHILE           reduce using rule 50 (HANDLE -> NAME arg_list .)
    DO              reduce using rule 50 (HANDLE -> NAME arg_list .)
    UNTIL           reduce using rule 50 (HANDLE -> NAME arg_list .)
    FOREACH         reduce using rule 50 (HANDLE -> NAME arg_list .)
    IF              reduce using rule 50 (HANDLE -> NAME arg_list .)
    ELSE            reduce using rule 50 (HANDLE -> NAME arg_list .)
    ELSIF           reduce using rule 50 (HANDLE -> NAME arg_list .)
    UNLESS          reduce using rule 50 (HANDLE -> NAME arg_list .)
    PARANTHESIS_L   reduce using rule 50 (HANDLE -> NAME arg_list .)
    NUMBER          reduce using rule 50 (HANDLE -> NAME arg_list .)
    STRING          reduce using rule 50 (HANDLE -> NAME arg_list .)
    Q               reduce using rule 50 (HANDLE -> NAME arg_list .)
    QQ              reduce using rule 50 (HANDLE -> NAME arg_list .)
    QX              reduce using rule 50 (HANDLE -> NAME arg_list .)
    ADDOP           reduce using rule 50 (HANDLE -> NAME arg_list .)
    !               reduce using rule 50 (HANDLE -> NAME arg_list .)
    ~               reduce using rule 50 (HANDLE -> NAME arg_list .)
    INCREMENT       reduce using rule 50 (HANDLE -> NAME arg_list .)
    DECREMENT       reduce using rule 50 (HANDLE -> NAME arg_list .)
    WNOT            reduce using rule 50 (HANDLE -> NAME arg_list .)
    $end            reduce using rule 50 (HANDLE -> NAME arg_list .)
    BRACES_RIGHT    reduce using rule 50 (HANDLE -> NAME arg_list .)
    ASSIGNOP        reduce using rule 50 (HANDLE -> NAME arg_list .)
    PARANTHESIS_R   reduce using rule 50 (HANDLE -> NAME arg_list .)
    COMMA           shift and go to state 74

  ! COMMA           [ reduce using rule 50 (HANDLE -> NAME arg_list .) ]


state 161

    (78) use_st -> USE NAME SEMI .

    NAME            reduce using rule 78 (use_st -> USE NAME SEMI .)
    SUB             reduce using rule 78 (use_st -> USE NAME SEMI .)
    PRINT           reduce using rule 78 (use_st -> USE NAME SEMI .)
    USE             reduce using rule 78 (use_st -> USE NAME SEMI .)
    COMMENT         reduce using rule 78 (use_st -> USE NAME SEMI .)
    MY              reduce using rule 78 (use_st -> USE NAME SEMI .)
    FOR             reduce using rule 78 (use_st -> USE NAME SEMI .)
    WHILE           reduce using rule 78 (use_st -> USE NAME SEMI .)
    DO              reduce using rule 78 (use_st -> USE NAME SEMI .)
    UNTIL           reduce using rule 78 (use_st -> USE NAME SEMI .)
    FOREACH         reduce using rule 78 (use_st -> USE NAME SEMI .)
    IF              reduce using rule 78 (use_st -> USE NAME SEMI .)
    ELSE            reduce using rule 78 (use_st -> USE NAME SEMI .)
    ELSIF           reduce using rule 78 (use_st -> USE NAME SEMI .)
    UNLESS          reduce using rule 78 (use_st -> USE NAME SEMI .)
    PARANTHESIS_L   reduce using rule 78 (use_st -> USE NAME SEMI .)
    NUMBER          reduce using rule 78 (use_st -> USE NAME SEMI .)
    STRING          reduce using rule 78 (use_st -> USE NAME SEMI .)
    Q               reduce using rule 78 (use_st -> USE NAME SEMI .)
    QQ              reduce using rule 78 (use_st -> USE NAME SEMI .)
    QX              reduce using rule 78 (use_st -> USE NAME SEMI .)
    ADDOP           reduce using rule 78 (use_st -> USE NAME SEMI .)
    !               reduce using rule 78 (use_st -> USE NAME SEMI .)
    ~               reduce using rule 78 (use_st -> USE NAME SEMI .)
    INCREMENT       reduce using rule 78 (use_st -> USE NAME SEMI .)
    DECREMENT       reduce using rule 78 (use_st -> USE NAME SEMI .)
    WNOT            reduce using rule 78 (use_st -> USE NAME SEMI .)
    SEMI            reduce using rule 78 (use_st -> USE NAME SEMI .)
    COMMA           reduce using rule 78 (use_st -> USE NAME SEMI .)
    $end            reduce using rule 78 (use_st -> USE NAME SEMI .)
    BRACES_RIGHT    reduce using rule 78 (use_st -> USE NAME SEMI .)
    ASSIGNOP        reduce using rule 78 (use_st -> USE NAME SEMI .)


state 162

    (24) for_st -> FOR PARANTHESIS_L NAME . ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L NAME . ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    ASSIGNOP        shift and go to state 192


state 163

    (52) while_st -> WHILE PARANTHESIS_L NAME . RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    RELOP           shift and go to state 193


state 164

    (53) while_st -> WHILE PARANTHESIS_L NUMBER . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 194


state 165

    (69) do_while_st -> DO BRACES_LEFT body . BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R

    BRACES_RIGHT    shift and go to state 195


state 166

    (71) until_st -> UNTIL PARANTHESIS_L NAME . RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    RELOP           shift and go to state 196


state 167

    (51) foreach_st -> FOREACH NAME PARANTHESIS_L . NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 197


state 168

    (83) if_st -> IF PARANTHESIS_L NAME . RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> IF PARANTHESIS_L NAME . EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    RELOP           shift and go to state 198
    EQOP            shift and go to state 199


state 169

    (86) else_st -> ELSE BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 200


state 170

    (94) elsif_st -> ELSIF PARANTHESIS_L NAME . RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> ELSIF PARANTHESIS_L NAME . EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    RELOP           shift and go to state 201
    EQOP            shift and go to state 202


state 171

    (96) unless_st -> UNLESS PARANTHESIS_L NAME . RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> UNLESS PARANTHESIS_L NAME . EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    RELOP           shift and go to state 203
    EQOP            shift and go to state 204


state 172

    (118) term -> Q BRACES_LEFT NAME . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 205


state 173

    (119) term -> QQ BRACES_LEFT NAME . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 206


state 174

    (120) term -> QX BRACES_LEFT NAME . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 207


state 175

    (1) object_creation -> NAME ASSIGNOP NAME DEREF . NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (72) var_deref -> NAME DEREF . BRACES_LEFT NAME BRACES_RIGHT

    NEW             shift and go to state 208
    BRACES_LEFT     shift and go to state 132


state 176

    (90) var_dec -> NAME ASSIGNOP SHIFT SEMI .

    NAME            reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    SUB             reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    PRINT           reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    USE             reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    COMMENT         reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    MY              reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    FOR             reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    WHILE           reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    DO              reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    UNTIL           reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    FOREACH         reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    IF              reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    ELSE            reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    ELSIF           reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    UNLESS          reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    PARANTHESIS_L   reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    NUMBER          reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    STRING          reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    Q               reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    QQ              reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    QX              reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    ADDOP           reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    !               reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    ~               reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    INCREMENT       reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    DECREMENT       reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    WNOT            reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    SEMI            reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    COMMA           reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    $end            reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    BRACES_RIGHT    reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)
    ASSIGNOP        reduce using rule 90 (var_dec -> NAME ASSIGNOP SHIFT SEMI .)


state 177

    (91) var_dec -> NAME ASSIGNOP term SEMI .

    NAME            reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    SUB             reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    PRINT           reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    USE             reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    COMMENT         reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    MY              reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    FOR             reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    WHILE           reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    DO              reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    UNTIL           reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    FOREACH         reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    IF              reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    ELSE            reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    ELSIF           reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    UNLESS          reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    PARANTHESIS_L   reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    NUMBER          reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    STRING          reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    Q               reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    QQ              reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    QX              reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    ADDOP           reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    !               reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    ~               reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    INCREMENT       reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    DECREMENT       reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    WNOT            reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    SEMI            reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    COMMA           reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    $end            reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    BRACES_RIGHT    reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)
    ASSIGNOP        reduce using rule 91 (var_dec -> NAME ASSIGNOP term SEMI .)


state 178

    (92) var_dec -> NAME ASSIGNOP array_statement SEMI .

    NAME            reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    SUB             reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    PRINT           reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    USE             reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    COMMENT         reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    MY              reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    FOR             reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    WHILE           reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    DO              reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    UNTIL           reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    FOREACH         reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    IF              reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    ELSE            reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    ELSIF           reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    UNLESS          reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    PARANTHESIS_L   reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    NUMBER          reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    STRING          reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    Q               reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    QQ              reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    QX              reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    ADDOP           reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    !               reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    ~               reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    INCREMENT       reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    DECREMENT       reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    WNOT            reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    SEMI            reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    COMMA           reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    $end            reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    BRACES_RIGHT    reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)
    ASSIGNOP        reduce using rule 92 (var_dec -> NAME ASSIGNOP array_statement SEMI .)


state 179

    (19) array_statement -> PARANTHESIS_L arg_list . PARANTHESIS_R
    (66) arg_list -> arg_list . COMMA arg

    PARANTHESIS_R   shift and go to state 209
    COMMA           shift and go to state 74


state 180

    (20) array_statement -> PARANTHESIS_L NUMBER . DOTDOT NUMBER PARANTHESIS_R
    (113) term -> NUMBER .

  ! shift/reduce conflict for DOTDOT resolved as shift
    DOTDOT          shift and go to state 210
    PARANTHESIS_R   reduce using rule 113 (term -> NUMBER .)
    ?               reduce using rule 113 (term -> NUMBER .)
    POWOP           reduce using rule 113 (term -> NUMBER .)
    MULOP           reduce using rule 113 (term -> NUMBER .)
    ADDOP           reduce using rule 113 (term -> NUMBER .)
    SHIFTOP         reduce using rule 113 (term -> NUMBER .)
    RELOP           reduce using rule 113 (term -> NUMBER .)
    EQOP            reduce using rule 113 (term -> NUMBER .)
    BITANDOP        reduce using rule 113 (term -> NUMBER .)
    BITOROP         reduce using rule 113 (term -> NUMBER .)
    ANDAND          reduce using rule 113 (term -> NUMBER .)
    OROR            reduce using rule 113 (term -> NUMBER .)
    DORDOR          reduce using rule 113 (term -> NUMBER .)
    MATCHOP         reduce using rule 113 (term -> NUMBER .)
    WAND            reduce using rule 113 (term -> NUMBER .)
    WOR             reduce using rule 113 (term -> NUMBER .)
    WXOR            reduce using rule 113 (term -> NUMBER .)
    INCREMENT       reduce using rule 113 (term -> NUMBER .)
    DECREMENT       reduce using rule 113 (term -> NUMBER .)
    DEREF           reduce using rule 113 (term -> NUMBER .)
    COMMA           reduce using rule 113 (term -> NUMBER .)

  ! DOTDOT          [ reduce using rule 113 (term -> NUMBER .) ]


state 181

    (7) obj_func_call -> NAME DEREF NAME PARANTHESIS_L . arg_list PARANTHESIS_R SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (67) arg -> . term
    (68) arg -> . empty
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (107) empty -> .
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    PARANTHESIS_R   reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    arg_list                       shift and go to state 211
    arg                            shift and go to state 30
    term                           shift and go to state 22
    empty                          shift and go to state 67
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 182

    (72) var_deref -> NAME DEREF BRACES_LEFT NAME . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 212


state 183

    (31) sub_script -> NAME [ term ] .

    ASSIGNOP        reduce using rule 31 (sub_script -> NAME [ term ] .)
    ?               reduce using rule 31 (sub_script -> NAME [ term ] .)
    POWOP           reduce using rule 31 (sub_script -> NAME [ term ] .)
    MULOP           reduce using rule 31 (sub_script -> NAME [ term ] .)
    ADDOP           reduce using rule 31 (sub_script -> NAME [ term ] .)
    SHIFTOP         reduce using rule 31 (sub_script -> NAME [ term ] .)
    RELOP           reduce using rule 31 (sub_script -> NAME [ term ] .)
    EQOP            reduce using rule 31 (sub_script -> NAME [ term ] .)
    BITANDOP        reduce using rule 31 (sub_script -> NAME [ term ] .)
    BITOROP         reduce using rule 31 (sub_script -> NAME [ term ] .)
    DOTDOT          reduce using rule 31 (sub_script -> NAME [ term ] .)
    ANDAND          reduce using rule 31 (sub_script -> NAME [ term ] .)
    OROR            reduce using rule 31 (sub_script -> NAME [ term ] .)
    DORDOR          reduce using rule 31 (sub_script -> NAME [ term ] .)
    MATCHOP         reduce using rule 31 (sub_script -> NAME [ term ] .)
    WAND            reduce using rule 31 (sub_script -> NAME [ term ] .)
    WOR             reduce using rule 31 (sub_script -> NAME [ term ] .)
    WXOR            reduce using rule 31 (sub_script -> NAME [ term ] .)
    INCREMENT       reduce using rule 31 (sub_script -> NAME [ term ] .)
    DECREMENT       reduce using rule 31 (sub_script -> NAME [ term ] .)
    DEREF           reduce using rule 31 (sub_script -> NAME [ term ] .)
    SEMI            reduce using rule 31 (sub_script -> NAME [ term ] .)
    COMMA           reduce using rule 31 (sub_script -> NAME [ term ] .)
    PARANTHESIS_R   reduce using rule 31 (sub_script -> NAME [ term ] .)
    NAME            reduce using rule 31 (sub_script -> NAME [ term ] .)
    SUB             reduce using rule 31 (sub_script -> NAME [ term ] .)
    PRINT           reduce using rule 31 (sub_script -> NAME [ term ] .)
    USE             reduce using rule 31 (sub_script -> NAME [ term ] .)
    COMMENT         reduce using rule 31 (sub_script -> NAME [ term ] .)
    MY              reduce using rule 31 (sub_script -> NAME [ term ] .)
    FOR             reduce using rule 31 (sub_script -> NAME [ term ] .)
    WHILE           reduce using rule 31 (sub_script -> NAME [ term ] .)
    DO              reduce using rule 31 (sub_script -> NAME [ term ] .)
    UNTIL           reduce using rule 31 (sub_script -> NAME [ term ] .)
    FOREACH         reduce using rule 31 (sub_script -> NAME [ term ] .)
    IF              reduce using rule 31 (sub_script -> NAME [ term ] .)
    ELSE            reduce using rule 31 (sub_script -> NAME [ term ] .)
    ELSIF           reduce using rule 31 (sub_script -> NAME [ term ] .)
    UNLESS          reduce using rule 31 (sub_script -> NAME [ term ] .)
    PARANTHESIS_L   reduce using rule 31 (sub_script -> NAME [ term ] .)
    NUMBER          reduce using rule 31 (sub_script -> NAME [ term ] .)
    STRING          reduce using rule 31 (sub_script -> NAME [ term ] .)
    Q               reduce using rule 31 (sub_script -> NAME [ term ] .)
    QQ              reduce using rule 31 (sub_script -> NAME [ term ] .)
    QX              reduce using rule 31 (sub_script -> NAME [ term ] .)
    !               reduce using rule 31 (sub_script -> NAME [ term ] .)
    ~               reduce using rule 31 (sub_script -> NAME [ term ] .)
    WNOT            reduce using rule 31 (sub_script -> NAME [ term ] .)
    $end            reduce using rule 31 (sub_script -> NAME [ term ] .)
    BRACES_RIGHT    reduce using rule 31 (sub_script -> NAME [ term ] .)
    ]               reduce using rule 31 (sub_script -> NAME [ term ] .)
    :               reduce using rule 31 (sub_script -> NAME [ term ] .)


state 184

    (88) var_dec -> my NAME ASSIGNOP SHIFT . SEMI

    SEMI            shift and go to state 213


state 185

    (89) var_dec -> my NAME ASSIGNOP term . SEMI
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    SEMI            shift and go to state 214
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95


state 186

    (117) term -> term ? term : . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 215
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 187

    (93) var_dec -> sub_script ASSIGNOP term SEMI .

    NAME            reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    SUB             reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    PRINT           reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    USE             reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    COMMENT         reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    MY              reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    FOR             reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    WHILE           reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    DO              reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    UNTIL           reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    FOREACH         reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    IF              reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    ELSE            reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    ELSIF           reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    UNLESS          reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    PARANTHESIS_L   reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    NUMBER          reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    STRING          reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    Q               reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    QQ              reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    QX              reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    ADDOP           reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    !               reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    ~               reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    INCREMENT       reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    DECREMENT       reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    WNOT            reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    SEMI            reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    COMMA           reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    $end            reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    BRACES_RIGHT    reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)
    ASSIGNOP        reduce using rule 93 (var_dec -> sub_script ASSIGNOP term SEMI .)


state 188

    (81) function_dec -> SUB NAME BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 216


state 189

    (4) constructor -> SUB NEW BRACES_LEFT constructor_body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 217


state 190

    (8) constructor_body -> statement . constructor_hash bless_st return_constructor
    (9) constructor_hash -> . my ASSIGNOP BRACES_LEFT hash_statement_list BRACES_RIGHT SEMI
    (79) my -> . MY
    (80) my -> .

    MY              shift and go to state 32
    ASSIGNOP        reduce using rule 80 (my -> .)

    constructor_hash               shift and go to state 218
    my                             shift and go to state 219

state 191

    (3) print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .

    SEMI            reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    NAME            reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    SUB             reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    PRINT           reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    USE             reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    COMMENT         reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    MY              reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    FOR             reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    WHILE           reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    DO              reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    UNTIL           reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    FOREACH         reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    IF              reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    ELSE            reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    ELSIF           reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    UNLESS          reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    PARANTHESIS_L   reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    NUMBER          reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    STRING          reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    Q               reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    QQ              reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    QX              reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    ADDOP           reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    !               reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    ~               reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    INCREMENT       reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    DECREMENT       reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    WNOT            reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    COMMA           reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    $end            reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    BRACES_RIGHT    reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)
    ASSIGNOP        reduce using rule 3 (print_st -> PRINT PARANTHESIS_L HANDLE PARANTHESIS_R .)


state 192

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP . NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP . NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 220


state 193

    (52) while_st -> WHILE PARANTHESIS_L NAME RELOP . NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 221


state 194

    (53) while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 222


state 195

    (69) do_while_st -> DO BRACES_LEFT body BRACES_RIGHT . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R

    WHILE           shift and go to state 223


state 196

    (71) until_st -> UNTIL PARANTHESIS_L NAME RELOP . NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 224


state 197

    (51) foreach_st -> FOREACH NAME PARANTHESIS_L NAME . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 225


state 198

    (83) if_st -> IF PARANTHESIS_L NAME RELOP . NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 226


state 199

    (84) if_st -> IF PARANTHESIS_L NAME EQOP . NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 227


state 200

    (86) else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 86 (else_st -> ELSE BRACES_LEFT body BRACES_RIGHT .)


state 201

    (94) elsif_st -> ELSIF PARANTHESIS_L NAME RELOP . NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 228


state 202

    (95) elsif_st -> ELSIF PARANTHESIS_L NAME EQOP . NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 229


state 203

    (96) unless_st -> UNLESS PARANTHESIS_L NAME RELOP . NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 230


state 204

    (97) unless_st -> UNLESS PARANTHESIS_L NAME EQOP . NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 231


state 205

    (118) term -> Q BRACES_LEFT NAME BRACES_RIGHT .

    ?               reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    POWOP           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    MULOP           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    ADDOP           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    SHIFTOP         reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    RELOP           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    EQOP            reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    BITANDOP        reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    BITOROP         reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    DOTDOT          reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    ANDAND          reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    OROR            reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    DORDOR          reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    MATCHOP         reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    WAND            reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    WOR             reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    WXOR            reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    INCREMENT       reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    DECREMENT       reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    DEREF           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    SEMI            reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    COMMA           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    PARANTHESIS_R   reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    NAME            reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    SUB             reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    PRINT           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    USE             reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    COMMENT         reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    MY              reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    FOR             reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    WHILE           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    DO              reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    UNTIL           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    FOREACH         reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    IF              reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    ELSE            reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    ELSIF           reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    UNLESS          reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    NUMBER          reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    STRING          reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    Q               reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    QQ              reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    QX              reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    !               reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    ~               reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    WNOT            reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    $end            reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    ]               reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)
    :               reduce using rule 118 (term -> Q BRACES_LEFT NAME BRACES_RIGHT .)


state 206

    (119) term -> QQ BRACES_LEFT NAME BRACES_RIGHT .

    ?               reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    POWOP           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    MULOP           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    ADDOP           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    SHIFTOP         reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    RELOP           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    EQOP            reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    BITANDOP        reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    BITOROP         reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    DOTDOT          reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    ANDAND          reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    OROR            reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    DORDOR          reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    MATCHOP         reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    WAND            reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    WOR             reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    WXOR            reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    INCREMENT       reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    DECREMENT       reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    DEREF           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    SEMI            reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    COMMA           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    PARANTHESIS_R   reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    NAME            reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    SUB             reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    PRINT           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    USE             reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    COMMENT         reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    MY              reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    FOR             reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    WHILE           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    DO              reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    UNTIL           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    FOREACH         reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    IF              reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    ELSE            reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    ELSIF           reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    UNLESS          reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    NUMBER          reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    STRING          reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    Q               reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    QQ              reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    QX              reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    !               reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    ~               reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    WNOT            reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    $end            reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    ]               reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)
    :               reduce using rule 119 (term -> QQ BRACES_LEFT NAME BRACES_RIGHT .)


state 207

    (120) term -> QX BRACES_LEFT NAME BRACES_RIGHT .

    ?               reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    POWOP           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    MULOP           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    ADDOP           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    SHIFTOP         reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    RELOP           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    EQOP            reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    BITANDOP        reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    BITOROP         reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    DOTDOT          reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    ANDAND          reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    OROR            reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    DORDOR          reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    MATCHOP         reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    WAND            reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    WOR             reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    WXOR            reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    INCREMENT       reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    DECREMENT       reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    DEREF           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    SEMI            reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    COMMA           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    PARANTHESIS_R   reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    NAME            reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    SUB             reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    PRINT           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    USE             reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    COMMENT         reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    MY              reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    FOR             reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    WHILE           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    DO              reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    UNTIL           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    FOREACH         reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    IF              reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    ELSE            reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    ELSIF           reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    UNLESS          reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    NUMBER          reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    STRING          reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    Q               reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    QQ              reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    QX              reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    !               reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    ~               reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    WNOT            reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    $end            reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    ]               reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)
    :               reduce using rule 120 (term -> QX BRACES_LEFT NAME BRACES_RIGHT .)


state 208

    (1) object_creation -> NAME ASSIGNOP NAME DEREF NEW . PARANTHESIS_L arg_list PARANTHESIS_R SEMI

    PARANTHESIS_L   shift and go to state 232


state 209

    (19) array_statement -> PARANTHESIS_L arg_list PARANTHESIS_R .

    SEMI            reduce using rule 19 (array_statement -> PARANTHESIS_L arg_list PARANTHESIS_R .)


state 210

    (20) array_statement -> PARANTHESIS_L NUMBER DOTDOT . NUMBER PARANTHESIS_R

    NUMBER          shift and go to state 233


state 211

    (7) obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list . PARANTHESIS_R SEMI
    (66) arg_list -> arg_list . COMMA arg

    PARANTHESIS_R   shift and go to state 234
    COMMA           shift and go to state 74


state 212

    (72) var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .

    ?               reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    POWOP           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    MULOP           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    ADDOP           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    SHIFTOP         reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    RELOP           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    EQOP            reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    BITANDOP        reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    BITOROP         reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    DOTDOT          reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    ANDAND          reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    OROR            reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    DORDOR          reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    MATCHOP         reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    WAND            reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    WOR             reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    WXOR            reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    INCREMENT       reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    DECREMENT       reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    DEREF           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    SEMI            reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    COMMA           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    PARANTHESIS_R   reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    NAME            reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    SUB             reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    PRINT           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    USE             reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    COMMENT         reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    MY              reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    FOR             reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    WHILE           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    DO              reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    UNTIL           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    FOREACH         reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    IF              reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    ELSE            reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    ELSIF           reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    UNLESS          reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    NUMBER          reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    STRING          reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    Q               reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    QQ              reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    QX              reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    !               reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    ~               reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    WNOT            reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    $end            reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    ]               reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)
    :               reduce using rule 72 (var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT .)


state 213

    (88) var_dec -> my NAME ASSIGNOP SHIFT SEMI .

    NAME            reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    SUB             reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    PRINT           reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    USE             reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    COMMENT         reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    MY              reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    FOR             reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    WHILE           reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    DO              reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    UNTIL           reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    FOREACH         reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    IF              reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    ELSE            reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    ELSIF           reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    UNLESS          reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    PARANTHESIS_L   reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    NUMBER          reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    STRING          reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    Q               reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    QQ              reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    QX              reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    ADDOP           reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    !               reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    ~               reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    INCREMENT       reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    DECREMENT       reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    WNOT            reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    SEMI            reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    COMMA           reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    $end            reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    BRACES_RIGHT    reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)
    ASSIGNOP        reduce using rule 88 (var_dec -> my NAME ASSIGNOP SHIFT SEMI .)


state 214

    (89) var_dec -> my NAME ASSIGNOP term SEMI .

    NAME            reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    SUB             reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    PRINT           reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    USE             reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    COMMENT         reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    MY              reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    FOR             reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    WHILE           reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    DO              reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    UNTIL           reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    FOREACH         reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    IF              reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    ELSE            reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    ELSIF           reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    UNLESS          reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    PARANTHESIS_L   reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    NUMBER          reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    STRING          reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    Q               reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    QQ              reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    QX              reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    ADDOP           reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    !               reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    ~               reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    INCREMENT       reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    DECREMENT       reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    WNOT            reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    SEMI            reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    COMMA           reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    $end            reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    BRACES_RIGHT    reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)
    ASSIGNOP        reduce using rule 89 (var_dec -> my NAME ASSIGNOP term SEMI .)


state 215

    (117) term -> term ? term : term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

  ! shift/reduce conflict for ? resolved as shift
  ! shift/reduce conflict for POWOP resolved as shift
  ! shift/reduce conflict for MULOP resolved as shift
  ! shift/reduce conflict for ADDOP resolved as shift
  ! shift/reduce conflict for SHIFTOP resolved as shift
  ! shift/reduce conflict for RELOP resolved as shift
  ! shift/reduce conflict for EQOP resolved as shift
  ! shift/reduce conflict for BITANDOP resolved as shift
  ! shift/reduce conflict for BITOROP resolved as shift
  ! shift/reduce conflict for DOTDOT resolved as shift
  ! shift/reduce conflict for ANDAND resolved as shift
  ! shift/reduce conflict for OROR resolved as shift
  ! shift/reduce conflict for DORDOR resolved as shift
  ! shift/reduce conflict for MATCHOP resolved as shift
  ! shift/reduce conflict for WAND resolved as shift
  ! shift/reduce conflict for WOR resolved as shift
  ! shift/reduce conflict for WXOR resolved as shift
  ! shift/reduce conflict for INCREMENT resolved as shift
  ! shift/reduce conflict for DECREMENT resolved as shift
  ! shift/reduce conflict for DEREF resolved as shift
    SEMI            reduce using rule 117 (term -> term ? term : term .)
    COMMA           reduce using rule 117 (term -> term ? term : term .)
    PARANTHESIS_R   reduce using rule 117 (term -> term ? term : term .)
    NAME            reduce using rule 117 (term -> term ? term : term .)
    SUB             reduce using rule 117 (term -> term ? term : term .)
    PRINT           reduce using rule 117 (term -> term ? term : term .)
    USE             reduce using rule 117 (term -> term ? term : term .)
    COMMENT         reduce using rule 117 (term -> term ? term : term .)
    MY              reduce using rule 117 (term -> term ? term : term .)
    FOR             reduce using rule 117 (term -> term ? term : term .)
    WHILE           reduce using rule 117 (term -> term ? term : term .)
    DO              reduce using rule 117 (term -> term ? term : term .)
    UNTIL           reduce using rule 117 (term -> term ? term : term .)
    FOREACH         reduce using rule 117 (term -> term ? term : term .)
    IF              reduce using rule 117 (term -> term ? term : term .)
    ELSE            reduce using rule 117 (term -> term ? term : term .)
    ELSIF           reduce using rule 117 (term -> term ? term : term .)
    UNLESS          reduce using rule 117 (term -> term ? term : term .)
    PARANTHESIS_L   reduce using rule 117 (term -> term ? term : term .)
    NUMBER          reduce using rule 117 (term -> term ? term : term .)
    STRING          reduce using rule 117 (term -> term ? term : term .)
    Q               reduce using rule 117 (term -> term ? term : term .)
    QQ              reduce using rule 117 (term -> term ? term : term .)
    QX              reduce using rule 117 (term -> term ? term : term .)
    !               reduce using rule 117 (term -> term ? term : term .)
    ~               reduce using rule 117 (term -> term ? term : term .)
    WNOT            reduce using rule 117 (term -> term ? term : term .)
    $end            reduce using rule 117 (term -> term ? term : term .)
    BRACES_RIGHT    reduce using rule 117 (term -> term ? term : term .)
    ASSIGNOP        reduce using rule 117 (term -> term ? term : term .)
    ]               reduce using rule 117 (term -> term ? term : term .)
    :               reduce using rule 117 (term -> term ? term : term .)
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95

  ! ?               [ reduce using rule 117 (term -> term ? term : term .) ]
  ! POWOP           [ reduce using rule 117 (term -> term ? term : term .) ]
  ! MULOP           [ reduce using rule 117 (term -> term ? term : term .) ]
  ! ADDOP           [ reduce using rule 117 (term -> term ? term : term .) ]
  ! SHIFTOP         [ reduce using rule 117 (term -> term ? term : term .) ]
  ! RELOP           [ reduce using rule 117 (term -> term ? term : term .) ]
  ! EQOP            [ reduce using rule 117 (term -> term ? term : term .) ]
  ! BITANDOP        [ reduce using rule 117 (term -> term ? term : term .) ]
  ! BITOROP         [ reduce using rule 117 (term -> term ? term : term .) ]
  ! DOTDOT          [ reduce using rule 117 (term -> term ? term : term .) ]
  ! ANDAND          [ reduce using rule 117 (term -> term ? term : term .) ]
  ! OROR            [ reduce using rule 117 (term -> term ? term : term .) ]
  ! DORDOR          [ reduce using rule 117 (term -> term ? term : term .) ]
  ! MATCHOP         [ reduce using rule 117 (term -> term ? term : term .) ]
  ! WAND            [ reduce using rule 117 (term -> term ? term : term .) ]
  ! WOR             [ reduce using rule 117 (term -> term ? term : term .) ]
  ! WXOR            [ reduce using rule 117 (term -> term ? term : term .) ]
  ! INCREMENT       [ reduce using rule 117 (term -> term ? term : term .) ]
  ! DECREMENT       [ reduce using rule 117 (term -> term ? term : term .) ]
  ! DEREF           [ reduce using rule 117 (term -> term ? term : term .) ]


state 216

    (81) function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 81 (function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT .)


state 217

    (4) constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .

    NAME            reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    SUB             reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    PRINT           reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    USE             reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    COMMENT         reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    MY              reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    FOR             reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    WHILE           reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    DO              reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    UNTIL           reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    FOREACH         reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    IF              reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    ELSE            reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    ELSIF           reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    UNLESS          reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    NUMBER          reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    STRING          reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    Q               reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    QQ              reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    QX              reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    ADDOP           reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    !               reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    ~               reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    INCREMENT       reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    DECREMENT       reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    WNOT            reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    SEMI            reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    COMMA           reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    $end            reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 4 (constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT .)


state 218

    (8) constructor_body -> statement constructor_hash . bless_st return_constructor
    (30) bless_st -> . BLESS PARANTHESIS_L NAME COMMA NAME PARANTHESIS_R SEMI

    BLESS           shift and go to state 236

    bless_st                       shift and go to state 235

state 219

    (9) constructor_hash -> my . ASSIGNOP BRACES_LEFT hash_statement_list BRACES_RIGHT SEMI

    ASSIGNOP        shift and go to state 237


state 220

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER . SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER . SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    SEMI            shift and go to state 238


state 221

    (52) while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 239


state 222

    (53) while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 240
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 223

    (69) do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE . PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R

    PARANTHESIS_L   shift and go to state 241


state 224

    (71) until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 242


state 225

    (51) foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 243


state 226

    (83) if_st -> IF PARANTHESIS_L NAME RELOP NUMBER . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 244


state 227

    (84) if_st -> IF PARANTHESIS_L NAME EQOP NUMBER . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 245


state 228

    (94) elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 246


state 229

    (95) elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 247


state 230

    (96) unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 248


state 231

    (97) unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 249


state 232

    (1) object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L . arg_list PARANTHESIS_R SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (67) arg -> . term
    (68) arg -> . empty
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (107) empty -> .
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    PARANTHESIS_R   reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    arg_list                       shift and go to state 250
    arg                            shift and go to state 30
    term                           shift and go to state 22
    empty                          shift and go to state 67
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 233

    (20) array_statement -> PARANTHESIS_L NUMBER DOTDOT NUMBER . PARANTHESIS_R

    PARANTHESIS_R   shift and go to state 251


state 234

    (7) obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R . SEMI

    SEMI            shift and go to state 252


state 235

    (8) constructor_body -> statement constructor_hash bless_st . return_constructor
    (32) return_constructor -> . RETURN NAME SEMI

    RETURN          shift and go to state 254

    return_constructor             shift and go to state 253

state 236

    (30) bless_st -> BLESS . PARANTHESIS_L NAME COMMA NAME PARANTHESIS_R SEMI

    PARANTHESIS_L   shift and go to state 255


state 237

    (9) constructor_hash -> my ASSIGNOP . BRACES_LEFT hash_statement_list BRACES_RIGHT SEMI

    BRACES_LEFT     shift and go to state 256


state 238

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI . NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI . NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 257


state 239

    (52) while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 258


state 240

    (53) while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 259


state 241

    (69) do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L . NAME RELOP NUMBER PARANTHESIS_R

    NAME            shift and go to state 260


state 242

    (71) until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 261


state 243

    (51) foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 262
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 244

    (83) if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 263


state 245

    (84) if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 264


state 246

    (94) elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 265


state 247

    (95) elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 266


state 248

    (96) unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 267


state 249

    (97) unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 268


state 250

    (1) object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list . PARANTHESIS_R SEMI
    (66) arg_list -> arg_list . COMMA arg

    PARANTHESIS_R   shift and go to state 269
    COMMA           shift and go to state 74


state 251

    (20) array_statement -> PARANTHESIS_L NUMBER DOTDOT NUMBER PARANTHESIS_R .

    SEMI            reduce using rule 20 (array_statement -> PARANTHESIS_L NUMBER DOTDOT NUMBER PARANTHESIS_R .)


state 252

    (7) obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .

    NAME            reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    SUB             reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    PRINT           reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    USE             reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    COMMENT         reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    MY              reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    FOR             reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    WHILE           reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    DO              reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    UNTIL           reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    FOREACH         reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    IF              reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ELSE            reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ELSIF           reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    UNLESS          reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    PARANTHESIS_L   reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    NUMBER          reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    STRING          reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    Q               reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    QQ              reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    QX              reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ADDOP           reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    !               reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ~               reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    INCREMENT       reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    DECREMENT       reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    WNOT            reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    SEMI            reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    COMMA           reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    $end            reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    BRACES_RIGHT    reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ASSIGNOP        reduce using rule 7 (obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)


state 253

    (8) constructor_body -> statement constructor_hash bless_st return_constructor .

    BRACES_RIGHT    reduce using rule 8 (constructor_body -> statement constructor_hash bless_st return_constructor .)


state 254

    (32) return_constructor -> RETURN . NAME SEMI

    NAME            shift and go to state 270


state 255

    (30) bless_st -> BLESS PARANTHESIS_L . NAME COMMA NAME PARANTHESIS_R SEMI

    NAME            shift and go to state 271


state 256

    (9) constructor_hash -> my ASSIGNOP BRACES_LEFT . hash_statement_list BRACES_RIGHT SEMI
    (17) hash_statement_list -> . hash_statement
    (18) hash_statement_list -> . hash_statement_list COMMA hash_statement
    (22) hash_statement -> . NAME HASH_OP SHIFT
    (23) hash_statement -> . NAME HASH_OP term

    NAME            shift and go to state 274

    hash_statement_list            shift and go to state 272
    hash_statement                 shift and go to state 273

state 257

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME . RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME . RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    RELOP           shift and go to state 275


state 258

    (52) while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 276
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 259

    (53) while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 53 (while_st -> WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 260

    (69) do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME . RELOP NUMBER PARANTHESIS_R

    RELOP           shift and go to state 277


state 261

    (71) until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 278
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 262

    (51) foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 279


state 263

    (83) if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 280
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 264

    (84) if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 281
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 265

    (94) elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 282
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 266

    (95) elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 283
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 267

    (96) unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 284
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 268

    (97) unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 285
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 269

    (1) object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R . SEMI

    SEMI            shift and go to state 286


state 270

    (32) return_constructor -> RETURN NAME . SEMI

    SEMI            shift and go to state 287


state 271

    (30) bless_st -> BLESS PARANTHESIS_L NAME . COMMA NAME PARANTHESIS_R SEMI

    COMMA           shift and go to state 288


state 272

    (9) constructor_hash -> my ASSIGNOP BRACES_LEFT hash_statement_list . BRACES_RIGHT SEMI
    (18) hash_statement_list -> hash_statement_list . COMMA hash_statement

    BRACES_RIGHT    shift and go to state 289
    COMMA           shift and go to state 290


state 273

    (17) hash_statement_list -> hash_statement .

    BRACES_RIGHT    reduce using rule 17 (hash_statement_list -> hash_statement .)
    COMMA           reduce using rule 17 (hash_statement_list -> hash_statement .)


state 274

    (22) hash_statement -> NAME . HASH_OP SHIFT
    (23) hash_statement -> NAME . HASH_OP term

    HASH_OP         shift and go to state 291


state 275

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP . NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP . NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NUMBER          shift and go to state 292


state 276

    (52) while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 293


state 277

    (69) do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP . NUMBER PARANTHESIS_R

    NUMBER          shift and go to state 294


state 278

    (71) until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 295


state 279

    (51) foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 51 (foreach_st -> FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 280

    (83) if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 296


state 281

    (84) if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 297


state 282

    (94) elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 298


state 283

    (95) elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 299


state 284

    (96) unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 300


state 285

    (97) unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 301


state 286

    (1) object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .

    NAME            reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    SUB             reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    PRINT           reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    USE             reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    COMMENT         reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    MY              reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    FOR             reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    WHILE           reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    DO              reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    UNTIL           reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    FOREACH         reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    IF              reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ELSE            reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ELSIF           reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    UNLESS          reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    PARANTHESIS_L   reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    NUMBER          reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    STRING          reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    Q               reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    QQ              reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    QX              reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ADDOP           reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    !               reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ~               reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    INCREMENT       reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    DECREMENT       reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    WNOT            reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    SEMI            reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    COMMA           reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    $end            reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    BRACES_RIGHT    reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)
    ASSIGNOP        reduce using rule 1 (object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI .)


state 287

    (32) return_constructor -> RETURN NAME SEMI .

    BRACES_RIGHT    reduce using rule 32 (return_constructor -> RETURN NAME SEMI .)


state 288

    (30) bless_st -> BLESS PARANTHESIS_L NAME COMMA . NAME PARANTHESIS_R SEMI

    NAME            shift and go to state 302


state 289

    (9) constructor_hash -> my ASSIGNOP BRACES_LEFT hash_statement_list BRACES_RIGHT . SEMI

    SEMI            shift and go to state 303


state 290

    (18) hash_statement_list -> hash_statement_list COMMA . hash_statement
    (22) hash_statement -> . NAME HASH_OP SHIFT
    (23) hash_statement -> . NAME HASH_OP term

    NAME            shift and go to state 274

    hash_statement                 shift and go to state 304

state 291

    (22) hash_statement -> NAME HASH_OP . SHIFT
    (23) hash_statement -> NAME HASH_OP . term
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT
    (31) sub_script -> . NAME [ term ]

    SHIFT           shift and go to state 305
    PARANTHESIS_L   shift and go to state 25
    NAME            shift and go to state 100
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

    term                           shift and go to state 306
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57
    sub_script                     shift and go to state 101

state 292

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER . SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER . SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    SEMI            shift and go to state 307


state 293

    (52) while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 52 (while_st -> WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 294

    (69) do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER . PARANTHESIS_R

    PARANTHESIS_R   shift and go to state 308


state 295

    (71) until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 71 (until_st -> UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 296

    (83) if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 83 (if_st -> IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 297

    (84) if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 84 (if_st -> IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 298

    (94) elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 94 (elsif_st -> ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 299

    (95) elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 95 (elsif_st -> ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 300

    (96) unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 96 (unless_st -> UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 301

    (97) unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 97 (unless_st -> UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 302

    (30) bless_st -> BLESS PARANTHESIS_L NAME COMMA NAME . PARANTHESIS_R SEMI

    PARANTHESIS_R   shift and go to state 309


state 303

    (9) constructor_hash -> my ASSIGNOP BRACES_LEFT hash_statement_list BRACES_RIGHT SEMI .

    BLESS           reduce using rule 9 (constructor_hash -> my ASSIGNOP BRACES_LEFT hash_statement_list BRACES_RIGHT SEMI .)


state 304

    (18) hash_statement_list -> hash_statement_list COMMA hash_statement .

    BRACES_RIGHT    reduce using rule 18 (hash_statement_list -> hash_statement_list COMMA hash_statement .)
    COMMA           reduce using rule 18 (hash_statement_list -> hash_statement_list COMMA hash_statement .)


state 305

    (22) hash_statement -> NAME HASH_OP SHIFT .

    BRACES_RIGHT    reduce using rule 22 (hash_statement -> NAME HASH_OP SHIFT .)
    COMMA           reduce using rule 22 (hash_statement -> NAME HASH_OP SHIFT .)


state 306

    (23) hash_statement -> NAME HASH_OP term .
    (117) term -> term . ? term : term
    (33) termbinop -> term . POWOP term
    (34) termbinop -> term . MULOP term
    (35) termbinop -> term . ADDOP term
    (36) termbinop -> term . SHIFTOP term
    (37) termbinop -> term . RELOP term
    (38) termbinop -> term . EQOP term
    (39) termbinop -> term . BITANDOP term
    (40) termbinop -> term . BITOROP term
    (41) termbinop -> term . DOTDOT term
    (42) termbinop -> term . ANDAND term
    (43) termbinop -> term . OROR term
    (44) termbinop -> term . DORDOR term
    (45) termbinop -> term . MATCHOP term
    (46) termbinop -> term . WAND term
    (47) termbinop -> term . WOR term
    (48) termbinop -> term . WXOR term
    (101) termunop -> term . INCREMENT
    (102) termunop -> term . DECREMENT
    (103) termunop -> term . DEREF

    BRACES_RIGHT    reduce using rule 23 (hash_statement -> NAME HASH_OP term .)
    COMMA           reduce using rule 23 (hash_statement -> NAME HASH_OP term .)
    ?               shift and go to state 76
    POWOP           shift and go to state 77
    MULOP           shift and go to state 78
    ADDOP           shift and go to state 79
    SHIFTOP         shift and go to state 80
    RELOP           shift and go to state 81
    EQOP            shift and go to state 82
    BITANDOP        shift and go to state 83
    BITOROP         shift and go to state 84
    DOTDOT          shift and go to state 85
    ANDAND          shift and go to state 86
    OROR            shift and go to state 87
    DORDOR          shift and go to state 88
    MATCHOP         shift and go to state 89
    WAND            shift and go to state 90
    WOR             shift and go to state 91
    WXOR            shift and go to state 92
    INCREMENT       shift and go to state 93
    DECREMENT       shift and go to state 94
    DEREF           shift and go to state 95


state 307

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI . NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI . NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    NAME            shift and go to state 310


state 308

    (69) do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .

    NAME            reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    SUB             reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    PRINT           reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    USE             reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    COMMENT         reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    MY              reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    FOR             reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    WHILE           reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    DO              reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    UNTIL           reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    FOREACH         reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    IF              reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    ELSE            reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    ELSIF           reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    UNLESS          reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    PARANTHESIS_L   reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    NUMBER          reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    STRING          reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    Q               reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    QQ              reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    QX              reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    ADDOP           reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    !               reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    ~               reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    INCREMENT       reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    DECREMENT       reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    WNOT            reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    SEMI            reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    COMMA           reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    $end            reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    BRACES_RIGHT    reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)
    ASSIGNOP        reduce using rule 69 (do_while_st -> DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R .)


state 309

    (30) bless_st -> BLESS PARANTHESIS_L NAME COMMA NAME PARANTHESIS_R . SEMI

    SEMI            shift and go to state 311


state 310

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME . INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME . DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    INCREMENT       shift and go to state 312
    DECREMENT       shift and go to state 313


state 311

    (30) bless_st -> BLESS PARANTHESIS_L NAME COMMA NAME PARANTHESIS_R SEMI .

    RETURN          reduce using rule 30 (bless_st -> BLESS PARANTHESIS_L NAME COMMA NAME PARANTHESIS_R SEMI .)


state 312

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 314


state 313

    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT . PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT

    PARANTHESIS_R   shift and go to state 315


state 314

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 316


state 315

    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R . BRACES_LEFT body BRACES_RIGHT

    BRACES_LEFT     shift and go to state 317


state 316

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 318
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 317

    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT . body BRACES_RIGHT
    (26) body -> . statement_list
    (27) body -> . empty
    (28) statement_list -> . statement
    (29) statement_list -> . statement_list statement
    (107) empty -> .
    (54) statement -> . var_dec
    (55) statement -> . function_dec
    (56) statement -> . constructor
    (57) statement -> . object_creation
    (58) statement -> . obj_func_call
    (59) statement -> . control_statements
    (60) statement -> . print_st SEMI
    (61) statement -> . print_st
    (62) statement -> . use_st
    (63) statement -> . arg_list SEMI
    (64) statement -> . comment
    (88) var_dec -> . my NAME ASSIGNOP SHIFT SEMI
    (89) var_dec -> . my NAME ASSIGNOP term SEMI
    (90) var_dec -> . NAME ASSIGNOP SHIFT SEMI
    (91) var_dec -> . NAME ASSIGNOP term SEMI
    (92) var_dec -> . NAME ASSIGNOP array_statement SEMI
    (93) var_dec -> . sub_script ASSIGNOP term SEMI
    (81) function_dec -> . SUB NAME BRACES_LEFT body BRACES_RIGHT
    (4) constructor -> . SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT
    (1) object_creation -> . NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (7) obj_func_call -> . NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI
    (5) control_statements -> . iterative
    (6) control_statements -> . conditional
    (2) print_st -> . PRINT HANDLE
    (3) print_st -> . PRINT PARANTHESIS_L HANDLE PARANTHESIS_R
    (78) use_st -> . USE NAME SEMI
    (65) arg_list -> . arg
    (66) arg_list -> . arg_list COMMA arg
    (108) comment -> . COMMENT
    (79) my -> . MY
    (80) my -> .
    (31) sub_script -> . NAME [ term ]
    (10) iterative -> . for_st
    (11) iterative -> . while_st
    (12) iterative -> . do_while_st
    (13) iterative -> . until_st
    (14) iterative -> . foreach_st
    (74) conditional -> . if_st
    (75) conditional -> . else_st
    (76) conditional -> . elsif_st
    (77) conditional -> . unless_st
    (67) arg -> . term
    (68) arg -> . empty
    (24) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (25) for_st -> . FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (52) while_st -> . WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (53) while_st -> . WHILE PARANTHESIS_L NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (69) do_while_st -> . DO BRACES_LEFT body BRACES_RIGHT WHILE PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R
    (71) until_st -> . UNTIL PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (51) foreach_st -> . FOREACH NAME PARANTHESIS_L NAME PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (83) if_st -> . IF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (84) if_st -> . IF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (86) else_st -> . ELSE BRACES_LEFT body BRACES_RIGHT
    (94) elsif_st -> . ELSIF PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (95) elsif_st -> . ELSIF PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (96) unless_st -> . UNLESS PARANTHESIS_L NAME RELOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (97) unless_st -> . UNLESS PARANTHESIS_L NAME EQOP NUMBER PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT
    (109) term -> . termbinop
    (110) term -> . termunop
    (111) term -> . PARANTHESIS_L term PARANTHESIS_R
    (112) term -> . NAME
    (113) term -> . NUMBER
    (114) term -> . STRING
    (115) term -> . var_deref
    (116) term -> . sub_script
    (117) term -> . term ? term : term
    (118) term -> . Q BRACES_LEFT NAME BRACES_RIGHT
    (119) term -> . QQ BRACES_LEFT NAME BRACES_RIGHT
    (120) term -> . QX BRACES_LEFT NAME BRACES_RIGHT
    (33) termbinop -> . term POWOP term
    (34) termbinop -> . term MULOP term
    (35) termbinop -> . term ADDOP term
    (36) termbinop -> . term SHIFTOP term
    (37) termbinop -> . term RELOP term
    (38) termbinop -> . term EQOP term
    (39) termbinop -> . term BITANDOP term
    (40) termbinop -> . term BITOROP term
    (41) termbinop -> . term DOTDOT term
    (42) termbinop -> . term ANDAND term
    (43) termbinop -> . term OROR term
    (44) termbinop -> . term DORDOR term
    (45) termbinop -> . term MATCHOP term
    (46) termbinop -> . term WAND term
    (47) termbinop -> . term WOR term
    (48) termbinop -> . term WXOR term
    (98) termunop -> . ADDOP term
    (99) termunop -> . ! term
    (100) termunop -> . ~ term
    (101) termunop -> . term INCREMENT
    (102) termunop -> . term DECREMENT
    (103) termunop -> . term DEREF
    (104) termunop -> . INCREMENT term
    (105) termunop -> . DECREMENT term
    (106) termunop -> . WNOT term
    (72) var_deref -> . NAME DEREF BRACES_LEFT NAME BRACES_RIGHT

  ! shift/reduce conflict for NAME resolved as shift
    BRACES_RIGHT    reduce using rule 107 (empty -> .)
    SEMI            reduce using rule 107 (empty -> .)
    COMMA           reduce using rule 107 (empty -> .)
    NAME            shift and go to state 9
    SUB             shift and go to state 24
    PRINT           shift and go to state 28
    USE             shift and go to state 29
    COMMENT         shift and go to state 31
    MY              shift and go to state 32
    FOR             shift and go to state 42
    WHILE           shift and go to state 46
    DO              shift and go to state 47
    UNTIL           shift and go to state 48
    FOREACH         shift and go to state 49
    IF              shift and go to state 50
    ELSE            shift and go to state 51
    ELSIF           shift and go to state 52
    UNLESS          shift and go to state 53
    PARANTHESIS_L   shift and go to state 25
    NUMBER          shift and go to state 43
    STRING          shift and go to state 56
    Q               shift and go to state 58
    QQ              shift and go to state 59
    QX              shift and go to state 60
    ADDOP           shift and go to state 61
    !               shift and go to state 62
    ~               shift and go to state 63
    INCREMENT       shift and go to state 44
    DECREMENT       shift and go to state 45
    WNOT            shift and go to state 64

  ! NAME            [ reduce using rule 80 (my -> .) ]

    body                           shift and go to state 319
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 10
    var_dec                        shift and go to state 11
    function_dec                   shift and go to state 12
    constructor                    shift and go to state 13
    object_creation                shift and go to state 14
    obj_func_call                  shift and go to state 15
    control_statements             shift and go to state 16
    print_st                       shift and go to state 17
    use_st                         shift and go to state 18
    arg_list                       shift and go to state 19
    comment                        shift and go to state 20
    my                             shift and go to state 21
    term                           shift and go to state 22
    sub_script                     shift and go to state 23
    iterative                      shift and go to state 26
    conditional                    shift and go to state 27
    arg                            shift and go to state 30
    for_st                         shift and go to state 33
    while_st                       shift and go to state 34
    do_while_st                    shift and go to state 35
    until_st                       shift and go to state 36
    foreach_st                     shift and go to state 37
    if_st                          shift and go to state 38
    else_st                        shift and go to state 39
    elsif_st                       shift and go to state 40
    unless_st                      shift and go to state 41
    termbinop                      shift and go to state 54
    termunop                       shift and go to state 55
    var_deref                      shift and go to state 57

state 318

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 320


state 319

    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 321


state 320

    (24) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 24 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME INCREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)


state 321

    (25) for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .

    NAME            reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SUB             reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PRINT           reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    USE             reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMENT         reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    MY              reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOR             reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WHILE           reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DO              reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNTIL           reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    FOREACH         reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    IF              reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSE            reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ELSIF           reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    UNLESS          reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    PARANTHESIS_L   reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    NUMBER          reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    STRING          reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    Q               reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QQ              reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    QX              reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ADDOP           reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    !               reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ~               reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    INCREMENT       reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    DECREMENT       reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    WNOT            reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    SEMI            reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    COMMA           reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    $end            reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)
    ASSIGNOP        reduce using rule 25 (for_st -> FOR PARANTHESIS_L NAME ASSIGNOP NUMBER SEMI NAME RELOP NUMBER SEMI NAME DECREMENT PARANTHESIS_R BRACES_LEFT body BRACES_RIGHT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NAME in state 0 resolved as shift
WARNING: shift/reduce conflict for NAME in state 5 resolved as shift
WARNING: shift/reduce conflict for NAME in state 6 resolved as shift
WARNING: shift/reduce conflict for DEREF in state 9 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 17 resolved as shift
WARNING: shift/reduce conflict for ADDOP in state 22 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 22 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 22 resolved as shift
WARNING: shift/reduce conflict for NAME in state 28 resolved as shift
WARNING: shift/reduce conflict for PARANTHESIS_L in state 28 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 28 resolved as shift
WARNING: shift/reduce conflict for STRING in state 28 resolved as shift
WARNING: shift/reduce conflict for Q in state 28 resolved as shift
WARNING: shift/reduce conflict for QQ in state 28 resolved as shift
WARNING: shift/reduce conflict for QX in state 28 resolved as shift
WARNING: shift/reduce conflict for ADDOP in state 28 resolved as shift
WARNING: shift/reduce conflict for ! in state 28 resolved as shift
WARNING: shift/reduce conflict for ~ in state 28 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 28 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 28 resolved as shift
WARNING: shift/reduce conflict for WNOT in state 28 resolved as shift
WARNING: shift/reduce conflict for NAME in state 74 resolved as shift
WARNING: shift/reduce conflict for PARANTHESIS_L in state 74 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for Q in state 74 resolved as shift
WARNING: shift/reduce conflict for QQ in state 74 resolved as shift
WARNING: shift/reduce conflict for QX in state 74 resolved as shift
WARNING: shift/reduce conflict for ADDOP in state 74 resolved as shift
WARNING: shift/reduce conflict for ! in state 74 resolved as shift
WARNING: shift/reduce conflict for ~ in state 74 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 74 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 74 resolved as shift
WARNING: shift/reduce conflict for WNOT in state 74 resolved as shift
WARNING: shift/reduce conflict for DEREF in state 100 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 104 resolved as shift
WARNING: shift/reduce conflict for DEREF in state 105 resolved as shift
WARNING: shift/reduce conflict for PARANTHESIS_L in state 105 resolved as shift
WARNING: shift/reduce conflict for NAME in state 105 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 105 resolved as shift
WARNING: shift/reduce conflict for STRING in state 105 resolved as shift
WARNING: shift/reduce conflict for Q in state 105 resolved as shift
WARNING: shift/reduce conflict for QQ in state 105 resolved as shift
WARNING: shift/reduce conflict for QX in state 105 resolved as shift
WARNING: shift/reduce conflict for NAME in state 105 resolved as shift
WARNING: shift/reduce conflict for PARANTHESIS_L in state 105 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 105 resolved as shift
WARNING: shift/reduce conflict for STRING in state 105 resolved as shift
WARNING: shift/reduce conflict for Q in state 105 resolved as shift
WARNING: shift/reduce conflict for QQ in state 105 resolved as shift
WARNING: shift/reduce conflict for QX in state 105 resolved as shift
WARNING: shift/reduce conflict for ADDOP in state 105 resolved as shift
WARNING: shift/reduce conflict for ! in state 105 resolved as shift
WARNING: shift/reduce conflict for ~ in state 105 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 105 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 105 resolved as shift
WARNING: shift/reduce conflict for WNOT in state 105 resolved as shift
WARNING: shift/reduce conflict for NAME in state 111 resolved as shift
WARNING: shift/reduce conflict for NAME in state 115 resolved as shift
WARNING: shift/reduce conflict for DEREF in state 126 resolved as shift
WARNING: shift/reduce conflict for ? in state 142 resolved as shift
WARNING: shift/reduce conflict for POWOP in state 142 resolved as shift
WARNING: shift/reduce conflict for MULOP in state 142 resolved as shift
WARNING: shift/reduce conflict for ADDOP in state 142 resolved as shift
WARNING: shift/reduce conflict for SHIFTOP in state 142 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 142 resolved as shift
WARNING: shift/reduce conflict for EQOP in state 142 resolved as shift
WARNING: shift/reduce conflict for BITANDOP in state 142 resolved as shift
WARNING: shift/reduce conflict for BITOROP in state 142 resolved as shift
WARNING: shift/reduce conflict for DOTDOT in state 142 resolved as shift
WARNING: shift/reduce conflict for ANDAND in state 142 resolved as shift
WARNING: shift/reduce conflict for OROR in state 142 resolved as shift
WARNING: shift/reduce conflict for DORDOR in state 142 resolved as shift
WARNING: shift/reduce conflict for MATCHOP in state 142 resolved as shift
WARNING: shift/reduce conflict for WAND in state 142 resolved as shift
WARNING: shift/reduce conflict for WOR in state 142 resolved as shift
WARNING: shift/reduce conflict for WXOR in state 142 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 142 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 142 resolved as shift
WARNING: shift/reduce conflict for DEREF in state 142 resolved as shift
WARNING: shift/reduce conflict for NAME in state 154 resolved as shift
WARNING: shift/reduce conflict for NAME in state 155 resolved as shift
WARNING: shift/reduce conflict for PARANTHESIS_R in state 159 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 160 resolved as shift
WARNING: shift/reduce conflict for DOTDOT in state 180 resolved as shift
WARNING: shift/reduce conflict for ? in state 215 resolved as shift
WARNING: shift/reduce conflict for POWOP in state 215 resolved as shift
WARNING: shift/reduce conflict for MULOP in state 215 resolved as shift
WARNING: shift/reduce conflict for ADDOP in state 215 resolved as shift
WARNING: shift/reduce conflict for SHIFTOP in state 215 resolved as shift
WARNING: shift/reduce conflict for RELOP in state 215 resolved as shift
WARNING: shift/reduce conflict for EQOP in state 215 resolved as shift
WARNING: shift/reduce conflict for BITANDOP in state 215 resolved as shift
WARNING: shift/reduce conflict for BITOROP in state 215 resolved as shift
WARNING: shift/reduce conflict for DOTDOT in state 215 resolved as shift
WARNING: shift/reduce conflict for ANDAND in state 215 resolved as shift
WARNING: shift/reduce conflict for OROR in state 215 resolved as shift
WARNING: shift/reduce conflict for DORDOR in state 215 resolved as shift
WARNING: shift/reduce conflict for MATCHOP in state 215 resolved as shift
WARNING: shift/reduce conflict for WAND in state 215 resolved as shift
WARNING: shift/reduce conflict for WOR in state 215 resolved as shift
WARNING: shift/reduce conflict for WXOR in state 215 resolved as shift
WARNING: shift/reduce conflict for INCREMENT in state 215 resolved as shift
WARNING: shift/reduce conflict for DECREMENT in state 215 resolved as shift
WARNING: shift/reduce conflict for DEREF in state 215 resolved as shift
WARNING: shift/reduce conflict for NAME in state 222 resolved as shift
WARNING: shift/reduce conflict for NAME in state 243 resolved as shift
WARNING: shift/reduce conflict for NAME in state 258 resolved as shift
WARNING: shift/reduce conflict for NAME in state 261 resolved as shift
WARNING: shift/reduce conflict for NAME in state 263 resolved as shift
WARNING: shift/reduce conflict for NAME in state 264 resolved as shift
WARNING: shift/reduce conflict for NAME in state 265 resolved as shift
WARNING: shift/reduce conflict for NAME in state 266 resolved as shift
WARNING: shift/reduce conflict for NAME in state 267 resolved as shift
WARNING: shift/reduce conflict for NAME in state 268 resolved as shift
WARNING: shift/reduce conflict for NAME in state 316 resolved as shift
WARNING: shift/reduce conflict for NAME in state 317 resolved as shift
WARNING: reduce/reduce conflict in state 105 resolved using rule (empty -> <empty>)
WARNING: rejected rule (term -> NAME) in state 105
