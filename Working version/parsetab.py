
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "startleftWORWXORleftWANDrightWNOTleftCOMMAHASH_OPrightASSIGNOPnonassocDOTDOTleftORORDORDORleftANDANDleftBITOROPleftBITANDOPnonassocRELOPleftSHIFTOPleftADDOPleftMULOPleftMATCHOPright!~rightUMINUSrightPOWOPnonassocINCREMENTDECREMENTleftDEREFADDOP ANDAND ASSIGNOP BITANDOP BITOROP BLESS BRACES_LEFT BRACES_RIGHT COMMA COMMENT DECREMENT DEREF DORDOR DOTDOT EQOP HASH_OP INCREMENT MATCHOP MULOP MY NAME NEW NUMBER OROR PACKAGE PARANTHESIS_L PARANTHESIS_R POWOP PRINT Q QQ QX RELOP RETURN SEMI SHIFT SHIFTOP STRING SUB USE WAND WNOT WOR WXORobject_creation : NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMIprint_st : PRINT arg_list SEMIconstructor : SUB NEW BRACES_LEFT constructor_body BRACES_RIGHTarg_list : arg\n                | arg_list COMMA argobj_func_call : NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMIconstructor_body : statement constructor_hash bless_st return_constructorarg : term \n           | emptyconstructor_hash : variable ASSIGNOP BRACES_LEFT hash_statement_list BRACES_RIGHT SEMIstart : not_package\n             | packagehash_statement_list : hash_statement\n                           | hash_statement_list COMMA hash_statementnot_package : bodyhash_statement : NAME HASH_OP SHIFT\n                      | NAME HASH_OP termvar_deref : NAME DEREF BRACES_LEFT NAME BRACES_RIGHTbody : statement_list\n            | emptystatement_list : statement\n                     | statement_list statementbless_st : BLESS PARANTHESIS_L NAME COMMA NAME PARANTHESIS_R SEMIvariable : MY NAME\n          | NAMEreturn_constructor : RETURN NAME SEMItermbinop : term POWOP term\n                | term MULOP term\n                | term ADDOP term\n                | term SHIFTOP term\n                | term RELOP term\n                | term EQOP term\n                | term BITANDOP term\n                | term BITOROP term\n                | term DOTDOT term\n                | term ANDAND term\n                | term OROR term\n                | term DORDOR term\n                | term MATCHOP term\n                | term WAND term\n                | term WOR term\n                | term WXOR termstatement : var_dec\n                 | function_dec\n                 | constructor\n                 | object_creation\n                 | obj_func_call\n                 | print_st\n                 | use_st\n                 | commentpackage : package_dec bodypackage_dec : PACKAGE NAME SEMIuse_st : USE NAME SEMIfunction_dec : SUB NAME BRACES_LEFT body BRACES_RIGHTvar_dec : variable ASSIGNOP SHIFT SEMI\n               | variable ASSIGNOP term SEMIempty : comment : COMMENTtermunop : ADDOP term %prec UMINUS \n               | '!' term\n               | '~' term \n               | term INCREMENT\n               | term DECREMENT\n               | term DEREF\n               | INCREMENT term\n               | DECREMENT term\n               | WNOT termterm : termbinop\n\t       | termunop\n           | PARANTHESIS_L term PARANTHESIS_R\n           | NAME\n           | NUMBER\n           | STRING\n           | var_deref\n           | term '?' term ':' term   \n           | Q BRACES_LEFT NAME BRACES_RIGHT\n           | QQ BRACES_LEFT NAME BRACES_RIGHT\n           | QX BRACES_LEFT NAME BRACES_RIGHT"
    
_lr_action_items = {'PACKAGE':([0,],[8,]),'$end':([0,1,2,3,4,5,6,7,10,11,12,13,14,15,16,17,18,23,25,26,55,62,95,98,99,128,129,146,157,],[-57,0,-11,-12,-15,-57,-19,-20,-21,-43,-44,-45,-46,-47,-48,-49,-50,-58,-51,-22,-52,-2,-53,-55,-56,-54,-3,-6,-1,]),'SUB':([0,5,6,10,11,12,13,14,15,16,17,18,23,26,55,60,61,62,95,98,99,128,129,146,157,],[20,20,20,-21,-43,-44,-45,-46,-47,-48,-49,-50,-58,-22,-52,20,20,-2,-53,-55,-56,-54,-3,-6,-1,]),'NAME':([0,5,6,8,10,11,12,13,14,15,16,17,18,20,21,22,23,24,26,28,29,30,39,47,48,49,50,51,52,55,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,86,87,88,95,97,98,99,102,122,128,129,133,138,146,148,149,150,157,159,161,162,],[9,9,9,27,-21,-43,-44,-45,-46,-47,-48,-49,-50,31,40,53,-58,54,-22,56,57,40,40,40,40,40,40,40,40,-52,9,9,-2,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,123,124,125,-53,40,-55,-56,132,134,-54,-3,40,40,-6,152,153,156,-1,163,156,40,]),'PRINT':([0,5,6,10,11,12,13,14,15,16,17,18,23,26,55,60,61,62,95,98,99,128,129,146,157,],[21,21,21,-21,-43,-44,-45,-46,-47,-48,-49,-50,-58,-22,-52,21,21,-2,-53,-55,-56,-54,-3,-6,-1,]),'USE':([0,5,6,10,11,12,13,14,15,16,17,18,23,26,55,60,61,62,95,98,99,128,129,146,157,],[22,22,22,-21,-43,-44,-45,-46,-47,-48,-49,-50,-58,-22,-52,22,22,-2,-53,-55,-56,-54,-3,-6,-1,]),'COMMENT':([0,5,6,10,11,12,13,14,15,16,17,18,23,26,55,60,61,62,95,98,99,128,129,146,157,],[23,23,23,-21,-43,-44,-45,-46,-47,-48,-49,-50,-58,-22,-52,23,23,-2,-53,-55,-56,-54,-3,-6,-1,]),'MY':([0,5,6,10,11,12,13,14,15,16,17,18,23,26,55,60,61,62,95,98,99,102,128,129,146,157,],[24,24,24,-21,-43,-44,-45,-46,-47,-48,-49,-50,-58,-22,-52,24,24,-2,-53,-55,-56,24,-54,-3,-6,-1,]),'BRACES_RIGHT':([6,7,10,11,12,13,14,15,16,17,18,23,26,37,38,40,41,42,43,60,62,81,82,83,89,90,91,92,93,94,95,98,99,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,128,129,134,135,136,137,143,144,146,147,154,155,157,158,165,166,167,],[-19,-20,-21,-43,-44,-45,-46,-47,-48,-49,-50,-58,-22,-68,-69,-71,-72,-73,-74,-57,-2,-62,-63,-64,-59,-60,-61,-65,-66,-67,-53,-55,-56,128,129,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-70,135,136,137,-54,-3,144,-76,-77,-78,-75,-18,-6,-7,160,-13,-1,-26,-14,-16,-17,]),'ASSIGNOP':([9,19,54,131,132,],[28,30,-24,142,-25,]),'DEREF':([9,35,37,38,40,41,42,43,56,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[29,83,-68,-69,85,-72,-73,-74,96,83,-62,-63,-64,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-70,-76,-77,-78,83,-18,83,]),'NEW':([20,96,],[32,126,]),'PARANTHESIS_L':([21,30,39,47,48,49,50,51,52,57,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,126,133,138,141,162,],[39,39,39,39,39,39,39,39,39,97,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,138,39,39,149,39,]),'NUMBER':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'STRING':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'Q':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'QQ':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'QX':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'SEMI':([21,27,33,34,35,36,37,38,40,41,42,43,53,58,59,63,81,82,83,89,90,91,92,93,94,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,139,143,144,151,152,160,168,],[-57,55,62,-4,-8,-9,-68,-69,-71,-72,-73,-74,95,98,99,-57,-62,-63,-64,-59,-60,-61,-65,-66,-67,-5,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-70,-76,-77,-78,146,-75,-18,157,158,164,169,]),'COMMA':([21,33,34,35,36,37,38,40,41,42,43,63,81,82,83,89,90,91,92,93,94,97,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,135,136,137,138,143,144,145,153,154,155,165,166,167,],[-57,63,-4,-8,-9,-68,-69,-71,-72,-73,-74,-57,-62,-63,-64,-59,-60,-61,-65,-66,-67,-57,-5,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-70,63,-76,-77,-78,-57,-75,-18,63,159,161,-13,-14,-16,-17,]),'ADDOP':([21,30,35,37,38,39,40,41,42,43,47,48,49,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,97,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,133,135,136,137,138,143,144,162,167,],[47,47,67,-68,-69,47,-71,-72,-73,-74,47,47,47,47,47,47,67,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-62,-63,-64,67,-59,-60,-61,-65,-66,67,47,67,-27,-28,-29,67,67,67,67,67,67,67,67,67,-39,67,67,67,-70,47,-76,-77,-78,47,67,-18,47,67,]),'!':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'~':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'INCREMENT':([21,30,35,37,38,39,40,41,42,43,47,48,49,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,97,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,133,135,136,137,138,143,144,162,167,],[50,50,81,-68,-69,50,-71,-72,-73,-74,50,50,50,50,50,50,81,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-62,-63,-64,81,81,81,81,None,None,81,50,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-70,50,-76,-77,-78,50,81,-18,50,81,]),'DECREMENT':([21,30,35,37,38,39,40,41,42,43,47,48,49,50,51,52,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,89,90,91,92,93,94,97,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,133,135,136,137,138,143,144,162,167,],[51,51,82,-68,-69,51,-71,-72,-73,-74,51,51,51,51,51,51,82,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-62,-63,-64,82,82,82,82,None,None,82,51,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-70,51,-76,-77,-78,51,82,-18,51,82,]),'WNOT':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'SHIFT':([30,162,],[58,166,]),'BRACES_LEFT':([31,32,44,45,46,85,142,],[60,61,86,87,88,122,150,]),'PARANTHESIS_R':([34,35,36,37,38,40,41,42,43,63,81,82,83,84,89,90,91,92,93,94,97,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,135,136,137,138,143,144,145,163,],[-4,-8,-9,-68,-69,-71,-72,-73,-74,-57,-62,-63,-64,121,-59,-60,-61,-65,-66,-67,-57,-5,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-70,139,-76,-77,-78,-57,-75,-18,151,168,]),'?':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[64,-68,-69,-71,-72,-73,-74,64,-62,-63,-64,64,-59,-60,-61,-65,-66,-67,64,-27,-28,-29,-30,-31,64,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-70,-76,-77,-78,64,-18,64,]),'POWOP':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[65,-68,-69,-71,-72,-73,-74,65,-62,-63,-64,65,65,65,65,-65,-66,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-70,-76,-77,-78,65,-18,65,]),'MULOP':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[66,-68,-69,-71,-72,-73,-74,66,-62,-63,-64,66,-59,-60,-61,-65,-66,66,66,-27,-28,66,66,66,66,66,66,66,66,66,66,-39,66,66,66,-70,-76,-77,-78,66,-18,66,]),'SHIFTOP':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[68,-68,-69,-71,-72,-73,-74,68,-62,-63,-64,68,-59,-60,-61,-65,-66,68,68,-27,-28,-29,-30,68,68,68,68,68,68,68,68,-39,68,68,68,-70,-76,-77,-78,68,-18,68,]),'RELOP':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[69,-68,-69,-71,-72,-73,-74,69,-62,-63,-64,69,-59,-60,-61,-65,-66,69,69,-27,-28,-29,-30,None,69,69,69,69,69,69,69,-39,69,69,69,-70,-76,-77,-78,69,-18,69,]),'EQOP':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[70,-68,-69,-71,-72,-73,-74,70,-62,-63,-64,70,-59,-60,-61,-65,-66,-67,70,-27,-28,-29,-30,-31,70,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-70,-76,-77,-78,70,-18,70,]),'BITANDOP':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[71,-68,-69,-71,-72,-73,-74,71,-62,-63,-64,71,-59,-60,-61,-65,-66,71,71,-27,-28,-29,-30,-31,71,-33,71,71,71,71,71,-39,71,71,71,-70,-76,-77,-78,71,-18,71,]),'BITOROP':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[72,-68,-69,-71,-72,-73,-74,72,-62,-63,-64,72,-59,-60,-61,-65,-66,72,72,-27,-28,-29,-30,-31,72,-33,-34,72,72,72,72,-39,72,72,72,-70,-76,-77,-78,72,-18,72,]),'DOTDOT':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[73,-68,-69,-71,-72,-73,-74,73,-62,-63,-64,73,-59,-60,-61,-65,-66,73,73,-27,-28,-29,-30,-31,73,-33,-34,None,-36,-37,-38,-39,73,73,73,-70,-76,-77,-78,73,-18,73,]),'ANDAND':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[74,-68,-69,-71,-72,-73,-74,74,-62,-63,-64,74,-59,-60,-61,-65,-66,74,74,-27,-28,-29,-30,-31,74,-33,-34,74,-36,74,74,-39,74,74,74,-70,-76,-77,-78,74,-18,74,]),'OROR':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[75,-68,-69,-71,-72,-73,-74,75,-62,-63,-64,75,-59,-60,-61,-65,-66,75,75,-27,-28,-29,-30,-31,75,-33,-34,75,-36,-37,-38,-39,75,75,75,-70,-76,-77,-78,75,-18,75,]),'DORDOR':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[76,-68,-69,-71,-72,-73,-74,76,-62,-63,-64,76,-59,-60,-61,-65,-66,76,76,-27,-28,-29,-30,-31,76,-33,-34,76,-36,-37,-38,-39,76,76,76,-70,-76,-77,-78,76,-18,76,]),'MATCHOP':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[77,-68,-69,-71,-72,-73,-74,77,-62,-63,-64,77,-59,-60,-61,-65,-66,77,77,-27,77,77,77,77,77,77,77,77,77,77,77,-39,77,77,77,-70,-76,-77,-78,77,-18,77,]),'WAND':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[78,-68,-69,-71,-72,-73,-74,78,-62,-63,-64,78,-59,-60,-61,-65,-66,-67,78,-27,-28,-29,-30,-31,78,-33,-34,-35,-36,-37,-38,-39,-40,78,78,-70,-76,-77,-78,78,-18,78,]),'WOR':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[79,-68,-69,-71,-72,-73,-74,79,-62,-63,-64,79,-59,-60,-61,-65,-66,-67,79,-27,-28,-29,-30,-31,79,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-70,-76,-77,-78,79,-18,79,]),'WXOR':([35,37,38,40,41,42,43,59,81,82,83,84,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,167,],[80,-68,-69,-71,-72,-73,-74,80,-62,-63,-64,80,-59,-60,-61,-65,-66,-67,80,-27,-28,-29,-30,-31,80,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-70,-76,-77,-78,80,-18,80,]),':':([37,38,40,41,42,43,81,82,83,89,90,91,92,93,94,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,135,136,137,143,144,],[-68,-69,-71,-72,-73,-74,-62,-63,-64,-59,-60,-61,-65,-66,-67,133,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-70,-76,-77,-78,-75,-18,]),'BLESS':([130,164,],[141,-10,]),'RETURN':([140,169,],[148,-23,]),'HASH_OP':([156,],[162,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'not_package':([0,],[2,]),'package':([0,],[3,]),'body':([0,5,60,],[4,25,100,]),'package_dec':([0,],[5,]),'statement_list':([0,5,60,],[6,6,6,]),'empty':([0,5,21,60,63,97,138,],[7,7,36,7,36,36,36,]),'statement':([0,5,6,60,61,],[10,10,26,10,102,]),'var_dec':([0,5,6,60,61,],[11,11,11,11,11,]),'function_dec':([0,5,6,60,61,],[12,12,12,12,12,]),'constructor':([0,5,6,60,61,],[13,13,13,13,13,]),'object_creation':([0,5,6,60,61,],[14,14,14,14,14,]),'obj_func_call':([0,5,6,60,61,],[15,15,15,15,15,]),'print_st':([0,5,6,60,61,],[16,16,16,16,16,]),'use_st':([0,5,6,60,61,],[17,17,17,17,17,]),'comment':([0,5,6,60,61,],[18,18,18,18,18,]),'variable':([0,5,6,60,61,102,],[19,19,19,19,19,131,]),'arg_list':([21,97,138,],[33,127,145,]),'arg':([21,63,97,138,],[34,103,34,34,]),'term':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[35,59,84,89,90,91,92,93,94,35,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,35,143,35,167,]),'termbinop':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'termunop':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'var_deref':([21,30,39,47,48,49,50,51,52,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,97,133,138,162,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'constructor_body':([61,],[101,]),'constructor_hash':([102,],[130,]),'bless_st':([130,],[140,]),'return_constructor':([140,],[147,]),'hash_statement_list':([150,],[154,]),'hash_statement':([150,161,],[155,165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('object_creation -> NAME ASSIGNOP NAME DEREF NEW PARANTHESIS_L arg_list PARANTHESIS_R SEMI','object_creation',9,'p_object_creation','parse_object.py',2),
  ('print_st -> PRINT arg_list SEMI','print_st',3,'p_print_st','parse_print.py',2),
  ('constructor -> SUB NEW BRACES_LEFT constructor_body BRACES_RIGHT','constructor',5,'p_constructor','parse_constructor.py',4),
  ('arg_list -> arg','arg_list',1,'p_arg_list','parse_print.py',6),
  ('arg_list -> arg_list COMMA arg','arg_list',3,'p_arg_list','parse_print.py',7),
  ('obj_func_call -> NAME DEREF NAME PARANTHESIS_L arg_list PARANTHESIS_R SEMI','obj_func_call',7,'p_obj_func_call','parse_object.py',9),
  ('constructor_body -> statement constructor_hash bless_st return_constructor','constructor_body',4,'p_constructor_body','parse_constructor.py',11),
  ('arg -> term','arg',1,'p_arg','parse_print.py',14),
  ('arg -> empty','arg',1,'p_arg','parse_print.py',15),
  ('constructor_hash -> variable ASSIGNOP BRACES_LEFT hash_statement_list BRACES_RIGHT SEMI','constructor_hash',6,'p_constructor_hash','parse_constructor.py',15),
  ('start -> not_package','start',1,'p_start','parser.py',17),
  ('start -> package','start',1,'p_start','parser.py',18),
  ('hash_statement_list -> hash_statement','hash_statement_list',1,'p_hash_statement_list','parse_constructor.py',19),
  ('hash_statement_list -> hash_statement_list COMMA hash_statement','hash_statement_list',3,'p_hash_statement_list','parse_constructor.py',20),
  ('not_package -> body','not_package',1,'p_not_package','parser.py',22),
  ('hash_statement -> NAME HASH_OP SHIFT','hash_statement',3,'p_hash_statement','parse_constructor.py',24),
  ('hash_statement -> NAME HASH_OP term','hash_statement',3,'p_hash_statement','parse_constructor.py',25),
  ('var_deref -> NAME DEREF BRACES_LEFT NAME BRACES_RIGHT','var_deref',5,'p_var_deref','parse_print.py',25),
  ('body -> statement_list','body',1,'p_body','parser.py',26),
  ('body -> empty','body',1,'p_body','parser.py',27),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',31),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',32),
  ('bless_st -> BLESS PARANTHESIS_L NAME COMMA NAME PARANTHESIS_R SEMI','bless_st',7,'p_bless_st','parse_constructor.py',32),
  ('variable -> MY NAME','variable',2,'p_variable','parse_print.py',32),
  ('variable -> NAME','variable',1,'p_variable','parse_print.py',33),
  ('return_constructor -> RETURN NAME SEMI','return_constructor',3,'p_return_constructor','parse_constructor.py',35),
  ('termbinop -> term POWOP term','termbinop',3,'p_termbinop','parse_expressions.py',36),
  ('termbinop -> term MULOP term','termbinop',3,'p_termbinop','parse_expressions.py',37),
  ('termbinop -> term ADDOP term','termbinop',3,'p_termbinop','parse_expressions.py',38),
  ('termbinop -> term SHIFTOP term','termbinop',3,'p_termbinop','parse_expressions.py',39),
  ('termbinop -> term RELOP term','termbinop',3,'p_termbinop','parse_expressions.py',40),
  ('termbinop -> term EQOP term','termbinop',3,'p_termbinop','parse_expressions.py',41),
  ('termbinop -> term BITANDOP term','termbinop',3,'p_termbinop','parse_expressions.py',42),
  ('termbinop -> term BITOROP term','termbinop',3,'p_termbinop','parse_expressions.py',43),
  ('termbinop -> term DOTDOT term','termbinop',3,'p_termbinop','parse_expressions.py',44),
  ('termbinop -> term ANDAND term','termbinop',3,'p_termbinop','parse_expressions.py',45),
  ('termbinop -> term OROR term','termbinop',3,'p_termbinop','parse_expressions.py',46),
  ('termbinop -> term DORDOR term','termbinop',3,'p_termbinop','parse_expressions.py',47),
  ('termbinop -> term MATCHOP term','termbinop',3,'p_termbinop','parse_expressions.py',48),
  ('termbinop -> term WAND term','termbinop',3,'p_termbinop','parse_expressions.py',49),
  ('termbinop -> term WOR term','termbinop',3,'p_termbinop','parse_expressions.py',50),
  ('termbinop -> term WXOR term','termbinop',3,'p_termbinop','parse_expressions.py',51),
  ('statement -> var_dec','statement',1,'p_statement','parser.py',46),
  ('statement -> function_dec','statement',1,'p_statement','parser.py',47),
  ('statement -> constructor','statement',1,'p_statement','parser.py',48),
  ('statement -> object_creation','statement',1,'p_statement','parser.py',49),
  ('statement -> obj_func_call','statement',1,'p_statement','parser.py',50),
  ('statement -> print_st','statement',1,'p_statement','parser.py',51),
  ('statement -> use_st','statement',1,'p_statement','parser.py',52),
  ('statement -> comment','statement',1,'p_statement','parser.py',53),
  ('package -> package_dec body','package',2,'p_package','parser.py',58),
  ('package_dec -> PACKAGE NAME SEMI','package_dec',3,'p_package_def','parser.py',63),
  ('use_st -> USE NAME SEMI','use_st',3,'p_use_st','parser.py',69),
  ('function_dec -> SUB NAME BRACES_LEFT body BRACES_RIGHT','function_dec',5,'p_function_dec','parser.py',73),
  ('var_dec -> variable ASSIGNOP SHIFT SEMI','var_dec',4,'p_var_dec','parser.py',81),
  ('var_dec -> variable ASSIGNOP term SEMI','var_dec',4,'p_var_dec','parser.py',82),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',115),
  ('comment -> COMMENT','comment',1,'p_comment','parser.py',119),
  ('termunop -> ADDOP term','termunop',2,'p_termunop','parse_expressions.py',126),
  ('termunop -> ! term','termunop',2,'p_termunop','parse_expressions.py',127),
  ('termunop -> ~ term','termunop',2,'p_termunop','parse_expressions.py',128),
  ('termunop -> term INCREMENT','termunop',2,'p_termunop','parse_expressions.py',129),
  ('termunop -> term DECREMENT','termunop',2,'p_termunop','parse_expressions.py',130),
  ('termunop -> term DEREF','termunop',2,'p_termunop','parse_expressions.py',131),
  ('termunop -> INCREMENT term','termunop',2,'p_termunop','parse_expressions.py',132),
  ('termunop -> DECREMENT term','termunop',2,'p_termunop','parse_expressions.py',133),
  ('termunop -> WNOT term','termunop',2,'p_termunop','parse_expressions.py',134),
  ('term -> termbinop','term',1,'p_term','parse_expressions.py',170),
  ('term -> termunop','term',1,'p_term','parse_expressions.py',171),
  ('term -> PARANTHESIS_L term PARANTHESIS_R','term',3,'p_term','parse_expressions.py',172),
  ('term -> NAME','term',1,'p_term','parse_expressions.py',173),
  ('term -> NUMBER','term',1,'p_term','parse_expressions.py',174),
  ('term -> STRING','term',1,'p_term','parse_expressions.py',175),
  ('term -> var_deref','term',1,'p_term','parse_expressions.py',176),
  ('term -> term ? term : term','term',5,'p_term','parse_expressions.py',177),
  ('term -> Q BRACES_LEFT NAME BRACES_RIGHT','term',4,'p_term','parse_expressions.py',178),
  ('term -> QQ BRACES_LEFT NAME BRACES_RIGHT','term',4,'p_term','parse_expressions.py',179),
  ('term -> QX BRACES_LEFT NAME BRACES_RIGHT','term',4,'p_term','parse_expressions.py',180),
]
