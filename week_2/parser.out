Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    DEREF
    HASH_OP
    NEW
    NUMBER
    PARANTHESIS_L
    PARANTHESIS_R
    PRINT
    RETURN
    STRING

Grammar

Rule 0     S' -> package_dec
Rule 1     body -> statement_list
Rule 2     body -> empty
Rule 3     statement_list -> statement
Rule 4     statement_list -> statement_list statement
Rule 5     statement -> var_dec
Rule 6     statement -> function_dec
Rule 7     statement -> comment
Rule 8     package_dec -> PACKAGE NAME SEMI body
Rule 9     function_dec -> SUB NAME braces_left body braces_right
Rule 10    var_dec -> MY NAME EQUAL SHIFT SEMI
Rule 11    comment -> COMMENT
Rule 12    braces_left -> BRACES_LEFT
Rule 13    braces_right -> BRACES_RIGHT
Rule 14    empty -> <empty>

Terminals, with rules where they appear

BRACES_LEFT          : 12
BRACES_RIGHT         : 13
COMMA                : 
COMMENT              : 11
DEREF                : 
EQUAL                : 10
HASH_OP              : 
MY                   : 10
NAME                 : 8 9 10
NEW                  : 
NUMBER               : 
PACKAGE              : 8
PARANTHESIS_L        : 
PARANTHESIS_R        : 
PRINT                : 
RETURN               : 
SEMI                 : 8 10
SHIFT                : 10
STRING               : 
SUB                  : 9
error                : 

Nonterminals, with rules where they appear

body                 : 8 9
braces_left          : 9
braces_right         : 9
comment              : 7
empty                : 2
function_dec         : 6
package_dec          : 0
statement            : 3 4
statement_list       : 1 4
var_dec              : 5

Parsing method: LALR

state 0

    (0) S' -> . package_dec
    (8) package_dec -> . PACKAGE NAME SEMI body

    PACKAGE         shift and go to state 2

    package_dec                    shift and go to state 1

state 1

    (0) S' -> package_dec .



state 2

    (8) package_dec -> PACKAGE . NAME SEMI body

    NAME            shift and go to state 3


state 3

    (8) package_dec -> PACKAGE NAME . SEMI body

    SEMI            shift and go to state 4


state 4

    (8) package_dec -> PACKAGE NAME SEMI . body
    (1) body -> . statement_list
    (2) body -> . empty
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (14) empty -> .
    (5) statement -> . var_dec
    (6) statement -> . function_dec
    (7) statement -> . comment
    (10) var_dec -> . MY NAME EQUAL SHIFT SEMI
    (9) function_dec -> . SUB NAME braces_left body braces_right
    (11) comment -> . COMMENT

    $end            reduce using rule 14 (empty -> .)
    MY              shift and go to state 12
    SUB             shift and go to state 13
    COMMENT         shift and go to state 14

    body                           shift and go to state 5
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 8
    var_dec                        shift and go to state 9
    function_dec                   shift and go to state 10
    comment                        shift and go to state 11

state 5

    (8) package_dec -> PACKAGE NAME SEMI body .

    $end            reduce using rule 8 (package_dec -> PACKAGE NAME SEMI body .)


state 6

    (1) body -> statement_list .
    (4) statement_list -> statement_list . statement
    (5) statement -> . var_dec
    (6) statement -> . function_dec
    (7) statement -> . comment
    (10) var_dec -> . MY NAME EQUAL SHIFT SEMI
    (9) function_dec -> . SUB NAME braces_left body braces_right
    (11) comment -> . COMMENT

    $end            reduce using rule 1 (body -> statement_list .)
    BRACES_RIGHT    reduce using rule 1 (body -> statement_list .)
    MY              shift and go to state 12
    SUB             shift and go to state 13
    COMMENT         shift and go to state 14

    statement                      shift and go to state 15
    var_dec                        shift and go to state 9
    function_dec                   shift and go to state 10
    comment                        shift and go to state 11

state 7

    (2) body -> empty .

    $end            reduce using rule 2 (body -> empty .)
    BRACES_RIGHT    reduce using rule 2 (body -> empty .)


state 8

    (3) statement_list -> statement .

    MY              reduce using rule 3 (statement_list -> statement .)
    SUB             reduce using rule 3 (statement_list -> statement .)
    COMMENT         reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    BRACES_RIGHT    reduce using rule 3 (statement_list -> statement .)


state 9

    (5) statement -> var_dec .

    MY              reduce using rule 5 (statement -> var_dec .)
    SUB             reduce using rule 5 (statement -> var_dec .)
    COMMENT         reduce using rule 5 (statement -> var_dec .)
    $end            reduce using rule 5 (statement -> var_dec .)
    BRACES_RIGHT    reduce using rule 5 (statement -> var_dec .)


state 10

    (6) statement -> function_dec .

    MY              reduce using rule 6 (statement -> function_dec .)
    SUB             reduce using rule 6 (statement -> function_dec .)
    COMMENT         reduce using rule 6 (statement -> function_dec .)
    $end            reduce using rule 6 (statement -> function_dec .)
    BRACES_RIGHT    reduce using rule 6 (statement -> function_dec .)


state 11

    (7) statement -> comment .

    MY              reduce using rule 7 (statement -> comment .)
    SUB             reduce using rule 7 (statement -> comment .)
    COMMENT         reduce using rule 7 (statement -> comment .)
    $end            reduce using rule 7 (statement -> comment .)
    BRACES_RIGHT    reduce using rule 7 (statement -> comment .)


state 12

    (10) var_dec -> MY . NAME EQUAL SHIFT SEMI

    NAME            shift and go to state 16


state 13

    (9) function_dec -> SUB . NAME braces_left body braces_right

    NAME            shift and go to state 17


state 14

    (11) comment -> COMMENT .

    MY              reduce using rule 11 (comment -> COMMENT .)
    SUB             reduce using rule 11 (comment -> COMMENT .)
    COMMENT         reduce using rule 11 (comment -> COMMENT .)
    $end            reduce using rule 11 (comment -> COMMENT .)
    BRACES_RIGHT    reduce using rule 11 (comment -> COMMENT .)


state 15

    (4) statement_list -> statement_list statement .

    MY              reduce using rule 4 (statement_list -> statement_list statement .)
    SUB             reduce using rule 4 (statement_list -> statement_list statement .)
    COMMENT         reduce using rule 4 (statement_list -> statement_list statement .)
    $end            reduce using rule 4 (statement_list -> statement_list statement .)
    BRACES_RIGHT    reduce using rule 4 (statement_list -> statement_list statement .)


state 16

    (10) var_dec -> MY NAME . EQUAL SHIFT SEMI

    EQUAL           shift and go to state 18


state 17

    (9) function_dec -> SUB NAME . braces_left body braces_right
    (12) braces_left -> . BRACES_LEFT

    BRACES_LEFT     shift and go to state 20

    braces_left                    shift and go to state 19

state 18

    (10) var_dec -> MY NAME EQUAL . SHIFT SEMI

    SHIFT           shift and go to state 21


state 19

    (9) function_dec -> SUB NAME braces_left . body braces_right
    (1) body -> . statement_list
    (2) body -> . empty
    (3) statement_list -> . statement
    (4) statement_list -> . statement_list statement
    (14) empty -> .
    (5) statement -> . var_dec
    (6) statement -> . function_dec
    (7) statement -> . comment
    (10) var_dec -> . MY NAME EQUAL SHIFT SEMI
    (9) function_dec -> . SUB NAME braces_left body braces_right
    (11) comment -> . COMMENT

    BRACES_RIGHT    reduce using rule 14 (empty -> .)
    MY              shift and go to state 12
    SUB             shift and go to state 13
    COMMENT         shift and go to state 14

    body                           shift and go to state 22
    statement_list                 shift and go to state 6
    empty                          shift and go to state 7
    statement                      shift and go to state 8
    var_dec                        shift and go to state 9
    function_dec                   shift and go to state 10
    comment                        shift and go to state 11

state 20

    (12) braces_left -> BRACES_LEFT .

    MY              reduce using rule 12 (braces_left -> BRACES_LEFT .)
    SUB             reduce using rule 12 (braces_left -> BRACES_LEFT .)
    COMMENT         reduce using rule 12 (braces_left -> BRACES_LEFT .)
    BRACES_RIGHT    reduce using rule 12 (braces_left -> BRACES_LEFT .)


state 21

    (10) var_dec -> MY NAME EQUAL SHIFT . SEMI

    SEMI            shift and go to state 23


state 22

    (9) function_dec -> SUB NAME braces_left body . braces_right
    (13) braces_right -> . BRACES_RIGHT

    BRACES_RIGHT    shift and go to state 25

    braces_right                   shift and go to state 24

state 23

    (10) var_dec -> MY NAME EQUAL SHIFT SEMI .

    MY              reduce using rule 10 (var_dec -> MY NAME EQUAL SHIFT SEMI .)
    SUB             reduce using rule 10 (var_dec -> MY NAME EQUAL SHIFT SEMI .)
    COMMENT         reduce using rule 10 (var_dec -> MY NAME EQUAL SHIFT SEMI .)
    $end            reduce using rule 10 (var_dec -> MY NAME EQUAL SHIFT SEMI .)
    BRACES_RIGHT    reduce using rule 10 (var_dec -> MY NAME EQUAL SHIFT SEMI .)


state 24

    (9) function_dec -> SUB NAME braces_left body braces_right .

    MY              reduce using rule 9 (function_dec -> SUB NAME braces_left body braces_right .)
    SUB             reduce using rule 9 (function_dec -> SUB NAME braces_left body braces_right .)
    COMMENT         reduce using rule 9 (function_dec -> SUB NAME braces_left body braces_right .)
    $end            reduce using rule 9 (function_dec -> SUB NAME braces_left body braces_right .)
    BRACES_RIGHT    reduce using rule 9 (function_dec -> SUB NAME braces_left body braces_right .)


state 25

    (13) braces_right -> BRACES_RIGHT .

    MY              reduce using rule 13 (braces_right -> BRACES_RIGHT .)
    SUB             reduce using rule 13 (braces_right -> BRACES_RIGHT .)
    COMMENT         reduce using rule 13 (braces_right -> BRACES_RIGHT .)
    $end            reduce using rule 13 (braces_right -> BRACES_RIGHT .)
    BRACES_RIGHT    reduce using rule 13 (braces_right -> BRACES_RIGHT .)

