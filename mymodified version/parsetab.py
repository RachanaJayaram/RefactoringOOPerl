
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALB ARB COMMA COMMENT EQUALS KEYWORD LB LFB MY NEW NUMBER OPER PACKAGE RB RETURN RFB SEMI SHIFT STRING SUB VARIABLE newlp_module : package_dec\n                | body\n                | emptybody : statementlist\n            | emptystatementlist : statement\n                    | statementlist statementstatement : var_dec\n                | function_call\n                | output\n                | comment\n                | cond_statpackage_dec : PACKAGE KEYWORD SEMI upind body lowind NUMBER SEMIupind :lowind :output : KEYWORD out SEMI out : VARIABLE\n            | STRING\n            | out COMMA out function_call : KEYWORD LB argument RB SEMIargument : VARIABLE\n                | STRING\n                | argument COMMA argument\n                | emptyvar_dec : VARIABLE EQUALS exp SEMI\n                | VARIABLE EQUALS input SEMIexp : NUMBER\n            | VARIABLE\n            | STRING\n            | exp OPER expinput : ALB KEYWORD ARBcomment : COMMENTcond_stat : KEYWORD LB condition RB block\n                    | KEYWORD LB for_cond RB l_braces body r_bracesfor_cond : VARIABLE EQUALS exp SEMI VARIABLE sign exp SEMI incrementincrement : VARIABLE OPER OPER\n                    | VARIABLE sign expblock : l_braces body r_bracesl_braces : LFBr_braces : RFBcondition : VARIABLE sign expsign : EQUALS\n            | OPER\n            | ALB\n            | ARB\n            | sign signempty :'
    
_lr_action_items = {'PACKAGE':([0,],[5,]),'$end':([0,1,2,3,4,7,8,9,10,11,12,13,15,21,30,49,51,55,58,73,74,75,77,],[-47,0,-1,-2,-3,-4,-6,-8,-9,-10,-11,-12,-32,-7,-16,-25,-26,-20,-33,-38,-40,-34,-13,]),'VARIABLE':([0,6,7,8,9,10,11,12,13,15,17,21,22,23,30,31,38,40,43,44,45,46,47,49,50,51,55,58,59,60,61,62,64,71,73,74,75,78,80,83,84,],[14,19,14,-6,-8,-9,-10,-11,-12,-32,27,-7,32,-14,-16,19,14,57,32,32,-43,-44,-45,-25,32,-26,-20,-33,14,-39,14,-46,-42,76,-38,-40,-34,32,81,-43,32,]),'KEYWORD':([0,5,7,8,9,10,11,12,13,15,21,23,30,37,38,49,51,55,58,59,60,61,73,74,75,],[6,16,6,-6,-8,-9,-10,-11,-12,-32,-7,-14,-16,52,6,-25,-26,-20,-33,6,-39,6,-38,-40,-34,]),'COMMENT':([0,7,8,9,10,11,12,13,15,21,23,30,38,49,51,55,58,59,60,61,73,74,75,],[15,15,-6,-8,-9,-10,-11,-12,-32,-7,-14,-16,15,-25,-26,-20,-33,15,-39,15,-38,-40,-34,]),'LB':([6,],[17,]),'STRING':([6,17,22,31,40,43,44,45,46,47,50,62,64,78,83,84,],[20,28,36,20,28,36,36,-43,-44,-45,36,-46,-42,36,-43,36,]),'NUMBER':([7,8,9,10,11,12,13,15,21,22,23,30,38,43,44,45,46,47,49,50,51,53,54,55,58,62,64,68,73,74,75,78,83,84,],[-4,-6,-8,-9,-10,-11,-12,-32,-7,35,-14,-16,-47,35,35,-43,-44,-45,-25,35,-26,-15,-5,-20,-33,-46,-42,72,-38,-40,-34,35,-43,35,]),'RFB':([7,8,9,10,11,12,13,15,21,30,49,51,54,55,58,59,60,61,69,70,73,74,75,],[-4,-6,-8,-9,-10,-11,-12,-32,-7,-16,-25,-26,-5,-20,-33,-47,-39,-47,74,74,-38,-40,-34,]),'EQUALS':([14,27,43,44,45,46,47,62,64,76,78,81,83,84,],[22,44,64,-42,-43,-44,-45,64,-42,64,64,64,-43,64,]),'SEMI':([16,18,19,20,32,33,34,35,36,39,48,65,66,67,72,79,],[23,30,-17,-18,-28,49,51,-27,-29,55,-19,71,-30,-31,77,80,]),'RB':([17,24,25,26,27,28,29,32,35,36,40,56,57,63,66,82,85,86,],[-47,39,41,42,-21,-22,-24,-28,-27,-29,-47,-23,-21,-41,-30,-35,-36,-37,]),'COMMA':([17,18,19,20,24,27,28,29,40,48,56,57,],[-47,31,-17,-18,40,-21,-22,-24,-47,31,40,-21,]),'ALB':([22,27,43,44,45,46,47,62,64,76,78,81,83,84,],[37,46,46,-42,-43,-44,-45,46,-42,46,46,46,-43,46,]),'OPER':([27,32,33,35,36,43,44,45,46,47,62,63,64,65,66,76,78,79,81,83,84,86,],[45,-28,50,-27,-29,45,-42,-43,-44,-45,45,50,-42,50,50,45,45,50,83,85,45,50,]),'ARB':([27,43,44,45,46,47,52,62,64,76,78,81,83,84,],[47,47,-42,-43,-44,-45,67,47,-42,47,47,47,-43,47,]),'LFB':([41,42,],[60,60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'p_module':([0,],[1,]),'package_dec':([0,],[2,]),'body':([0,38,59,61,],[3,53,69,70,]),'empty':([0,17,38,40,59,61,],[4,29,54,29,54,54,]),'statementlist':([0,38,59,61,],[7,7,7,7,]),'statement':([0,7,38,59,61,],[8,21,8,8,8,]),'var_dec':([0,7,38,59,61,],[9,9,9,9,9,]),'function_call':([0,7,38,59,61,],[10,10,10,10,10,]),'output':([0,7,38,59,61,],[11,11,11,11,11,]),'comment':([0,7,38,59,61,],[12,12,12,12,12,]),'cond_stat':([0,7,38,59,61,],[13,13,13,13,13,]),'out':([6,31,],[18,48,]),'argument':([17,40,],[24,56,]),'condition':([17,],[25,]),'for_cond':([17,],[26,]),'exp':([22,43,44,50,78,84,],[33,63,65,66,79,86,]),'input':([22,],[34,]),'upind':([23,],[38,]),'sign':([27,43,62,76,78,81,84,],[43,62,62,78,62,84,62,]),'block':([41,],[58,]),'l_braces':([41,42,],[59,61,]),'lowind':([53,],[68,]),'r_braces':([69,70,],[73,75,]),'increment':([80,],[82,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> p_module","S'",1,None,None,None),
  ('p_module -> package_dec','p_module',1,'p_module','parsing.py',8),
  ('p_module -> body','p_module',1,'p_module','parsing.py',9),
  ('p_module -> empty','p_module',1,'p_module','parsing.py',10),
  ('body -> statementlist','body',1,'p_body','parsing.py',17),
  ('body -> empty','body',1,'p_body','parsing.py',18),
  ('statementlist -> statement','statementlist',1,'p_statementlist','parsing.py',25),
  ('statementlist -> statementlist statement','statementlist',2,'p_statementlist','parsing.py',26),
  ('statement -> var_dec','statement',1,'p_statement','parsing.py',33),
  ('statement -> function_call','statement',1,'p_statement','parsing.py',34),
  ('statement -> output','statement',1,'p_statement','parsing.py',35),
  ('statement -> comment','statement',1,'p_statement','parsing.py',36),
  ('statement -> cond_stat','statement',1,'p_statement','parsing.py',37),
  ('package_dec -> PACKAGE KEYWORD SEMI upind body lowind NUMBER SEMI','package_dec',8,'p_package_dec','parsing.py',43),
  ('upind -> <empty>','upind',0,'p_upind','parsing.py',49),
  ('lowind -> <empty>','lowind',0,'p_lowind','parsing.py',56),
  ('output -> KEYWORD out SEMI','output',3,'p_output','parsing.py',63),
  ('out -> VARIABLE','out',1,'p_out','parsing.py',70),
  ('out -> STRING','out',1,'p_out','parsing.py',71),
  ('out -> out COMMA out','out',3,'p_out','parsing.py',72),
  ('function_call -> KEYWORD LB argument RB SEMI','function_call',5,'p_function_call','parsing.py',79),
  ('argument -> VARIABLE','argument',1,'p_argument','parsing.py',86),
  ('argument -> STRING','argument',1,'p_argument','parsing.py',87),
  ('argument -> argument COMMA argument','argument',3,'p_argument','parsing.py',88),
  ('argument -> empty','argument',1,'p_argument','parsing.py',89),
  ('var_dec -> VARIABLE EQUALS exp SEMI','var_dec',4,'p_var_dec','parsing.py',96),
  ('var_dec -> VARIABLE EQUALS input SEMI','var_dec',4,'p_var_dec','parsing.py',97),
  ('exp -> NUMBER','exp',1,'p_exp','parsing.py',104),
  ('exp -> VARIABLE','exp',1,'p_exp','parsing.py',105),
  ('exp -> STRING','exp',1,'p_exp','parsing.py',106),
  ('exp -> exp OPER exp','exp',3,'p_exp','parsing.py',107),
  ('input -> ALB KEYWORD ARB','input',3,'p_input','parsing.py',117),
  ('comment -> COMMENT','comment',1,'p_comment','parsing.py',124),
  ('cond_stat -> KEYWORD LB condition RB block','cond_stat',5,'p_cond_stat','parsing.py',131),
  ('cond_stat -> KEYWORD LB for_cond RB l_braces body r_braces','cond_stat',7,'p_cond_stat','parsing.py',132),
  ('for_cond -> VARIABLE EQUALS exp SEMI VARIABLE sign exp SEMI increment','for_cond',9,'p_for_cond','parsing.py',139),
  ('increment -> VARIABLE OPER OPER','increment',3,'p_increment','parsing.py',148),
  ('increment -> VARIABLE sign exp','increment',3,'p_increment','parsing.py',149),
  ('block -> l_braces body r_braces','block',3,'p_block','parsing.py',159),
  ('l_braces -> LFB','l_braces',1,'p_l_braces','parsing.py',165),
  ('r_braces -> RFB','r_braces',1,'p_r_braces','parsing.py',172),
  ('condition -> VARIABLE sign exp','condition',3,'p_condition','parsing.py',179),
  ('sign -> EQUALS','sign',1,'p_sign','parsing.py',186),
  ('sign -> OPER','sign',1,'p_sign','parsing.py',187),
  ('sign -> ALB','sign',1,'p_sign','parsing.py',188),
  ('sign -> ARB','sign',1,'p_sign','parsing.py',189),
  ('sign -> sign sign','sign',2,'p_sign','parsing.py',190),
  ('empty -> <empty>','empty',0,'p_empty','parsing.py',207),
]
