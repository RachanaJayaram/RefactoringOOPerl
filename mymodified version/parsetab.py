
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALB ARB COMMA COMMENT EQUALS KEYWORD LB LFB NUMBER OPER RB RFB SEMI STRING VARIABLE newlbody : statementlist\n            | emptystatementlist : statement\n                    | statementlist statementstatement : var_dec\n                | function_call\n                | output\n                | comment\n                | cond_statoutput : KEYWORD out SEMI out : VARIABLE\n            | STRING\n            | out COMMA out function_call : KEYWORD LB argument RB SEMIargument : VARIABLE\n                | STRING\n                | argument COMMA argument\n                | emptyvar_dec : VARIABLE EQUALS exp SEMI\n                | VARIABLE EQUALS input SEMIexp : NUMBER\n            | VARIABLE\n            | STRING\n            | exp OPER expinput : ALB KEYWORD ARBcomment : COMMENTcond_stat : KEYWORD LB condition RB block\n                    | KEYWORD LB for_cond RB l_braces body r_bracesfor_cond : VARIABLE EQUALS exp SEMI VARIABLE sign exp SEMI incrementincrement : VARIABLE OPER OPER\n                    | VARIABLE sign expblock : l_braces body r_bracesl_braces : LFBr_braces : RFBcondition : VARIABLE sign expsign : EQUALS\n            | OPER\n            | ALB\n            | ARB\n            | sign signempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,12,13,31,33,35,49,52,63,64,65,],[-41,0,-1,-2,-3,-5,-6,-7,-8,-9,-26,-4,-10,-19,-20,-14,-27,-32,-34,-28,]),'VARIABLE':([0,2,4,5,6,7,8,9,11,12,13,14,15,31,32,33,34,35,38,41,42,43,44,45,49,52,53,54,55,56,58,62,63,64,65,67,69,72,73,],[10,10,-3,-5,-6,-7,-8,-9,17,-26,-4,19,28,-10,17,-19,19,-20,51,19,19,-37,-38,-39,-14,-27,10,-33,10,-40,-36,66,-32,-34,-28,19,70,-37,19,]),'KEYWORD':([0,2,4,5,6,7,8,9,12,13,24,31,33,35,49,52,53,54,55,63,64,65,],[11,11,-3,-5,-6,-7,-8,-9,-26,-4,36,-10,-19,-20,-14,-27,11,-33,11,-32,-34,-28,]),'COMMENT':([0,2,4,5,6,7,8,9,12,13,31,33,35,49,52,53,54,55,63,64,65,],[12,12,-3,-5,-6,-7,-8,-9,-26,-4,-10,-19,-20,-14,-27,12,-33,12,-32,-34,-28,]),'RFB':([2,3,4,5,6,7,8,9,12,13,31,33,35,49,52,53,54,55,60,61,63,64,65,],[-1,-2,-3,-5,-6,-7,-8,-9,-26,-4,-10,-19,-20,-14,-27,-41,-33,-41,64,64,-32,-34,-28,]),'EQUALS':([10,28,41,42,43,44,45,56,58,66,67,70,72,73,],[14,42,58,-36,-37,-38,-39,58,-36,58,58,58,-37,58,]),'LB':([11,],[15,]),'STRING':([11,14,15,32,34,38,41,42,43,44,45,56,58,67,72,73,],[18,23,29,18,23,29,23,23,-37,-38,-39,-40,-36,23,-37,23,]),'NUMBER':([14,34,41,42,43,44,45,56,58,67,72,73,],[22,22,22,22,-37,-38,-39,-40,-36,22,-37,22,]),'ALB':([14,28,41,42,43,44,45,56,58,66,67,70,72,73,],[24,44,44,-36,-37,-38,-39,44,-36,44,44,44,-37,44,]),'RB':([15,19,22,23,25,26,27,28,29,30,38,47,50,51,57,71,74,75,],[-41,-22,-21,-23,37,39,40,-15,-16,-18,-41,-24,-17,-15,-35,-29,-30,-31,]),'COMMA':([15,16,17,18,25,28,29,30,38,46,50,51,],[-41,32,-11,-12,38,-15,-16,-18,-41,32,38,-15,]),'SEMI':([16,17,18,19,20,21,22,23,37,46,47,48,59,68,],[31,-11,-12,-22,33,35,-21,-23,49,-13,-24,-25,62,69,]),'OPER':([19,20,22,23,28,41,42,43,44,45,47,56,57,58,59,66,67,68,70,72,73,75,],[-22,34,-21,-23,43,43,-36,-37,-38,-39,34,43,34,-36,34,43,43,34,72,74,43,34,]),'ARB':([28,36,41,42,43,44,45,56,58,66,67,70,72,73,],[45,48,45,-36,-37,-38,-39,45,-36,45,45,45,-37,45,]),'LFB':([39,40,],[54,54,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,53,55,],[1,60,61,]),'statementlist':([0,53,55,],[2,2,2,]),'empty':([0,15,38,53,55,],[3,30,30,3,3,]),'statement':([0,2,53,55,],[4,13,4,4,]),'var_dec':([0,2,53,55,],[5,5,5,5,]),'function_call':([0,2,53,55,],[6,6,6,6,]),'output':([0,2,53,55,],[7,7,7,7,]),'comment':([0,2,53,55,],[8,8,8,8,]),'cond_stat':([0,2,53,55,],[9,9,9,9,]),'out':([11,32,],[16,46,]),'exp':([14,34,41,42,67,73,],[20,47,57,59,68,75,]),'input':([14,],[21,]),'argument':([15,38,],[25,50,]),'condition':([15,],[26,]),'for_cond':([15,],[27,]),'sign':([28,41,56,66,67,70,73,],[41,56,56,67,56,73,56,]),'block':([39,],[52,]),'l_braces':([39,40,],[53,55,]),'r_braces':([60,61,],[63,65,]),'increment':([69,],[71,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> statementlist','body',1,'p_body','parsing.py',10),
  ('body -> empty','body',1,'p_body','parsing.py',11),
  ('statementlist -> statement','statementlist',1,'p_statementlist','parsing.py',18),
  ('statementlist -> statementlist statement','statementlist',2,'p_statementlist','parsing.py',19),
  ('statement -> var_dec','statement',1,'p_statement','parsing.py',26),
  ('statement -> function_call','statement',1,'p_statement','parsing.py',27),
  ('statement -> output','statement',1,'p_statement','parsing.py',28),
  ('statement -> comment','statement',1,'p_statement','parsing.py',29),
  ('statement -> cond_stat','statement',1,'p_statement','parsing.py',30),
  ('output -> KEYWORD out SEMI','output',3,'p_output','parsing.py',36),
  ('out -> VARIABLE','out',1,'p_out','parsing.py',43),
  ('out -> STRING','out',1,'p_out','parsing.py',44),
  ('out -> out COMMA out','out',3,'p_out','parsing.py',45),
  ('function_call -> KEYWORD LB argument RB SEMI','function_call',5,'p_function_call','parsing.py',52),
  ('argument -> VARIABLE','argument',1,'p_argument','parsing.py',59),
  ('argument -> STRING','argument',1,'p_argument','parsing.py',60),
  ('argument -> argument COMMA argument','argument',3,'p_argument','parsing.py',61),
  ('argument -> empty','argument',1,'p_argument','parsing.py',62),
  ('var_dec -> VARIABLE EQUALS exp SEMI','var_dec',4,'p_var_dec','parsing.py',69),
  ('var_dec -> VARIABLE EQUALS input SEMI','var_dec',4,'p_var_dec','parsing.py',70),
  ('exp -> NUMBER','exp',1,'p_exp','parsing.py',77),
  ('exp -> VARIABLE','exp',1,'p_exp','parsing.py',78),
  ('exp -> STRING','exp',1,'p_exp','parsing.py',79),
  ('exp -> exp OPER exp','exp',3,'p_exp','parsing.py',80),
  ('input -> ALB KEYWORD ARB','input',3,'p_input','parsing.py',90),
  ('comment -> COMMENT','comment',1,'p_comment','parsing.py',97),
  ('cond_stat -> KEYWORD LB condition RB block','cond_stat',5,'p_cond_stat','parsing.py',104),
  ('cond_stat -> KEYWORD LB for_cond RB l_braces body r_braces','cond_stat',7,'p_cond_stat','parsing.py',105),
  ('for_cond -> VARIABLE EQUALS exp SEMI VARIABLE sign exp SEMI increment','for_cond',9,'p_for_cond','parsing.py',112),
  ('increment -> VARIABLE OPER OPER','increment',3,'p_increment','parsing.py',121),
  ('increment -> VARIABLE sign exp','increment',3,'p_increment','parsing.py',122),
  ('block -> l_braces body r_braces','block',3,'p_block','parsing.py',132),
  ('l_braces -> LFB','l_braces',1,'p_l_braces','parsing.py',138),
  ('r_braces -> RFB','r_braces',1,'p_r_braces','parsing.py',145),
  ('condition -> VARIABLE sign exp','condition',3,'p_condition','parsing.py',152),
  ('sign -> EQUALS','sign',1,'p_sign','parsing.py',159),
  ('sign -> OPER','sign',1,'p_sign','parsing.py',160),
  ('sign -> ALB','sign',1,'p_sign','parsing.py',161),
  ('sign -> ARB','sign',1,'p_sign','parsing.py',162),
  ('sign -> sign sign','sign',2,'p_sign','parsing.py',163),
  ('empty -> <empty>','empty',0,'p_empty','parsing.py',180),
]
