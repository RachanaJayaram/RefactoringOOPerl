
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALB ARB ARRAY BLESS COMMA COMMENT EQUALS HASH HASH_OP KEYWORD LB LFB MY NEW NUMBER OPER PACKAGE RB RETURN RFB SCALAR SEMI SHIFT STRING SUB newlbody : statementlist\n            | emptystatementlist : statement\n                    | statementlist statementstatement : var_dec\n                | function_call\n                | output\n                | comment\n                | cond_stat\n                | package_dec\n                | cons_dec\n                | function_def\n                | bless_st\n                | return_stpackage_dec : PACKAGE KEYWORD SEMI upind body lowind NUMBER SEMIcons_dec : SUB NEW  set_cons blockset_cons : bless_st : BLESS LB argument RB SEMIupind :lowind :function_def : SUB KEYWORD blockoutput : KEYWORD out SEMI out : variable\n            | STRING\n            | out COMMA out function_call : KEYWORD LB argument RB SEMIargument : variable\n                | STRING\n                | NUMBER\n                | SHIFT\n                | argument COMMA argument\n                | argument HASH_OP argument\n                | emptyvar_dec : scalar_var EQUALS exp SEMI\n                | variable EQUALS input SEMI\n                | arr_var EQUALS arr_exp SEMI\n                | hash_var EQUALS hash_exp SEMIvariable : scalar_var\n                | arr_var\n                | hash_varscalar_var : MY SCALAR\n                | SCALARarr_var : MY ARRAY\n                | ARRAYhash_var : MY HASH\n                | HASHreturn_st : RETURN exp SEMIexp : NUMBER\n            | STRING\n            | variable\n            | SHIFT\n            | exp OPER exparr_exp :  LB argument RBhash_exp : first_hash\n                | second_hashfirst_hash : LB argument RBsecond_hash : LFB argument RFBinput : ALB KEYWORD ARBcomment : COMMENTcond_stat : KEYWORD LB condition RB block\n                    | KEYWORD LB for_cond RB blockfor_cond : variable EQUALS exp SEMI variable sign exp SEMI incrementincrement : variable OPER OPER\n                    | variable sign expblock : l_braces body r_bracesl_braces : LFBr_braces : RFBcondition : variable sign expsign : EQUALS\n            | OPER\n            | ALB\n            | ARB\n            | sign signempty :'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,29,71,75,80,82,83,85,87,102,110,113,114,120,121,122,128,],[-74,0,-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-4,-22,-21,-47,-34,-35,-36,-37,-16,-26,-60,-61,-65,-67,-18,-15,]),'KEYWORD':([0,2,4,5,6,7,8,9,10,11,12,13,14,20,21,22,29,55,71,73,75,76,77,80,82,83,85,87,101,102,110,113,114,120,121,122,128,],[19,19,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,41,43,-4,84,-22,-19,-21,19,-66,-47,-34,-35,-36,-37,19,-16,-26,-60,-61,-65,-67,-18,-15,]),'COMMENT':([0,2,4,5,6,7,8,9,10,11,12,13,14,20,29,71,73,75,76,77,80,82,83,85,87,101,102,110,113,114,120,121,122,128,],[20,20,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-4,-22,-19,-21,20,-66,-47,-34,-35,-36,-37,20,-16,-26,-60,-61,-65,-67,-18,-15,]),'PACKAGE':([0,2,4,5,6,7,8,9,10,11,12,13,14,20,29,71,73,75,76,77,80,82,83,85,87,101,102,110,113,114,120,121,122,128,],[21,21,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-4,-22,-19,-21,21,-66,-47,-34,-35,-36,-37,21,-16,-26,-60,-61,-65,-67,-18,-15,]),'SUB':([0,2,4,5,6,7,8,9,10,11,12,13,14,20,29,71,73,75,76,77,80,82,83,85,87,101,102,110,113,114,120,121,122,128,],[22,22,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-4,-22,-19,-21,22,-66,-47,-34,-35,-36,-37,22,-16,-26,-60,-61,-65,-67,-18,-15,]),'BLESS':([0,2,4,5,6,7,8,9,10,11,12,13,14,20,29,71,73,75,76,77,80,82,83,85,87,101,102,110,113,114,120,121,122,128,],[23,23,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-4,-22,-19,-21,23,-66,-47,-34,-35,-36,-37,23,-16,-26,-60,-61,-65,-67,-18,-15,]),'RETURN':([0,2,4,5,6,7,8,9,10,11,12,13,14,20,29,71,73,75,76,77,80,82,83,85,87,101,102,110,113,114,120,121,122,128,],[24,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-4,-22,-19,-21,24,-66,-47,-34,-35,-36,-37,24,-16,-26,-60,-61,-65,-67,-18,-15,]),'MY':([0,2,4,5,6,7,8,9,10,11,12,13,14,19,20,24,29,30,34,44,57,61,62,71,72,73,75,76,77,80,81,82,83,85,87,91,92,95,96,97,98,99,101,102,110,113,114,115,117,120,121,122,123,127,128,130,133,134,],[25,25,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,25,-59,25,-4,25,25,25,25,25,25,-22,25,-19,-21,25,-66,-47,25,-34,-35,-36,-37,25,25,25,25,-70,-71,-72,25,-16,-26,-60,-61,-73,-69,-65,-67,-18,25,25,-15,25,-70,25,]),'SCALAR':([0,2,4,5,6,7,8,9,10,11,12,13,14,19,20,24,25,29,30,34,44,57,61,62,71,72,73,75,76,77,80,81,82,83,85,87,91,92,95,96,97,98,99,101,102,110,113,114,115,117,120,121,122,123,127,128,130,133,134,],[26,26,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,26,-59,26,50,-4,26,26,26,26,26,26,-22,26,-19,-21,26,-66,-47,26,-34,-35,-36,-37,26,26,26,26,-70,-71,-72,26,-16,-26,-60,-61,-73,-69,-65,-67,-18,26,26,-15,26,-70,26,]),'ARRAY':([0,2,4,5,6,7,8,9,10,11,12,13,14,19,20,24,25,29,30,34,44,57,61,62,71,72,73,75,76,77,80,81,82,83,85,87,91,92,95,96,97,98,99,101,102,110,113,114,115,117,120,121,122,123,127,128,130,133,134,],[27,27,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,27,-59,27,51,-4,27,27,27,27,27,27,-22,27,-19,-21,27,-66,-47,27,-34,-35,-36,-37,27,27,27,27,-70,-71,-72,27,-16,-26,-60,-61,-73,-69,-65,-67,-18,27,27,-15,27,-70,27,]),'HASH':([0,2,4,5,6,7,8,9,10,11,12,13,14,19,20,24,25,29,30,34,44,57,61,62,71,72,73,75,76,77,80,81,82,83,85,87,91,92,95,96,97,98,99,101,102,110,113,114,115,117,120,121,122,123,127,128,130,133,134,],[28,28,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,28,-59,28,52,-4,28,28,28,28,28,28,-22,28,-19,-21,28,-66,-47,28,-34,-35,-36,-37,28,28,28,28,-70,-71,-72,28,-16,-26,-60,-61,-73,-69,-65,-67,-18,28,28,-15,28,-70,28,]),'RFB':([2,3,4,5,6,7,8,9,10,11,12,13,14,20,26,27,28,29,38,39,40,50,51,52,62,67,68,69,70,71,75,76,77,79,80,82,83,85,87,89,91,92,102,103,110,111,112,113,114,120,121,122,128,],[-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,-42,-44,-46,-4,-38,-39,-40,-41,-43,-45,-74,-28,-29,-30,-33,-22,-21,-74,-66,-27,-47,-34,-35,-36,-37,109,-74,-74,-16,121,-26,-31,-32,-60,-61,-65,-67,-18,-15,]),'NUMBER':([2,3,4,5,6,7,8,9,10,11,12,13,14,20,24,29,30,34,44,57,61,62,71,73,75,80,81,82,83,85,87,91,92,95,96,97,98,99,101,102,110,113,114,115,117,119,120,121,122,124,127,128,133,134,],[-1,-2,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-59,46,-4,46,68,68,68,68,68,-22,-19,-21,-47,46,-34,-35,-36,-37,68,68,46,46,-70,-71,-72,-74,-16,-26,-60,-61,-73,-69,-20,-65,-67,-18,126,46,-15,-70,46,]),'EQUALS':([15,16,17,18,26,27,28,38,39,40,50,51,52,66,95,96,97,98,99,115,117,125,127,131,133,134,],[30,31,32,33,-42,-44,-46,-38,-39,-40,-41,-43,-45,96,117,-69,-70,-71,-72,117,-69,117,117,117,-70,117,]),'LB':([19,23,32,33,],[34,44,57,61,]),'STRING':([19,24,30,34,44,57,61,62,72,81,91,92,95,96,97,98,99,115,117,127,133,134,],[37,47,47,67,67,67,67,67,37,47,67,67,47,47,-70,-71,-72,-73,-69,47,-70,47,]),'NEW':([22,],[42,]),'SHIFT':([24,30,34,44,57,61,62,81,91,92,95,96,97,98,99,115,117,127,133,134,],[49,49,69,69,69,69,69,49,69,69,49,49,-70,-71,-72,-73,-69,49,-70,49,]),'SEMI':([26,27,28,35,36,37,38,39,40,41,45,46,47,48,49,50,51,52,53,54,56,58,59,60,90,100,104,105,106,107,108,109,118,126,129,],[-42,-44,-46,71,-23,-24,-38,-39,-40,73,80,-48,-49,-50,-51,-41,-43,-45,82,83,85,87,-54,-55,110,-25,122,-52,-58,-53,-56,-57,123,128,130,]),'COMMA':([26,27,28,34,35,36,37,38,39,40,44,50,51,52,57,61,62,63,66,67,68,69,70,78,79,86,88,89,91,92,100,111,112,],[-42,-44,-46,-74,72,-23,-24,-38,-39,-40,-74,-41,-43,-45,-74,-74,-74,91,-27,-28,-29,-30,-33,91,-27,91,91,91,-74,-74,72,91,91,]),'OPER':([26,27,28,38,39,40,45,46,47,48,49,50,51,52,53,66,95,96,97,98,99,105,115,116,117,118,125,127,129,131,133,134,136,],[-42,-44,-46,-38,-39,-40,81,-48,-49,-50,-51,-41,-43,-45,81,97,97,-69,-70,-71,-72,81,97,81,-69,81,97,97,81,133,135,97,81,]),'ALB':([26,27,28,31,38,39,40,50,51,52,66,95,96,97,98,99,115,117,125,127,131,133,134,],[-42,-44,-46,55,-38,-39,-40,-41,-43,-45,98,98,-69,-70,-71,-72,98,-69,98,98,98,-70,98,]),'ARB':([26,27,28,38,39,40,50,51,52,66,84,95,96,97,98,99,115,117,125,127,131,133,134,],[-42,-44,-46,-38,-39,-40,-41,-43,-45,99,106,99,-69,-70,-71,-72,99,-69,99,99,99,-70,99,]),'RB':([26,27,28,34,38,39,40,44,46,47,48,49,50,51,52,57,61,63,64,65,66,67,68,69,70,78,79,86,88,91,92,105,111,112,116,132,135,136,],[-42,-44,-46,-74,-38,-39,-40,-74,-48,-49,-50,-51,-41,-43,-45,-74,-74,90,93,94,-27,-28,-29,-30,-33,104,-27,107,108,-74,-74,-52,-31,-32,-68,-62,-63,-64,]),'HASH_OP':([26,27,28,34,38,39,40,44,50,51,52,57,61,62,63,66,67,68,69,70,78,79,86,88,89,91,92,111,112,],[-42,-44,-46,-74,-38,-39,-40,-74,-41,-43,-45,-74,-74,-74,92,-27,-28,-29,-30,-33,92,-27,92,92,92,-74,-74,92,92,]),'LFB':([33,42,43,74,93,94,],[62,-17,77,77,77,77,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,76,101,],[1,103,119,]),'statementlist':([0,76,101,],[2,2,2,]),'empty':([0,34,44,57,61,62,76,91,92,101,],[3,70,70,70,70,70,3,70,70,3,]),'statement':([0,2,76,101,],[4,29,4,4,]),'var_dec':([0,2,76,101,],[5,5,5,5,]),'function_call':([0,2,76,101,],[6,6,6,6,]),'output':([0,2,76,101,],[7,7,7,7,]),'comment':([0,2,76,101,],[8,8,8,8,]),'cond_stat':([0,2,76,101,],[9,9,9,9,]),'package_dec':([0,2,76,101,],[10,10,10,10,]),'cons_dec':([0,2,76,101,],[11,11,11,11,]),'function_def':([0,2,76,101,],[12,12,12,12,]),'bless_st':([0,2,76,101,],[13,13,13,13,]),'return_st':([0,2,76,101,],[14,14,14,14,]),'scalar_var':([0,2,19,24,30,34,44,57,61,62,72,76,81,91,92,95,96,101,123,127,130,134,],[15,15,38,38,38,38,38,38,38,38,38,15,38,38,38,38,38,15,38,38,38,38,]),'variable':([0,2,19,24,30,34,44,57,61,62,72,76,81,91,92,95,96,101,123,127,130,134,],[16,16,36,48,48,66,79,79,79,79,36,16,48,79,79,48,48,16,125,48,131,48,]),'arr_var':([0,2,19,24,30,34,44,57,61,62,72,76,81,91,92,95,96,101,123,127,130,134,],[17,17,39,39,39,39,39,39,39,39,39,17,39,39,39,39,39,17,39,39,39,39,]),'hash_var':([0,2,19,24,30,34,44,57,61,62,72,76,81,91,92,95,96,101,123,127,130,134,],[18,18,40,40,40,40,40,40,40,40,40,18,40,40,40,40,40,18,40,40,40,40,]),'out':([19,72,],[35,100,]),'exp':([24,30,81,95,96,127,134,],[45,53,105,116,118,129,136,]),'input':([31,],[54,]),'arr_exp':([32,],[56,]),'hash_exp':([33,],[58,]),'first_hash':([33,],[59,]),'second_hash':([33,],[60,]),'argument':([34,44,57,61,62,91,92,],[63,78,86,88,89,111,112,]),'condition':([34,],[64,]),'for_cond':([34,],[65,]),'set_cons':([42,],[74,]),'block':([43,74,93,94,],[75,102,113,114,]),'l_braces':([43,74,93,94,],[76,76,76,76,]),'sign':([66,95,115,125,127,131,134,],[95,115,115,127,115,134,115,]),'upind':([73,],[101,]),'r_braces':([103,],[120,]),'lowind':([119,],[124,]),'increment':([130,],[132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> statementlist','body',1,'p_body','parsing.py',11),
  ('body -> empty','body',1,'p_body','parsing.py',12),
  ('statementlist -> statement','statementlist',1,'p_statementlist','parsing.py',19),
  ('statementlist -> statementlist statement','statementlist',2,'p_statementlist','parsing.py',20),
  ('statement -> var_dec','statement',1,'p_statement','parsing.py',27),
  ('statement -> function_call','statement',1,'p_statement','parsing.py',28),
  ('statement -> output','statement',1,'p_statement','parsing.py',29),
  ('statement -> comment','statement',1,'p_statement','parsing.py',30),
  ('statement -> cond_stat','statement',1,'p_statement','parsing.py',31),
  ('statement -> package_dec','statement',1,'p_statement','parsing.py',32),
  ('statement -> cons_dec','statement',1,'p_statement','parsing.py',33),
  ('statement -> function_def','statement',1,'p_statement','parsing.py',34),
  ('statement -> bless_st','statement',1,'p_statement','parsing.py',35),
  ('statement -> return_st','statement',1,'p_statement','parsing.py',36),
  ('package_dec -> PACKAGE KEYWORD SEMI upind body lowind NUMBER SEMI','package_dec',8,'p_package_dec','parsing.py',42),
  ('cons_dec -> SUB NEW set_cons block','cons_dec',4,'p_cons_dec','parsing.py',48),
  ('set_cons -> <empty>','set_cons',0,'p_set_cons','parsing.py',56),
  ('bless_st -> BLESS LB argument RB SEMI','bless_st',5,'p_bless_st','parsing.py',62),
  ('upind -> <empty>','upind',0,'p_upind','parsing.py',68),
  ('lowind -> <empty>','lowind',0,'p_lowind','parsing.py',75),
  ('function_def -> SUB KEYWORD block','function_def',3,'p_function_def','parsing.py',82),
  ('output -> KEYWORD out SEMI','output',3,'p_output','parsing.py',90),
  ('out -> variable','out',1,'p_out','parsing.py',97),
  ('out -> STRING','out',1,'p_out','parsing.py',98),
  ('out -> out COMMA out','out',3,'p_out','parsing.py',99),
  ('function_call -> KEYWORD LB argument RB SEMI','function_call',5,'p_function_call','parsing.py',106),
  ('argument -> variable','argument',1,'p_argument','parsing.py',113),
  ('argument -> STRING','argument',1,'p_argument','parsing.py',114),
  ('argument -> NUMBER','argument',1,'p_argument','parsing.py',115),
  ('argument -> SHIFT','argument',1,'p_argument','parsing.py',116),
  ('argument -> argument COMMA argument','argument',3,'p_argument','parsing.py',117),
  ('argument -> argument HASH_OP argument','argument',3,'p_argument','parsing.py',118),
  ('argument -> empty','argument',1,'p_argument','parsing.py',119),
  ('var_dec -> scalar_var EQUALS exp SEMI','var_dec',4,'p_var_dec','parsing.py',126),
  ('var_dec -> variable EQUALS input SEMI','var_dec',4,'p_var_dec','parsing.py',127),
  ('var_dec -> arr_var EQUALS arr_exp SEMI','var_dec',4,'p_var_dec','parsing.py',128),
  ('var_dec -> hash_var EQUALS hash_exp SEMI','var_dec',4,'p_var_dec','parsing.py',129),
  ('variable -> scalar_var','variable',1,'p_variable','parsing.py',145),
  ('variable -> arr_var','variable',1,'p_variable','parsing.py',146),
  ('variable -> hash_var','variable',1,'p_variable','parsing.py',147),
  ('scalar_var -> MY SCALAR','scalar_var',2,'p_scalar_var','parsing.py',153),
  ('scalar_var -> SCALAR','scalar_var',1,'p_scalar_var','parsing.py',154),
  ('arr_var -> MY ARRAY','arr_var',2,'p_arr_var','parsing.py',163),
  ('arr_var -> ARRAY','arr_var',1,'p_arr_var','parsing.py',164),
  ('hash_var -> MY HASH','hash_var',2,'p_hash_var','parsing.py',173),
  ('hash_var -> HASH','hash_var',1,'p_hash_var','parsing.py',174),
  ('return_st -> RETURN exp SEMI','return_st',3,'p_return_st','parsing.py',183),
  ('exp -> NUMBER','exp',1,'p_exp','parsing.py',192),
  ('exp -> STRING','exp',1,'p_exp','parsing.py',193),
  ('exp -> variable','exp',1,'p_exp','parsing.py',194),
  ('exp -> SHIFT','exp',1,'p_exp','parsing.py',195),
  ('exp -> exp OPER exp','exp',3,'p_exp','parsing.py',196),
  ('arr_exp -> LB argument RB','arr_exp',3,'p_arr_exp','parsing.py',205),
  ('hash_exp -> first_hash','hash_exp',1,'p_hash_exp','parsing.py',211),
  ('hash_exp -> second_hash','hash_exp',1,'p_hash_exp','parsing.py',212),
  ('first_hash -> LB argument RB','first_hash',3,'p_first_hash','parsing.py',218),
  ('second_hash -> LFB argument RFB','second_hash',3,'p_second_hash','parsing.py',236),
  ('input -> ALB KEYWORD ARB','input',3,'p_input','parsing.py',254),
  ('comment -> COMMENT','comment',1,'p_comment','parsing.py',261),
  ('cond_stat -> KEYWORD LB condition RB block','cond_stat',5,'p_cond_stat','parsing.py',268),
  ('cond_stat -> KEYWORD LB for_cond RB block','cond_stat',5,'p_cond_stat','parsing.py',269),
  ('for_cond -> variable EQUALS exp SEMI variable sign exp SEMI increment','for_cond',9,'p_for_cond','parsing.py',276),
  ('increment -> variable OPER OPER','increment',3,'p_increment','parsing.py',286),
  ('increment -> variable sign exp','increment',3,'p_increment','parsing.py',287),
  ('block -> l_braces body r_braces','block',3,'p_block','parsing.py',298),
  ('l_braces -> LFB','l_braces',1,'p_l_braces','parsing.py',305),
  ('r_braces -> RFB','r_braces',1,'p_r_braces','parsing.py',312),
  ('condition -> variable sign exp','condition',3,'p_condition','parsing.py',319),
  ('sign -> EQUALS','sign',1,'p_sign','parsing.py',326),
  ('sign -> OPER','sign',1,'p_sign','parsing.py',327),
  ('sign -> ALB','sign',1,'p_sign','parsing.py',328),
  ('sign -> ARB','sign',1,'p_sign','parsing.py',329),
  ('sign -> sign sign','sign',2,'p_sign','parsing.py',330),
  ('empty -> <empty>','empty',0,'p_empty','parsing.py',340),
]
